//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2016                                      //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                               FEBRUARI 2010                                          //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
// Deze file bevat een basis voor de Vesta instellingen die vanuit iedere run           //
// geincludeerd wordt en per run per Zichtjaar kan worden overreden                     //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container VestaRun
{
//	INCLUDE MODEL AND FIXED SETTINGS SECTION
	#include <%projDir%/cfg/stam/ConfigSettings.dms>
	#include <%projDir%/cfg/stam/ExportSettings.dms>
	#include <%projDir%/cfg/stam.dms>
	#include <%projDir%/Runs/UserInput1.dms>
//	END OF INCLUDE SECTION
	container UserInput2010: Using = "Vesta/Units"
	{
		parameter<Percent> VAT := 21[Percent]; // @USERINPUT, zie ook: /UserInput1/Beleidsopties/EIA/gebouw/bwe
		parameter<Percent> VAT_gv := 0.5*(21.0+6.0)[Percent]; // BTW op gebouwverbetering
		
		container RuimtelijkeVraagOpties
		{
			container DragerSpecifiekeOpties
			{
				parameter<Float64> RuimteVerwarming:      [ 1.0 ];
				parameter<Float64> Koude:                 [ 1.0 ];
				parameter<Float64> WarmWater:             [ 1.0 ];
				parameter<Float64> ElektrischeApparatuur: [ 1.0 ];
			}
			container LokaleSpecifiekeOpties
			{
				container GenericBase
				{
					container Opwekking 
					{
						parameter<Ratio> Zon_PV:      [ 0.0 ];
						parameter<Ratio> ZonneBoiler: [ 0.0 ];
						
						parameter<Ratio> mWKK:   [ 0.0 ]; // niet hier aanzetten als je het alleen voor woningen aan wilt, dan specifiek voor BebouwingsComponent Woning of UitlegWoning instellen hieronder bij BaseLine
						parameter<Ratio> LTV:         [ 0.0 ];
					}
					container Verbeteringen
					{
						// @USERINPUT: 'Never', 'Always'
						// Letters verwijzen naar kolomheaders in het "Dataset_woningen2013_200313.xls"-bestand
						parameter<String> S_H_T:   [ 'Criteria/Never' ]; // was: Sprong A
						parameter<String> S_H_B:   [ 'Criteria/Never' ]; // was: Sprong B
						parameter<String> S_H_AP:  [ 'Criteria/Never' ]; // was: Sprong C
						parameter<String> S_T_B:    [ 'Criteria/Never' ]; // was: Sprong D
						parameter<String> S_T_AP:   [ 'Criteria/Never' ]; // was: Sprong E
						parameter<String> S_B_AP:   [ 'Criteria/Never' ]; // was: Sprong F
						
						// labelsprongen naar A+ inclusief eWP aan (incl lt-afgiftesysteem)
						parameter<String> S_H_eWP: [ 'Criteria/Never' ]; // naar A+ met eWP
						parameter<String> S_T_eWP:  [ 'Criteria/Never' ]; // van tussenlabel naar A+ met eWP
						parameter<String> S_B_eWP:  [ 'Criteria/Never' ]; // van B naar A+ met eWP.
						parameter<String> S_AP_eWP: [ 'Criteria/Never' ];  // van A+ zonder eWP naar A+ met eWP
						
						// labelsprongen naar A+ inclusief EWV
						parameter<String> S_H_EWV: [ 'Criteria/Never' ]; // naar A+ met EWV
						parameter<String> S_T_EWV:  [ 'Criteria/Never' ]; // van tussenlabel naar A+ met EWV
						parameter<String> S_B_EWV:  [ 'Criteria/Never' ]; // van B naar A+ met EWV.
						parameter<String> S_AP_EWV: [ 'Criteria/Never' ];  // van A+ zonder eWP naar A+ met EWV
						
						parameter<bool> SpringMeestRendabel  : [ false ] ; // maak rentabiliteitsafweging tbv bebouwingobject eigenaren indien true
						parameter<bool> SpringMaatschappelijk: [ false ] ; // maak maatschappelijke rentabiliteitsafweging indien true en SpringMeestRendabel = false
						
						parameter<Jaar> RuimteVerwarmingsJaar: [ 2020 ];
					}
					container Kosten
					{
						parameter<Ratio> VerbeterMinMaxSchuif:   [ 0.5 ]; // 0.0 = minimale kosten; 1.0 = maximale kosten.
						parameter<Ratio> LeercurveMinMaxSchuif:  [ 0.5 ]; // 0.0 = optimistische leercurve; 1.0= pessimistische leercurve
						parameter<Ratio> LeercurveGebruikSchuif: [ 1.0 ]; // 0.0 = kosten constant; 1.0 = Leercurve geheel in gebruik
					}
					container Opbrengsten
					{
						// De volgende schuif heeft betrekking op de opbrengsten voor de energieproducenten, dus Vastrecht en Aansluitbijdrage. 
						// Dat zijn kosten voor de eindgebruikers.
						// hoge opbrengsten zijn zo gekoppeld aan lage kosten, dus optimistisch voor de sector, 
						// danwel lage opbrengsten en hoge kosten: pessimistisch. 
						// Kan ook los geschoven worden
						parameter<Ratio> MinMaxSchuif := 1.0[Ratio] - Kosten/VerbeterMinMaxSchuif;
						parameter<Ratio> HuurVerlagingBijGebiedsOptieSchuif := MinMaxSchuif; // @USERINPUT: 0.0 is geen huurverlaging; 1.0 is volledige verlaging (E 160,-) per woning
					}
				}
	
				container BagWoning :   Expr  = "GenericBase";
				container BagUtil   :   Expr  = "GenericBase";
				container Woning :      Expr  = "GenericBase";
				container Utiliteit:    Expr  = "GenericBase";
				container Glastuinbouw: Expr  = "GenericBase";
				container UitlegWoning: Expr  = "Woning"
				{
					container Opwekking : Expr = "Woning/Opwekking"
					{
						parameter<Ratio> eWP:         [ 0.0 ];
						parameter<Ratio> mWKK:   [ 0.0 ]; // niet hier aanzetten als je het voor uitleg woningen aan wilt
					}
				}
				container UitlegUtil:   Expr  = "Utiliteit";
				container UitlegGlTb:   Expr  = "Glastuinbouw";
			}
		}
		
		container Voorkeuren: Descr = "Blok 4"
		{
			container AanbodOpties
			{
				parameter<UInt32> Aantal: [ 0 ]; // @USERINPUT
				
				parameter<Vesta/Classifications/AanbodOptie> Optie1: Expr = "Vesta/Classifications/AanbodOptie/GeoThermie";
				parameter<Vesta/Classifications/AanbodOptie> Optie2: Expr = "Vesta/Classifications/AanbodOptie/RestWarmte";
				parameter<Vesta/Classifications/AanbodOptie> Optie3: Expr = "Vesta/Classifications/AanbodOptie/BioWKK";
				parameter<Vesta/Classifications/AanbodOptie> Optie4: Expr = "Vesta/Classifications/AanbodOptie/WijkWKK";
			}
			
			parameter<float64> MinderDanAndersFactor := 1.0; // niet minder dan anders; zet op bijvoorbeeld 0.9 voor 10% korting op de volgens de WarmteWet berekende prijs.
			
			parameter<bool>   IsVasteWarmtePrijs := false; // impl vaste warmteprijs in EUR_GJ.?
			parameter<EUR_GJ> VasteWarmtePrijs := 25[EUR_GJ]; // wordt alleen gebruikt indien IsVasteWarmtePrijs
			
			parameter<float64> GroenGasFactor := 0.10; // 90% reguier gas en 10% groen gas (zonder Co2 uitstoot).
		}
		
		container Beleidsopties {
			container EIA: Descr = "Energie Inversterings aftrek, zoals  MIA/VAMIL etc."
			{
				// Investeringssubsidie: bepaald percentage van een investering wordt door de overheid betaald
				// in te stellen per actor en per technologie voorzover actor = opwekker en per zichtjaar als percentage van de investering 
				container EigenarenBase {
					parameter<Float64> R_SplitIncentiveFactor := 1.0; // 0.6 = eigenaar krijgt 60% van de door gebruiker vermeden kosten; dit speelt een rol igv SpringMeestRendabel
					parameter<Float64> S_LokaleOpwekking   := 0.0; // 
					parameter<Float64> S_GebouwVerbetering := 0.0; // 0.1 = 10% subsidie op gebouwverbetering incl eWP en EWV
				}
				container bwe := EigenarenBase
				{
					parameter<Float64> S_InpandigeDistributie:= 0.0; // 0.1 = 10% subsidie op inpandige di incl eWP en EWV, alleen voor meergezinswoningen die niet in het zichtjaar gebouwd worden.
				}
				container nwe := EigenarenBase;
				container bue := EigenarenBase;
				container nue := EigenarenBase;
				container bte := EigenarenBase;
				container nte := EigenarenBase;
	
				parameter<Float64> wd := 0.0; // wijkdistributie 0.20 = 20% subsidie op wijkdistributie investeringen.
				parameter<Float64> pt := 0.0; // primair transport
				
				// voor opwekkings-type specifieke investerings-subsidies
				attribute<Float64> ow(Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList) := const(0.0, Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList);
			}
			container EEA: Descr = "Energie Exploitatie aftrek"
			{
				//	Exploitatiesubsidies: per geleverde GJ of per verkochte EUR.per zichtjaar in te stellen"
				container Kosten
				{
					// percentage op totale kosten (kapitaallasten + O&M) per actor aan actor
					container Base {
						parameter<Float64> S_LokaleOpwekking   := 0.0;
						parameter<Float64> S_GebouwVerbetering := 0.0;
						parameter<Float64> S_Leverancier := 0.0;
						parameter<Float64> S_KL_p        := 0.0;
						parameter<Float64> S_KL_o        := 0.0;
						parameter<Float64> S_Onderhoud   := 0.0;
						parameter<Float64> S_Admin       := 0.0;
	//					parameter<Float64> S_Gemeente    := 0.0; // rijksoverheid->gemeente: kan beter via gemeentefonds
	//					parameter<Float64> EmissieRechten:= 0.0;
					}
				}
				parameter<Float64> wd := 0.0; // wijkdistributie 0.20 = 20% subsidie op wijkdistributie investeringen.
				parameter<Float64> pt := 0.0; // primair transport
				// SDE: subsidie [EUR per GJ] per gebiedsoptie technologie (STEG, Geothermie) aan opwekker.
				attribute<Float64> ow(Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList) := const(0.0, Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList);
			}
		}

		parameter<String> PlanRegioNaam :=  // @USERINPUT
				'buurt';
	//			'PC4';
	//			'grid500m';
	//			'grid1km';
	//			'grid2km';
		
		container ReportOpties
		{
			unit<UInt32> RapportageRegio := Vesta/Geography/RegioIndelingen/NL; // @USERINPUT 'NL', 'Provincie', 'Gemeente'
			
			//'0=geen onderverdeling',
			//'1=woningtype',
			//'2=bouwkjaarklasse',
			//'3=woningtype & bouwjaarklasse',   //	Werkt (nog) niet met BagWoning
			//'4=Eigendom(koop/huur/onbekend)',
			//'8=inkomensklasse',
			parameter<Classifications/BestaandeWoningRapGroep> BestaandeWoningRapGroep: [ 3 ];
		}
		attribute<Float64> klimaat(Vesta/Geography/rdc_100lu): Expr = "Float64(Vesta/Brondata/klimaat/scenario_knmi_g_plus/J2010)";
	}

	container UserInput2020: Expr = "UserInput2010", using = "Vesta/Units"
	{
		container RuimtelijkeVraagOpties: Expr = "UserInput2010/RuimtelijkeVraagOpties"
		{
			container LokaleSpecifiekeOpties: Expr = "UserInput2010/RuimtelijkeVraagOpties/LokaleSpecifiekeOpties"
			{
				container GenericBase
				{
					container Opwekking 
					
					{
						parameter<Ratio> Zon_PV:      [ 0.0 ];
						parameter<Ratio> ZonneBoiler: [ 0.0 ];
						
//						parameter<Ratio> eWP:         [ 0.0 ];
						parameter<Ratio> mWKK:   [ 0.0 ];
						parameter<Ratio> LTV:         [ 0.0 ];
						parameter<Ratio> EWV:         [ 0.0 ]; // USERINPUT: hier aanzettten voor demonstraties van mantis issue 368.
					}
					container Verbeteringen
					{
						// Letters verwijzen naar kolomheaders in het "Dataset_woningen2013_200313.xls"-bestand
						parameter<String> S_H_T:   [ 'Criteria/Always' ]; // was: Sprong A (een initiele sprong)
						parameter<String> S_H_B:   [ 'Criteria/Always' ]; // was: Sprong B (een initiele sprong)
						parameter<String> S_H_AP:  [ 'Criteria/Always' ]; // was: Sprong C (een initiele sprong)
						parameter<String> S_T_B:    [ 'Criteria/Always' ]; // was: Sprong D (een vervolgsprong)
						parameter<String> S_T_AP:   [ 'Criteria/Always' ]; // was: Sprong E (een vervolgsprong)
						parameter<String> S_B_AP:   [ 'Criteria/Always' ]; // was: Sprong F (een vervolgsprong)
						
						// labelsprongen naar A+ inclusief eWP aan (incl lt-afgiftesysteem)
						parameter<String> S_H_eWP: [ 'Criteria/Always' ]; // naar A+ met eWP
						parameter<String> S_T_eWP:  [ 'Criteria/Always' ]; // van tussenlabel naar A+ met eWP
						parameter<String> S_B_eWP:  [ 'Criteria/Always' ]; // van B naar A+ met eWP.
						parameter<String> S_AP_eWP: [ 'Criteria/Always' ];  // van A+ zonder eWP naar A+ met eWP
						
						// labelsprongen naar A+ inclusief EWV (staat nog uit zolang EWV rentabiliteitsafweging nog niet goed is geimplementeerd
						parameter<String> S_H_EWV: [ 'Criteria/Always' ]; // naar A+ met EWV
						parameter<String> S_T_EWV:  [ 'Criteria/Always' ]; // van tussenlabel naar A+ met EWV
						parameter<String> S_B_EWV:  [ 'Criteria/Always' ]; // van B naar A+ met EWV.
						parameter<String> S_AP_EWV: [ 'Criteria/Always' ];  // van A+ zonder eWP naar A+ met EWV
						
						parameter<bool> SpringMeestRendabel  : [ true  ] ; // maak rentabiliteitsafweging tbv bebouwingobject eigenaren indien true
						parameter<bool> SpringMaatschappelijk: [ false ] ; // maak maatschappelijke rentabiliteitsafweging indien true en SpringMeestRendabel = false
					}
				}
				container BagWoning :   Expr  = "GenericBase";
				container BagUtil   :   Expr  = "GenericBase";
				container Woning      : Expr = "GenericBase";
				container Utiliteit   : Expr = "GenericBase";
				container Glastuinbouw: Expr = "GenericBase";
				container UitlegWoning: Expr = "GenericBase"
				{
					container Opwekking : Expr = "Woning/Opwekking"
					{
						parameter<Ratio> eWP:         [ 0.0 ];
						parameter<Ratio> mWKK:   [ 0.0 ];
						parameter<Ratio> LTV:         [ 0.0 ];
						parameter<Ratio> EWV:         [ 0.0 ];
					}
				}
				container UitlegUtil:   Expr  = "Utiliteit";
				container UitlegGlTb:   Expr  = "Glastuinbouw";
			}
		}

		container Voorkeuren: Expr = "UserInput2010/Voorkeuren"
		{
			container AanbodOpties
			{
				parameter<UInt32> Aantal: [ 4 ]; // @USERINPUT
				
				parameter<Vesta/Classifications/AanbodOptie> Optie1: Expr = "Vesta/Classifications/AanbodOptie/GeoThermie";
				parameter<Vesta/Classifications/AanbodOptie> Optie2: Expr = "Vesta/Classifications/AanbodOptie/RestWarmte";
				parameter<Vesta/Classifications/AanbodOptie> Optie3: Expr = "Vesta/Classifications/AanbodOptie/BioWKK";
				parameter<Vesta/Classifications/AanbodOptie> Optie4: Expr = "Vesta/Classifications/AanbodOptie/WijkWKK";
			}

			parameter<float64> MinderDanAndersFactor := 1.0; // niet minder dan anders; zet op bijvoorbeeld 0.9 voor 10% korting op de volgens de WarmteWet berekende prijs.
			
			parameter<bool>   IsVasteWarmtePrijs := true; // impl vaste warmteprijs in EUR_GJ.?
			parameter<EUR_GJ> VasteWarmtePrijs := 25.3[EUR_GJ]; // wordt alleen gebruikt indien IsVasteWarmtePrijs
			
			parameter<float64> GroenGasFactor := 0.10; // 90% reguier gas en 10% groen gas (zonder Co2 uitstoot).
		}
		
		container Beleidsopties {
			container EIA: Descr = "Energie Inversterings aftrek, zoals  MIA/VAMIL etc."
			{
				// Investeringssubsidie: bepaald percentage van een investering wordt door de overheid betaald
				// in te stellen per actor en per technologie voorzover actor = opwekker en per zichtjaar als percentage van de investering 
				container EigenarenBase {
					parameter<Float64> R_SplitIncentiveFactor := 0.8; // 0.6 = eigenaar krijgt 60% van de door gebruiker vermeden kosten; dit speelt een rol igv SpringMeestRendabel
					parameter<Float64> S_LokaleOpwekking   := 0.0; // 
					parameter<Float64> S_GebouwVerbetering := 0.0; // 0.1 = 10% subsidie op gebouwverbetering incl eWP en EWV
				}
				container bwe := EigenarenBase
				{
					parameter<Float64> S_InpandigeDistributie:= 0.0; // 0.1 = 10% subsidie op inpandige di incl eWP en EWV, alleen voor meergezinswoningen die niet in het zichtjaar gebouwd worden.
				}
				container nwe := EigenarenBase;
				container bue := EigenarenBase;
				container nue := EigenarenBase;
				container bte := EigenarenBase;
				container nte := EigenarenBase;
	
				parameter<Float64> wd := 0.0; // wijkdistributie 0.20 = 20% subsidie op wijkdistributie investeringen.
				parameter<Float64> pt := 0.0; // primair transport
				
				// voor opwekkings-type specifieke investerings-subsidies
				attribute<Float64> ow(Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList) := const(0.0, Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList);
			}
			container EEA: Descr = "Energie Exploitatie aftrek"
			{
				//	Exploitatiesubsidies: per geleverde GJ of per verkochte EUR.per zichtjaar in te stellen"
				container Kosten
				{
					// percentage op totale kosten (kapitaallasten + O&M) per actor aan actor
					container Base {
						parameter<Float64> S_LokaleOpwekking   := 0.0;
						parameter<Float64> S_GebouwVerbetering := 0.0;
						parameter<Float64> S_Leverancier := 0.0;
						parameter<Float64> S_KL_p        := 0.0;
						parameter<Float64> S_KL_o        := 0.0;
						parameter<Float64> S_Onderhoud   := 0.0;
						parameter<Float64> S_Admin       := 0.0;
	//					parameter<Float64> S_Gemeente    := 0.0; // rijksoverheid->gemeente: kan beter via gemeentefonds
	//					parameter<Float64> EmissieRechten:= 0.0;
					}
				}
				parameter<Float64> wd := 0.0; // wijkdistributie 0.20 = 20% subsidie op wijkdistributie investeringen.
				parameter<Float64> pt := 0.0; // primair transport
				// SDE: subsidie [EUR per GJ] per gebiedsoptie technologie (STEG, Geothermie) aan opwekker.
				attribute<Float64> ow(Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList) := const(0.0, Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList);
			}
		}

		attribute<Float64> klimaat(Vesta/Geography/rdc_100lu): Expr = "Float64(Vesta/Brondata/klimaat/scenario_knmi_g_plus/J2020)";
	}

	container UserInput2030: Expr = "UserInput2020", using = "Vesta/Units"
	{
		attribute<Float64> klimaat(Vesta/Geography/rdc_100lu): Expr = "Float64(Vesta/Brondata/klimaat/scenario_knmi_g_plus/J2030)";
	}

	container UserInput2040: Expr = "UserInput2030"
	{
		attribute<Float64> klimaat(Vesta/Geography/rdc_100lu): Expr = "Float64(Vesta/Brondata/klimaat/scenario_knmi_g_plus/J2040)";
	}

	container UserInput2050: Expr = "UserInput2040"
	{
		attribute<Float64> klimaat(Vesta/Geography/rdc_100lu): Expr = "Float64(Vesta/Brondata/klimaat/scenario_knmi_g_plus/J2050)";
	}

	container RunContext: using = "Vesta"
	{
		container Y2010:
			Expr = 
				"CalculationSchemes/VestaRun("
					"UserInput2010,"
					"ScenarioSpecs/Bebouwing/Trend/J2010,"
					"ScenarioSpecs/VestaRunOpties/VraagKentallen/BaseLine, "
					"ScenarioSpecs/VestaRunOpties/AanbodKentallen/BaseLine, "
					"value(2010, Units/Jaar)"
				")";
		container Y2020:
			Expr = 
				"CalculationSchemes/VestaRun("
					"UserInput2020,"
					"ScenarioSpecs/Bebouwing/Trend/J2020,"
					"ScenarioSpecs/VestaRunOpties/VraagKentallen/BaseLine, "
					"ScenarioSpecs/VestaRunOpties/AanbodKentallen/BaseLine, "
					"value(2020, Units/Jaar),"
					"Y2010/EndState"
				")";
		container Y2030:
			Expr = 
				"CalculationSchemes/VestaRun("
					"UserInput2030,"
					"ScenarioSpecs/Bebouwing/Trend/J2030,"
					"ScenarioSpecs/VestaRunOpties/VraagKentallen/BaseLine, "
					"ScenarioSpecs/VestaRunOpties/AanbodKentallen/BaseLine, "
					"value(2030, Units/Jaar),"
					"Y2020/EndState"
				")";
		container Y2040:
			Expr = 
				"CalculationSchemes/VestaRun("
					"UserInput2040,"
					"ScenarioSpecs/Bebouwing/Trend/J2040,"
					"ScenarioSpecs/VestaRunOpties/VraagKentallen/BaseLine, "
					"ScenarioSpecs/VestaRunOpties/AanbodKentallen/BaseLine, "
					"value(2040, Units/Jaar),"
					"Y2030/EndState"
				")";
		container Y2050:
			Expr = 
				"CalculationSchemes/VestaRun("
					"UserInput2050,"
					"ScenarioSpecs/Bebouwing/Trend/J2050,"
					"ScenarioSpecs/VestaRunOpties/VraagKentallen/BaseLine, "
					"ScenarioSpecs/VestaRunOpties/AanbodKentallen/BaseLine, "
					"value(2050, Units/Jaar),"
					"Y2040/EndState"
				")";
		parameter<String> GenerateAll: Expr  = "'Ready'", 
			ExplicitSuppliers = 
				"Y2010/indicatoren/GenerateAll;"
				"Y2020/indicatoren/GenerateAll;"
				"Y2030/indicatoren/GenerateAll;"
				"Y2040/indicatoren/GenerateAll;"
				"Y2050/indicatoren/GenerateAll";
	}
}
