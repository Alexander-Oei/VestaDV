//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2018                                      //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                                    JUNI 2018                                         //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
// Deze file bevat een basis voor de Vesta instellingen die vanuit iedere run           //
// geincludeerd wordt en per run per Zichtjaar kan worden overreden                     //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container UserInput1: Using = "Vesta/Units"
{
	container BebouwingsScenario  := Vesta/ScenarioSpecs/Bebouwing;
	container KlimaatScenario     := Vesta/Brondata/klimaat/scenario_knmi_g_plus;
	
	container VraagKentallen  := Vesta/ScenarioSpecs/VestaRunOpties/VraagKentallen/BaseLine;
	container AanbodKentallen := Vesta/ScenarioSpecs/VestaRunOpties/AanbodKentallen/BaseLine;
	
	parameter<Percent> VAT := 21[Percent]; // @USERINPUT, zie ook: /UserInput1/Beleidsopties/EIA/gebouw/bwe
	parameter<Percent> VAT_gv := 0.5*(21.0+6.0)[Percent]; // BTW op gebouwverbetering
	
	container RuimtelijkeVraagOpties
	{
		container DragerSpecifiekeOpties
		{
			parameter<Float64> RuimteVerwarming:      [ 1.0 ];
			parameter<Float64> Koude:                 [ 1.0 ];
			parameter<Float64> WarmWater:             [ 1.0 ];
			parameter<Float64> ElektrischeApparatuur: [ 1.0 ];
		}
		container LokaleSpecifiekeOpties
		{
			container GenericBase
			{
				container OpwekkingF
				{
					parameter<Ratio> Zon_PV:      [ 0.0 ];
					parameter<Ratio> ZonneBoiler: [ 0.0 ];
					
					parameter<Ratio> mWKK:   [ 0.0 ]; // niet hier aanzetten als je het alleen voor woningen aan wilt, dan specifiek voor BebouwingsComponent Woning of UitlegWoning instellen hieronder bij BaseLine
					attribute<Ratio> hWP(Classifications/energielabel) := const(0.0, Classifications/energielabel); // uit in 2010
				}
				container Verbeteringen
				{
					// @USERINPUT: 'Never', 'Always'
					// Letters verwijzen naar kolomheaders in het "Dataset_woningen2013_200313.xls"-bestand
					parameter<String> S_H_T:   [ 'Criteria/Never' ]; // was: Sprong A
					parameter<String> S_H_B:   [ 'Criteria/Never' ]; // was: Sprong B
					parameter<String> S_H_AP:  [ 'Criteria/Never' ]; // was: Sprong C
					parameter<String> S_T_B:    [ 'Criteria/Never' ]; // was: Sprong D
					parameter<String> S_T_AP:   [ 'Criteria/Never' ]; // was: Sprong E
					parameter<String> S_B_AP:   [ 'Criteria/Never' ]; // was: Sprong F
					
					// labelsprongen naar A+ inclusief eWP aan (incl lt-afgiftesysteem)
					parameter<String> S_H_eWP: [ 'Criteria/Never' ]; // naar A+ met eWP
					parameter<String> S_T_eWP:  [ 'Criteria/Never' ]; // van tussenlabel naar A+ met eWP
					parameter<String> S_B_eWP:  [ 'Criteria/Never' ]; // van B naar A+ met eWP.
					parameter<String> S_AP_eWP: [ 'Criteria/Never' ];  // van A+ zonder eWP naar A+ met eWP
					
					// labelsprongen naar A+ inclusief EWV
					parameter<String> S_H_EWV: [ 'Criteria/Never' ]; // naar A+ met EWV
					parameter<String> S_T_EWV:  [ 'Criteria/Never' ]; // van tussenlabel naar A+ met EWV
					parameter<String> S_B_EWV:  [ 'Criteria/Never' ]; // van B naar A+ met EWV.
					parameter<String> S_AP_EWV: [ 'Criteria/Never' ];  // van A+ zonder eWP naar A+ met EWV
					
					parameter<bool> SpringMeestRendabel  : [ false ] ; // maak rentabiliteitsafweging tbv bebouwingobject eigenaren indien true
					parameter<bool> SpringMaatschappelijk: [ false ] ; // maak maatschappelijke rentabiliteitsafweging indien true en SpringMeestRendabel = false
					
					parameter<Jaar> RuimteVerwarmingsJaar: [ 2020 ];
				}
				container Kosten
				{
					parameter<Ratio> VerbeterMinMaxSchuif:   [ 0.5 ]; // 0.0 = minimale kosten; 1.0 = maximale kosten.
					parameter<Ratio> LeercurveMinMaxSchuif:  [ 0.5 ]; // 0.0 = optimistische leercurve; 1.0= pessimistische leercurve
					parameter<Ratio> LeercurveGebruikSchuif: [ 1.0 ]; // 0.0 = kosten constant; 1.0 = Leercurve geheel in gebruik
					parameter<Ratio> IndividueleVerwarmingSchuif:[ 0.0 ]; // 0.0 = alle meergezinswoningen hebben blokverwarming; 1.0 = alle meergezinswonigen hebben individuele verwarming
				}
				container Opbrengsten
				{
					// De volgende schuif heeft betrekking op de opbrengsten voor de energieproducenten, dus Vastrecht en Aansluitbijdrage. 
					// Dat zijn kosten voor de eindgebruikers.
					// hoge opbrengsten zijn zo gekoppeld aan lage kosten, dus optimistisch voor de sector, 
					// danwel lage opbrengsten en hoge kosten: pessimistisch. 
					// Kan ook los geschoven worden
					parameter<Ratio> MinMaxSchuif := 1.0[Ratio] - Kosten/VerbeterMinMaxSchuif;
					parameter<Ratio> HuurVerlagingBijGebiedsOptieSchuif := MinMaxSchuif; // @USERINPUT: 0.0 is geen huurverlaging; 1.0 is volledige verlaging (E 160,-) per woning
				}
			}

			container Woning      := GenericBase;
			container Utiliteit   := GenericBase;
			container Glastuinbouw:= GenericBase;
			container UitlegWoning:= Woning;
			container UitlegUtil  := Utiliteit;
			container UitlegGlTb  := Glastuinbouw;
		}
	}
	
	container Voorkeuren: Descr = "Blok 4"
	{
		container AanbodOpties
		{
			parameter<UInt32> Aantal: [ 0 ]; // @USERINPUT
		}
		
		parameter<float64> MinderDanAndersFactor := 1.0; // niet minder dan anders; zet op bijvoorbeeld 0.9 voor 10% korting op de volgens de WarmteWet berekende prijs.
		
		parameter<bool>   IsVasteWarmtePrijs := false; // impl vaste warmteprijs in EUR_GJ.?
		parameter<EUR_GJ> VasteWarmtePrijs := 25[EUR_GJ]; // wordt alleen gebruikt indien IsVasteWarmtePrijs
		
		parameter<float64> GroenGasFactor := 0.10; // 90% reguier gas en 10% groen gas (zonder Co2 uitstoot).
	}
	
	container Beleidsopties {
		parameter<EUR_Yr_Aansl> Heffingskorting := 284[EUR_Yr_Aansl];
		
		container EIA: Descr = "Energie Inversterings aftrek, zoals  MIA/VAMIL etc."
		{
			// Investeringssubsidie: bepaald percentage van een investering wordt door de overheid betaald
			// in te stellen per actor en per technologie voorzover actor = opwekker en per zichtjaar als percentage van de investering 
			container EigenarenBase {
				parameter<Float64> R_SplitIncentiveFactor := 0.8; // 0.6 = eigenaar krijgt 60% van de door gebruiker vermeden kosten; dit speelt een rol igv SpringMeestRendabel
				parameter<Float64> S_LokaleOpwekking      := 0.0; // 
				parameter<Float64> S_GebouwVerbetering    := 0.0; // 0.1 = 10% subsidie op gebouwverbetering incl eWP en EWV
				parameter<Float64> S_OngeriefsVergoeding  := 0.0; // 0.1 = 10% subsidie op ongeriefsvergoeding tbv gebiedsoptie
				parameter<Float64> S_ProjectManagement    := 0.0; // 0.1 = 10% subsidie op projectmanagement   tbv gebiedsoptie
			}
			container bwe := EigenarenBase;
			container nwe := EigenarenBase;
			container bue := EigenarenBase;
			container nue := EigenarenBase;
			container bte := EigenarenBase;
			container nte := EigenarenBase;

			parameter<Float64> id := 0.0; // 0.1 = 10% subsidie op inpandige di incl eWP en EWV, alleen voor meergezinswoningen die niet in het zichtjaar gebouwd worden.
			parameter<Float64> wd := 0.0; // wijkdistributie 0.20 = 20% subsidie op wijkdistributie investeringen.
			parameter<Float64> pt := 0.0; // primair transport
			parameter<Float64> WKO := 0.0; // subsidie op Ki_A (doublet) als fractie van de investering
			
			// voor opwekkings-type specifieke investerings-subsidies
			attribute<Float64> ow(Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList) := const(0.0, Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList);
		}
		container EEA: Descr = "Energie Exploitatie aftrek"
		{
			//	Exploitatiesubsidies: per geleverde GJ of per verkochte EUR.per zichtjaar in te stellen"
			container Kosten
			{
				// percentage op totale kosten (kapitaallasten + O&M) per actor aan actor
				container Base {
					parameter<Float64> S_LokaleOpwekking   := 0.0;
					parameter<Float64> S_GebouwVerbetering := 0.0;
					parameter<Float64> S_Leverancier := 0.0;
					parameter<Float64> S_Onderhoud   := 0.0;
					parameter<Float64> S_Admin       := 0.0;
				}
			}
			parameter<Float64> ge := 0.0; // expoitatiesubsidie tbv gebouweigenaren obv kapitaallaasten investeringen en huurverlaging
			parameter<Float64> id := 0.0; // inpandige distributie 0.20 = 20% subsidie op kapitaallasten, onderhoud en admin kosten
			parameter<Float64> wd := 0.0; // wijkdistributie 0.20 = 20% subsidie op wijkdistributie investeringen.
			parameter<Float64> pt := 0.0; // primair transport
			parameter<Float64> WKO := 0.0; // exploitatie subsidie op Ki_A (doublet) als fractie van de kapitaallasten
			parameter<EUR_GJ> SDE_WKO := 0.0[EUR_GJ]; // exploitatie subsidie op WKO per GJ.
			
			attribute<Float64> ow(Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList) := const(0.0, Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList);
			// SDE: subsidie [EUR per GJ] per gebiedsoptie technologie (STEG, Geothermie) aan opwekker.
			attribute<EUR_GJ> SDE(Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList) := const(0.0[EUR_GJ], Vesta/BronData/WarmteBronnen/MetaData/TypeInfoList);
		}
	}
	
	parameter<String> PlanRegioNaam :=  // @USERINPUT, grids vereisen RapportageRegio NL in UserInput1.dms bestand en EmptyArcSet in VestaRun.dms anders error-meldingen;
			'buurt';
//			'grid500m';
//			'grid1km';
//			'grid2km';
	
	container ReportOpties
	{
		unit<UInt32> RapportageRegio := Vesta/Geography/RegioIndelingen/NL; // @USERINPUT 'NL', 'Provincie', 'Gemeente'
//		unit<UInt32> RapportageRegio := Vesta/Geography/RegioIndelingen/Provincie;
		
		//'0=geen onderverdeling',
		//'1=woningtype',
		//'2=bouwkjaarklasse',
		//'3=woningtype & bouwjaarklasse',   //	Werkt (nog) niet met BagWoning
		//'4=Eigendom(koop/huur/onbekend)',
		//'8=inkomensklasse',
		parameter<Classifications/BestaandeWoningRapGroep> BestaandeWoningRapGroep: [ 3 ];
	}
}
