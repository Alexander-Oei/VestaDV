//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2018                                      //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                                    JUNI 2018                                         //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
// Dit is de container met rekenschema's voor Energieprijzen voor het project Vesta     //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container EnergiePrijzen {
	template GebruiksSectie
	{
		unit<UInt32> Table;
		parameter<string> code;
		attribute<EUR_GJ> distr_trans    (table) := ='(Table/'+code+'_PC_DIS[EUR_per_eenheid] + Table/'+code+'_PC_TRANS[EUR_per_eenheid]) * OmrekenFactor * InflationFactor';
		attribute<EUR_GJ> netwerk        (table) := ='Table/'+code+'_PC_NET[EUR_per_eenheid] * OmrekenFactor * InflationFactor';
		attribute<EUR_GJ> CommodityPrice (table) := ='Table/'+code+'_PC_COM_EXCL_CO2[EUR_per_eenheid] * OmrekenFactor * InflationFactor';
		attribute<EUR_GJ> CO2Heffing     (table) := ='Table/'+code+'_PC_CO2         [EUR_per_eenheid] * OmrekenFactor * InflationFactor';
		attribute<EUR_GJ> EnergieHeffing (table) := ='(Table/'+code+'_PC_BEL_EL[EUR_per_eenheid] + Table/'+code+'_PC_SDE[EUR_per_eenheid]) * OmrekenFactor * InflationFactor';
		
		attribute<EUR_GJ> maatschappelijk(table) := CommodityPrice + CO2Heffing + netwerk;
		attribute<EUR_GJ> eindgebruik_ex (table) := maatschappelijk + EnergieHeffing;
	}
	template ImportElekGas
	{
		parameter<String> FileName;
		unit<Float64>     model_eenheid;
		unit<Float64>     eenheid_GJ;
		parameter<eenheid_GJ> OmrekenFactor;		
		parameter<_Yr> AnnualPriceInflationFactor;
		parameter<string>   GlastuinbouwExpr;
		
		unit<Float64> EUR_per_eenheid := units/EUR / model_eenheid;
	
		unit<UInt32> Table
		:	StorageName = "='%datadir%/'+ FileName + '.csv'"
		,	StorageType = "gdal.vect"
		,	StorageReadOnly = "True"
		,	SyncMode    = "All";
	
		container Results
		{
			attribute<Units/Jaar>       Jaar(table) := Table/Jaar[ Units/Jaar ];
			attribute<Ratio> InflationFactor(table) := exp(Float64(Jaar - 2010[ Units/Jaar ]) * AnnualPriceInflationFactor);
			attribute<KG_GJ> CO2_GJ         (table) := TABLE/RAT_CO2_KWH[KG / model_eenheid] * OmrekenFactor;
			
			container Teruglevering {
				parameter<string> code := 'TL';
				
				attribute<EUR_GJ> distr_trans    (table) := const(0[EUR_GJ], table);
				attribute<EUR_GJ> netwerk        (table) := const(0[EUR_GJ], table);
				attribute<EUR_GJ> CommodityPrice (table) := KleinGebruik/CommodityPrice;
				attribute<EUR_GJ> CO2Heffing     (table) := const(0[EUR_GJ], table);
				attribute<EUR_GJ> EnergieHeffing (table) := const(0[EUR_GJ], table);
				
				attribute<EUR_GJ> maatschappelijk(table) := CommodityPrice + CO2Heffing + netwerk;
				attribute<EUR_GJ> eindgebruik_ex (table) := maatschappelijk + EnergieHeffing;
			}
			
			container KleinGebruik       := GebruiksSectie(table, 'KG');
			container KleinMiddelGebruik := GebruiksSectie(table, 'KMG');
			container MiddelMiddelGebruik:= GebruiksSectie(table, 'MMG');
			container GrootGebruik       := GebruiksSectie(table, 'GG');
			container GlasTuinBouw       := =GlastuinbouwExpr;
		}
	}
	template ImportOverig
	{
		parameter<String> FileName;
		
		parameter<_Yr> AnnualPriceInflationFactor;
		
		unit<UInt32> Table
		:	StorageName = "='%datadir%/'+ FileName + '.csv'"
		,	StorageType = "gdal.vect"
		,	StorageReadOnly = "True"
		,	SyncMode    = "All";
		
		container Results
		{
			attribute<Units/Jaar> Jaar      (table) := Table/Jaar[ Units/Jaar ];
			attribute<Ratio> InflationFactor(table) := exp(Float64(Jaar - 2010[ Units/Jaar ]) * AnnualPriceInflationFactor);
			attribute<EUR_GJ> BioMassa      (table) := TABLE/KGJ_BioMassa    [EUR_GJ] * InflationFactor;
			attribute<EUR_GJ> Kolen_Excl    (table) := TABLE/KGJ_Kolen_Excl  [EUR_GJ] * InflationFactor;
			attribute<EUR_GJ> Kolen_CO2     (table) := TABLE/KGJ_Kolen_CO2   [EUR_GJ] * InflationFactor;
		}
	}
	template All
	{
		parameter<String> FileName;
		parameter<_Yr> AnnualPriceInflationFactor;
		
		container Elektriciteit := ImportElekGas(FileName + '_Elek',   kwh, Kwh / GJ, value( 1000000.0 / 3600.0, kWh / GJ),        AnnualPriceInflationFactor, 'GrootGebruik' );
		container AardGas       := ImportElekGas(FileName + '_Gas',     m3,  m3 / GJ, 1.0 / BronData/FysiekeConstanten/GasEnergie, AnnualPriceInflationFactor, 'GebruiksSectie(table, ''GLAST'')');
		container Overig        := ImportOverig ('OverigeKosten', AnnualPriceInflationFactor);
	}
}