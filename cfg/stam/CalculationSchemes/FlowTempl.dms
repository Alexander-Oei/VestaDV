//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2011                                       //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                               FEBRUARI 2010                                          //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template FlowTempl: using = "Classifications"
{
	// begin case param
	unit<uint32>               RapportageRegio;
	parameter<String>          ReportRegioNaam; //: Expr = "'NL'";
	parameter<RapportageRegio> RapportageRegio_sel;
	// end case param
	
	unit<uint32> PlanRegio := RunImpl/PlanRegio;
	
	parameter<String> ReportFolder := OutputFolder+'/'+ReportRegioNaam;
	
	attribute<RapportageRegio> PlanRegioRapportageRegio_rel(PlanRegio) := ='PlanRegio/'+RapportageRegio/RegioNaam + '_rel';
	attribute<Float64>         PlanRegioInRapportageFactor (PlanRegio) := Float64(PlanRegioRapportageRegio_rel == RapportageRegio_sel);
	
	template ComponentsT {
		parameter<string>   name;
		attribute<Float64> Factor (PlanRegio);
		
		container Flow  := CalculationSchemes/Payments/MainTempl(Vesta/FlowData,   EUR_Yr,  true, ReportFolder+'/'+Name+'_Flow');
		container Stock := CalculationSchemes/Payments/MainTempl(Vesta/FlowData,   EUR,    false, ReportFolder+'/'+Name+'_Stock');
		container Energy:= CalculationSchemes/Transformations/MainTempl(Vesta/EnergyData, GJ_Yr,  ReportFolder+'/'+Name+'_Energy', Factor, '', PJ_Yr);
		container CO2   := CalculationSchemes/Transformations/MainTempl(Vesta/EnergyData, GJ_Yr,  ReportFolder+'/'+Name+'_CO2', Factor, 'CO2_'+String(RunJaar), kTon_Yr);
		container NOx   := CalculationSchemes/Transformations/MainTempl(Vesta/EnergyData, GJ_Yr,  ReportFolder+'/'+Name+'_NOx', Factor, 'NOx_'+String(RunJaar), ton_Yr);
		container SO2   := CalculationSchemes/Transformations/MainTempl(Vesta/EnergyData, GJ_Yr,  ReportFolder+'/'+Name+'_SO2', Factor, 'SO2_'+String(RunJaar), ton_Yr);
		container VOS   := CalculationSchemes/Transformations/MainTempl(Vesta/EnergyData, GJ_Yr,  ReportFolder+'/'+Name+'_VOS', Factor, 'VOS_'+String(RunJaar), ton_Yr);
		container TS    := CalculationSchemes/Transformations/MainTempl(Vesta/EnergyData, GJ_Yr,  ReportFolder+'/'+Name+'_TS',  Factor, 'TS_' +String(RunJaar), ton_Yr);
		
		parameter<String> GenerateAll := 'Ready', ExplicitSuppliers = "Flow/GenerateAll;Stock/GenerateAll;Energy/GenerateAll;CO2/GenerateAll;NOx/GenerateAll;SO2/GenerateAll;VOS/GenerateAll;TS/GenerateAll";
	}
	container All := ComponentsT('All', PlanRegioInRapportageFactor);
	
	container PerInkomensGroep {
		container Inkomen := RegioIndelingen/buurt/Inkomen;
		container laag   := ComponentsT('InkLaag',   PlanRegioInRapportageFactor * Inkomen/p_hh_li / Inkomen/p_checksum);
		container midden := ComponentsT('InkMidden', PlanRegioInRapportageFactor * Inkomen/p_hh_mi / Inkomen/p_checksum);
		container hoog   := ComponentsT('InkHoog',   PlanRegioInRapportageFactor * Inkomen/p_hh_hi / Inkomen/p_checksum);
		
		parameter<String> GenerateAll := 'Ready', ExplicitSuppliers = "laag/GenerateAll;midden/GenerateAll;hoog/GenerateAll";
	}
	container PerEigendom {
		container Eigendom := RegioIndelingen/buurt/Eigendom;
		
		container koop   := ComponentsT('HK_kw',   PlanRegioInRapportageFactor * Eigendom/p_koopw / Eigendom/p_checksum);
		container wcorpw := ComponentsT('HK_kw',   PlanRegioInRapportageFactor * Eigendom/p_wcorpw / Eigendom/p_checksum);
		container ov_hw  := ComponentsT('HK_hw',   PlanRegioInRapportageFactor * Eigendom/p_ov_hw / Eigendom/p_checksum);
		
		parameter<String> GenerateAll := 'Ready', ExplicitSuppliers = "koop/GenerateAll;wcorpw/GenerateAll;ov_hw/GenerateAll";
	}

	parameter<String> GenerateAll := 'Ready', ExplicitSuppliers = "All/GenerateAll;PerInkomensGroep/GenerateAll;PerEigendom/GenerateAll";
}
