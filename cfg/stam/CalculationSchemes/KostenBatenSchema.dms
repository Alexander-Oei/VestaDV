//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2011                                       //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                               FEBRUARI 2010                                          //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template KostenBatenSchema
{
	container VestaRunData;
	
	container EnergiePrijzen;
	parameter<Units/Jaar> Jaar;

	container PlanRegioKaarten :=
		for_each_ne(
			Classifications/BebouwingsComponent/name
		,	'CalculationSchemes/AggrComponent(VestaRunData/'+Classifications/BebouwingsComponent/name+')'
		);
		
	unit<UInt32> PlanRegio := RunImpl/PlanRegio;
		
	attribute<Units/GJ_Yr> WarmteVraagD(PlanRegio) := ='add('+AsItemList('PlanRegioKaarten/'+Classifications/BebouwingsComponent/Name+'/VerbruikD')+')';
	
	container Opbrengsten
	{
		container EenmaligD := for_each_nedv(Classifications/BebouwingsComponent/Name, 
			replace('sum(VestaRunData/@BC@/Opbrengsten/AansluitBijdrageD * Float64(Not(IsDefined(VestaRunData/@BC@/WarmteAllocatie      ))), VestaRunData/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/Name)
		,	PlanRegio, EUR)
		{
			attribute<EUR> Oi_Totaal(PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container JaarlijksD
		{
			attribute<EUR_Yr> WarmteVraag (PlanRegio) := ='add('+AsItemList('PlanRegioKaarten/'+Classifications/BebouwingsComponent/Name+'/WarmteVraagD')+')';
			
			attribute<EUR_Yr> Woning      (PlanRegio): Source = "F 6",  Expr = "sum(VestaRunData/Woning/Opbrengsten/VastRechtBijdrageD       * Float64(Not(IsDefined(VestaRunData/Woning/WarmteAllocatie))),       PlanRegioKaarten/Woning/CaseData/PlanRegio_rel )";
			attribute<EUR_Yr> UitlegWoning(PlanRegio): Source = "F 6",  Expr = "sum(VestaRunData/UitlegWoning/Opbrengsten/VastRechtBijdrageD * Float64(Not(IsDefined(VestaRunData/UitlegWoning/WarmteAllocatie))), PlanRegioKaarten/UitlegWoning/CaseData/PlanRegio_rel)";
			attribute<EUR_Yr> Utiliteit   (PlanRegio): Source = "F 11", Expr = "sum(VestaRunData/utiliteit/Opbrengsten/VastRechtBijdrageD * Float64(Not(IsDefined(VestaRunData/Utiliteit/WarmteAllocatie))),  PlanRegioKaarten/utiliteit/CaseData/PlanRegio_rel )";
			attribute<EUR_Yr> UitlegUtil  (PlanRegio): Source = "F 11", Expr = "sum(VestaRunData/UitlegUtil/Opbrengsten/VastRechtBijdrageD* Float64(Not(IsDefined(VestaRunData/UitlegUtil/WarmteAllocatie))), PlanRegioKaarten/UitlegUtil/CaseData/PlanRegio_rel)";
			attribute<EUR_Yr> GlasTuinbouw(PlanRegio): Expr = "const(0[EUR_Yr], PlanRegio)";
			attribute<EUR_Yr> UitlegGlTb  (PlanRegio): Expr = "const(0[EUR_Yr], PlanRegio)";
					
			attribute<EUR_Yr> Oj_VastRecht(PlanRegio): Expr = "='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')'";
			attribute<EUR_Yr> Oj_Totaal   (PlanRegio): Expr = "WarmteVraag      + Oj_VastRecht";
		}
	}
	container KostenFactorenD: Source = "F 3"
	{
		attribute<Float64>      Lw1(PlanRegio): Descr = "Aantal woningen",   Expr = "(PlanRegioKaarten/Woning/NrAanslWarmteD+ PlanRegioKaarten/UitlegWoning/NrAanslWarmteD) * 1[NrWoningen / NrAansl]";
		attribute<Units/km2>    Lw2(PlanRegio): Descr = "Oppervlakte",       Expr = "PlanRegio/AreaInKm2";
		attribute<Units/nrAansl>Lu (PlanRegio): Descr = "Omvang utiliteitsbouw", Expr = "PlanRegioKaarten/Utiliteit/NrAanslWarmteD + PlanRegioKaarten/UitlegUtil/NrAanslWarmteD";
		attribute<units/EUR_m2> Ld (PlanRegio): Descr = "Distributieskosten per woning m2 utiliteitsbouw";
		attribute<units/m2>     Lt (PlanRegio): Descr = "Omvang glastuinbouw", Expr = "PlanRegioKaarten/GlasTuinbouw/NrModelUnitsWarmteD + PlanRegioKaarten/UitlegGlTb/NrModelUnitsWarmteD";
		attribute<units/GJ_Yr>  Lq2(PlanRegio): Descr = "Warmtevraag woningen", Expr = "PlanRegioKaarten/woning/VerbruikD + PlanRegioKaarten/UitlegWoning/VerbruikD";
		attribute<units/GJ_Yr>  Lq4(PlanRegio): Descr = "Warmtevraag utiliteitsbouw", Expr = "PlanRegioKaarten/Utiliteit/VerbruikD + PlanRegioKaarten/UitlegUtil/VerbruikD";
		attribute<units/GJ_Yr>  Lq6(PlanRegio): Descr = "Warmtevraag glastuinbouw", Expr = "PlanRegioKaarten/GlasTuinbouw/VerbruikD + PlanRegioKaarten/uitlegGlTb/VerbruikD";
		
		parameter<Ratio>  N1 := 80[Percent] / 100[Percent], Source = "FO v7a F 35", Descr = "Percentage grootschalige warmte dat niet wordt bijgestookt";
		parameter<EUR_GJ> N2  := VestaRunData/Prijzen/AardGas/Bijstook/KGJ_eindgebruik_ex;
		parameter<EUR_GJ> N2_m:= VestaRunData/Prijzen/AardGas/Bijstook/KGJ_maatschappelijk;
		parameter<Ratio>  N3 := 0.20, Descr = "WarmteVerlies in de wijkdistributie", Source ="FO v7a F 35";
	}
	container KostenD: using = "KostenFactorenD"
	{
		parameter<kW_Woning> Vermogen_woning:= 11[kw_woning], Source = "FO v7a F 21";
		parameter<Float64> woning_os_factor := (1.0 / 0.95 ) * 0.5; // piekfactor en gelijktijdigheidsfactor (aanname: meer dan 40 woningen)
		parameter<kW>      Vermogen_OS := 150[nrWoningen] * Vermogen_woning * 0.5, Source = "FO v7a F 21";
		parameter<EUR_kW>  K_OS_p_Min := 050[EUR_kW], Source = "Table 36";
		parameter<EUR_kW>  K_OS_p_Max := 150[EUR_kW], Source = "Table 36";
		parameter<EUR_kW>  K_OS_p     := (K_OS_p_Min * Schuiven/KostenMin + K_OS_p_Max * Schuiven/KostenMax) * LeerCurves/Curve1, Source = "FO v7a F 22";
		parameter<EUR>     Kosten_OS  := Vermogen_OS * K_OS_p, Source = "FO v7a F 22";
				
		parameter<EUR> KetelVergoeding := 130[EUR_kW] * s * Vermogen_OS; // vergoeding bestaande blokverwarmingsketels obv nieuwwaarde
		parameter<Ratio> s := 1.0 / 3.0; // resterende afschijving.
		
		container Wonen
		{
			template ComponentTempl {
				unit<uint32> WoonObject;
				container    VestaRunDataComponent;
				unit<uint8>  Type;
				parameter<bool> IsNieuwbouw;
				// en dof case parameters
				
				attribute<bool> IsMeergezins  (WoonObject) := Type/IsMeergezins[VestaRunDataComponent/KengetalType];
				
				attribute<EUR_aansl> Ki_wd_w (WoonObject) := IsMeergezins ? 2700[EUR_aansl] : 5000[EUR_aansl];
					
				parameter<EUR_aansl> Oi_vermeden_gasketel := 1900[EUR_aansl] * NCW/bw15/AnnualisationFactor * NCW/bw30/DurationFactor, Source = "FO F84";

				// eenmalige kosten, zie FO tabellen 5..7
				attribute<EUR_aansl> Ki_id_fa(WoonObject) := IsMeergezins ? Schuiven/VerketelingMin * 1800[EUR_aansl] + Schuiven/VerketelingMax * 5300[EUR_aansl] :  0[EUR_aansl]; // fysieke aansluitmaatregelen
				parameter<EUR_aansl> Ki_id_va             := 0[EUR_Aansl] * Float64(!IsNieuwbouw);
				
				// kosten voor projectmanagement en door huurder ervaren en door eigenaar vergoedde ongerief
				attribute<EUR_aansl> Ki_ge_ov_w(WoonObject) := =IsNieuwbouw?'const(0[EUR_aansl], WoonObject)':'IsMeergezins ? Schuiven/VerketelingMin *    0[EUR_aansl] + Schuiven/VerketelingMax * 125[EUR_aansl] : 125[EUR_aansl]'; // woon-ongerief
				attribute<EUR_aansl> Ki_ge_pm_w(WoonObject) := =IsNieuwbouw?'const(0[EUR_aansl], WoonObject)':'IsMeergezins ? Schuiven/VerketelingMin *   50[EUR_aansl] + Schuiven/VerketelingMax * 250[EUR_aansl] : 250[EUR_aansl]'; // project management
				attribute<EUR>       Ki_ge_ov_o(WoonObject) := =IsNieuwbouw?'const(0[EUR], WoonObject)':'NrDeelnemers * Ki_ge_ov_w';
				attribute<EUR>       Ki_ge_pm_o(WoonObject) := =IsNieuwbouw?'const(0[EUR], WoonObject)':'NrDeelnemers * Ki_ge_pm_w';
				
				// huurverlaging, alleen gebruikt in flow en als kostenfactor
				attribute<EUR_Yr_Aansl> Kj_hv_w(WoonObject) := =IsNieuwbouw?'const(0[EUR_Yr_Aansl], WoonObject)':'(IsMeergezins ? Schuiven/VerketelingMax : 1.0) * 160[EUR_Yr_Aansl] * Schuiven/HuurVerlagingBijGebiedsOptie';
				attribute<EUR_Yr>       Kj_hv_o(WoonObject) := =IsNieuwbouw?'const(0[EUR_Yr      ], WoonObject)':'Kj_hv_w* NrDeelnemers';
				
				attribute<nrAansl> NrDeelnemers(WoonObject) := VestaRunDataComponent/WarmteVraagD/nrAansluitingen    * Float64(!IsDefined(VestaRunDataComponent/WarmteAllocatie));
				attribute<kW>      Capaciteit  (WoonObject) := VestaRunDataComponent/WarmteVraagD/AansluitCapaciteit * Float64(!IsDefined(VestaRunDataComponent/WarmteAllocatie));
				
				attribute<EUR>     Ki_ge_bruto   (WoonObject) := Ki_ge_ov_o + Ki_ge_pm_o - Oi_vermeden_gasketel * NrDeelnemers;
				attribute<EUR>     Oi_ge_subsidie(WoonObject) := Ki_ge_ov_o * UserInput/BeleidsOpties/EIA/bwe/S_OngeriefsVergoeding + Ki_ge_pm_o * UserInput/BeleidsOpties/EIA/bwe/S_ProjectManagement;
				attribute<EUR>     Ki_ge_netto   (WoonObject) := Ki_ge_bruto - Oi_ge_subsidie;
				attribute<EUR_Yr>  Kj_ge_base    (WoonObject) := Ki_ge_netto * NCW/bw28/AnnualisationFactor + Kj_hv_o;
				attribute<EUR_Yr>  Oe_ge_subsidie(WoonObject) := Kj_ge_base * UserInput/BeleidsOpties/EEA/ge;
				attribute<EUR_Yr>  Oj_ge_subsidie(WoonObject) := Oi_ge_subsidie *NCW/bw28/AnnualisationFactor + Oe_ge_subsidie;
				attribute<EUR_Yr>  Kj_ge_netto   (WoonObject) := Kj_ge_base - Oe_ge_subsidie;
				
				container Onderstation {
					attribute<kW> GevraagdeCapaciteit(PlanRegio) :=  
						woning_os_factor * sum(Capaciteit, VestaRunDataComponent/PlanRegio_rel);
					attribute<kW> GevraagdeCapaciteit_blokverwarming(PlanRegio) := Float64(!IsNieuwbouw) * 
						woning_os_factor * sum(Capaciteit * (IsMeergezins ? Schuiven/VerketelingMin : 0.0), VestaRunDataComponent/PlanRegio_rel);
							
					attribute<Float64>  n0(PlanRegio) := GevraagdeCapaciteit / Vermogen_OS, Source = "FO v7a F 23";
					attribute<Float64>  n2(PlanRegio) := GevraagdeCapaciteit_blokverwarming / Vermogen_OS, Descr = "F 28";
					attribute<Float64>  n1(PlanRegio) := n0 - n2;
					attribute<EUR>  Ki_wd(PlanRegio) := n0 * Kosten_OS + n2 *KetelVergoeding, Descr = "F 27";
				}
				
				attribute<EUR> Ki_wd_sec(PlanRegio) := sum(Ki_wd_w*NrDeelnemers, VestaRunDataComponent/PlanRegio_rel);
				attribute<EUR> Ki_wd(PlanRegio) := Ki_wd_sec + Onderstation/Ki_wd;
				attribute<EUR> Ki_id(PlanRegio) := sum((Ki_id_fa + Ki_id_va) * NrDeelnemers, VestaRunDataComponent/PlanRegio_rel);
				attribute<EUR> Ki_ge_ov(PlanRegio) := sum(Ki_ge_ov_w * NrDeelnemers, VestaRunDataComponent/PlanRegio_rel) * Float64(!IsNieuwbouw);
				attribute<EUR> Ki_ge_pm(PlanRegio) := sum(Ki_ge_pm_w * NrDeelnemers, VestaRunDataComponent/PlanRegio_rel) * Float64(!IsNieuwbouw);
				
				attribute<EUR_Yr> Kj_hv(PlanRegio) :=  =IsNieuwbouw?'const(0[EUR_Yr      ], WoonObject)':'sum(Kj_hv_o, VestaRunDataComponent/PlanRegio_rel)'; // huurverlaging, alleen gebruikt in flow en als kostenfactor
				
				attribute<EUR_Yr> Kj_wd_base     (PlanRegio) := Ki_wd_sec * VestaRunData/Onderhoud/Rj_wd + Onderstation/Ki_wd * VestaRunData/Onderhoud/Rj_Onderstation;
				attribute<EUR_Yr> Kj_id_base     (PlanRegio) := Ki_id * VestaRunData/Onderhoud/Rj_id;
			}
			container bbw:= ComponentTempl(Entiteiten/Woning,       VestaRunData/Woning,       Entiteiten/WoningType,       false);
			container nbw:= ComponentTempl(Entiteiten/UitlegWoning, VestaRunData/UitlegWoning, Entiteiten/UitlegWoningType, true);
			attribute<EUR> Ki_wd(PlanRegio) := bbw/ki_wd + nbw/Ki_wd;
			attribute<EUR> Ki_id(PlanRegio) := bbw/ki_id + nbw/Ki_id;
			attribute<EUR> Ki_ge_ov(PlanRegio) := bbw/ki_ge_ov + nbw/Ki_ge_ov;
			attribute<EUR> Ki_ge_pm(PlanRegio) := bbw/ki_ge_pm + nbw/Ki_ge_pm;
			
			attribute<EUR_Yr> Kj_wd_base     (PlanRegio) := bbw/Kj_wd_base + nbw/Kj_wd_base;
			attribute<EUR_Yr> Kj_wd_Admin    (PlanRegio) := Kj_wd_base * VestaRunData/Onderhoud/R_Admin;
			attribute<EUR_Yr> Kj_wd_Onderhoud(PlanRegio) := Kj_wd_base - Kj_wd_Admin;
			
			attribute<EUR_Yr> Kj_id_Onderhoud(PlanRegio) := bbw/Kj_id_base + nbw/Kj_id_base;
			
			attribute<EUR_Yr> Kj_ge_hv(PlanRegio) := bbw/Kj_hv;
			
		}
		container Utiliteit 
		{
			container NrAansluitingen
			{
				attribute<nrAansl> Klein(PlanRegio) := 
					sum(
					  VestaRunData/Utiliteit/WarmteVraagD/nrAansluitingen 
						* Float64(Not(IsDefined(VestaRunData/Utiliteit/WarmteAllocatie)))
						* Float64(VestaRunData/Utiliteit/WarmteVraagD/AansluitCapaciteit <= value(100, kW)) 
					, PlanRegioKaarten/Utiliteit/CaseData/PlanRegio_rel
					) + 
					sum(
					  VestaRunData/UitlegUtil/WarmteVraagD/nrAansluitingen 
						* Float64(Not(IsDefined(VestaRunData/UitlegUtil/WarmteAllocatie)))
						* Float64(VestaRunData/UitlegUtil/WarmteVraagD/AansluitCapaciteit <= value(100, kW)) 
					, PlanRegioKaarten/UitlegUtil/CaseData/PlanRegio_rel
					);
				attribute<nrAansl> Groot(PlanRegio) := 
					sum(
					  VestaRunData/Utiliteit/WarmteVraagD/nrAansluitingen 
						* Float64(Not(IsDefined(VestaRunData/Utiliteit/WarmteAllocatie)))
						* Float64(VestaRunData/Utiliteit/WarmteVraagD/AansluitCapaciteit > value(100, kW)) 
					, PlanRegioKaarten/Utiliteit/CaseData/PlanRegio_rel
					) + 
					sum(
					  VestaRunData/UitlegUtil/WarmteVraagD/nrAansluitingen 
						* Float64(Not(IsDefined(VestaRunData/UitlegUtil/WarmteAllocatie)))
						* Float64(VestaRunData/UitlegUtil/WarmteVraagD/AansluitCapaciteit > value(100, kW)) 
						, PlanRegioKaarten/UitlegUtil/CaseData/PlanRegio_rel
					);
				attribute<nrAansl> Totaal(PlanRegio) := Klein + Groot;
			}
			
			container CapaciteitsVraag
			{
				attribute<kW> Klein(PlanRegio) :=
					 0.5 * ( // gelijktijdigheidsfactor
						sum(VestaRunData/Utiliteit/WarmteVraagD/AansluitCapaciteit 
							* Float64(Not(IsDefined(VestaRunData/Utiliteit/WarmteAllocatie)))
							* Float64(VestaRunData/Utiliteit/WarmteVraagD/AansluitCapaciteit <= 100[ kW]) 
							, VestaRunData/Utiliteit/PlanRegio_rel
						)+
						sum(VestaRunData/UitlegUtil/WarmteVraagD/AansluitCapaciteit 
							* Float64(Not(IsDefined(VestaRunData/UitlegUtil/WarmteAllocatie)))
							* Float64(VestaRunData/UitlegUtil/WarmteVraagD/AansluitCapaciteit <= 100[ kW ]) 
							, VestaRunData/UitlegUtil/PlanRegio_rel
						)
					);
				attribute<kW> Groot(PlanRegio) :=
						// geen gelijktijdigheidsfactor voor grote utiliteit
						sum(VestaRunData/Utiliteit/WarmteVraagD/AansluitCapaciteit 
							* Float64(Not(IsDefined(VestaRunData/Utiliteit/WarmteAllocatie)))
							* Float64(VestaRunData/Utiliteit/WarmteVraagD/AansluitCapaciteit > 100[ kW ]) 
							, VestaRunData/Utiliteit/PlanRegio_rel
						)+
						sum(VestaRunData/UitlegUtil/WarmteVraagD/AansluitCapaciteit 
							* Float64(Not(IsDefined(VestaRunData/UitlegUtil/WarmteAllocatie)))
							* Float64(VestaRunData/UitlegUtil/WarmteVraagD/AansluitCapaciteit > 100[ kW ]) 
							, VestaRunData/UitlegUtil/PlanRegio_rel
						);
				attribute<kW> Totaal(PlanRegio) := Klein + Groot;
			}
			
			
			attribute<EUR> Ki_WarmteMeter_min(PlanRegio) := 800[ EUR / nrAansl ] * NrAansluitingen/Totaal + 1.1[EUR_kW] * CapaciteitsVraag/Totaal, Descr = "Tabel 36";
			attribute<EUR> Ki_WarmteMeter_max(PlanRegio) := 825[ EUR / nrAansl ] * NrAansluitingen/Totaal + 1.3[EUR_kW] * CapaciteitsVraag/Totaal, Descr = "Tabel 36";
			
			attribute<EUR> Ki_WarmteMeter_sec(PlanRegio) := (Schuiven/KostenMin * Ki_WarmteMeter_min +Schuiven/KostenMax * Ki_WarmteMeter_max) * LeerCurves/Curve1;
			
			parameter<EUR_kw> Oi_vermeden_gasketel := 1900[EUR] / 11[kw], Source = "FO F84 jo kentallenbestand woningen";
			attribute<EUR> Ki_WarmteMeter    (PlanRegio) := Ki_WarmteMeter_sec - Oi_vermeden_gasketel * CapaciteitsVraag/Totaal;
			
			attribute<EUR> Ki_Distributie_min(PlanRegio) := 100[EUR_kW] * CapaciteitsVraag/Klein,  Source = "FO v7a F 40, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36";
			attribute<EUR> Ki_Distributie_max(PlanRegio) := 150[EUR_kW] * CapaciteitsVraag/Klein,  Source = "FO v7a F 40, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36";
			attribute<EUR> Ki_Distributie    (PlanRegio) := (Schuiven/KostenMin * Ki_Distributie_min + Schuiven/KostenMax * Ki_Distributie_max) * LeerCurves/Curve1,  Source = "Tabel 36";
			
			attribute<Float64> n_OS(PlanRegio) := CapaciteitsVraag/Totaal / Vermogen_OS; // OnderStations voor utiliteit hebben dezelfde 'optimale' grootte als voor woningen
			
			attribute<EUR> Ki_OS_Klein(PlanRegio): Expr = "CapaciteitsVraag/Klein * K_OS_p", Source = "mail Cor 16-12-2010; tabel 36"; // wegens gelijktijdigheid is dit 50 E / aansluitcap.
			
			attribute<EUR> Ki_OS_Groot_min(PlanRegio): Expr = "CapaciteitsVraag/Groot *  15[ EUR / KW]", Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[EUR_kW ]
			attribute<EUR> Ki_OS_Groot_max(PlanRegio): Expr = "CapaciteitsVraag/Groot * 150[ EUR / KW]", Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[EUR_kW ]
			attribute<EUR> Ki_OS_Groot(PlanRegio): Expr = "(Schuiven/KostenMin * Ki_OS_Groot_min + Schuiven/KostenMax * Ki_OS_Groot_max) * LeerCurves/Curve1", Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[EUR_kW ]
			attribute<EUR> Ki_OnderStation(PlanRegio): Expr = "Ki_OS_Klein + Ki_OS_groot";
				
				
			attribute<EUR>    Ki_Totaal(PlanRegio) := Ki_WarmteMeter + Ki_Distributie + Ki_OnderStation;
			
			attribute<EUR_Yr> Kj_sec (PlanRegio) := Ki_WarmteMeter  * VestaRunData/Onderhoud/Rj_Installatie;
			attribute<EUR_Yr> Kj_Base(PlanRegio) := 
				Ki_Distributie  * VestaRunData/Onderhoud/Rj_wd + 
				Ki_OnderStation * VestaRunData/Onderhoud/Rj_Onderstation;
			attribute<EUR_Yr> Kj_Admin    (PlanRegio) := Kj_Base * VestaRunData/Onderhoud/R_Admin;
			attribute<EUR_Yr> Kj_Onderhoud(PlanRegio) := Kj_sec + Kj_Base - Kj_Admin;
		}
		
	 	attribute<EUR_m2> K_dienstleiding_m2(Classifications/GlTb):  Source = "F 47b", [ null, 
	 		0.909090909, 0, 0, 0, 
	 		0.666666666, 0, 0, 0, 
	 		0.666666666, 0, 0, 0
	 	];
	 	
		container GlasTuinbouw
		{
			parameter<m2> GemOppGroente: [ 11000 ];
			parameter<m> GroenteKasLengteFactor := 2.0 * Sqrt(GemOppGroente), Descr = "noemer in F 50 en F 48";
			
			container bestaand
			{
				attribute<m2> Areaal(PlanRegio): Expr = "sum(VestaRunData/GlasTuinbouw/WarmteVraagD/NrModelUnits"
						"* Float64(Not(IsDefined(VestaRunData/Glastuinbouw/WarmteAllocatie)))"
						", PlanRegioKaarten/GlasTuinbouw/CaseData/PlanRegio_rel)";
				
				attribute<m> SqrtAreaal(PlanRegio): Expr = "sum(Sqrt(VestaRunData/GlasTuinbouw/WarmteVraagD/NrModelUnits)"
						"* Float64(Not(IsDefined(VestaRunData/Glastuinbouw/WarmteAllocatie)))"
						", PlanRegioKaarten/GlasTuinbouw/CaseData/PlanRegio_rel)";
				
				attribute<nrAansl> NrAansluitingen(PlanRegio): Expr = 
						"sum(VestaRunData/GlasTuinbouw/WarmteVraagD/nrAansluitingen "
						"* Float64(Not(IsDefined(VestaRunData/Glastuinbouw/WarmteAllocatie)))"
						", PlanRegioKaarten/GlasTuinbouw/CaseData/PlanRegio_rel)";
				attribute<kW> CapaciteitsVraag(PlanRegio): Expr = 
						"sum(  VestaRunData/GlasTuinbouw/WarmteVraagD/AansluitCapaciteit "
						"* Float64(Not(IsDefined(VestaRunData/Glastuinbouw/WarmteAllocatie)))"
						", VestaRunData/GlasTuinbouw/PlanRegio_rel)";
	
				attribute<Float64> n_OS(PlanRegio): Expr = "CapaciteitsVraag / Vermogen_OS"; // OnderStations voor glastuinbouw hebben dezelfde 'optimale' grootte als voor woningen
					
				attribute<EUR> Ki_OS_min(PlanRegio): Expr = "CapaciteitsVraag *  15[ EUR / KW]", Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[EUR_kW ]
				attribute<EUR> Ki_OS_max(PlanRegio): Expr = "CapaciteitsVraag * 150[ EUR / KW]", Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[EUR_kW ]
				attribute<EUR> Ki_OnderStation(PlanRegio): Expr = "(Schuiven/KostenMin * Ki_OS_min + Schuiven/KostenMax * Ki_OS_max) * LeerCurves/Curve1", Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[EUR_kW ]
	 			
	 			attribute<EUR> K_dienstleidingen(PlanRegio): Source = "F 47b",
	 				Expr = "sum(VestaRunData/GlasTuinbouw/WarmteVraagD/NrModelUnits * K_dienstleiding_m2[VestaRunData/GlasTuinbouw/KengetalType], PlanRegioKaarten/GlasTuinbouw/CaseData/PlanRegio_rel)";
	
				attribute<Float64> n_Zijwegparen(PlanRegio) := Sqrt(2.0) * SqrtAreaal / GroenteKasLengteFactor, Descr = "F 48";
					
				attribute<Float64> n_Zijleiding(PlanRegio):= (n_Zijwegparen + 0.5) * 2.0
					,	Descr = "F 48: estimate average increase of round-up in a 'best' continuous replacement";
					
				attribute<MW> P_Zijleiding(PlanRegio): Descr = "F 49: 50% van het piekvermogen wordt door CV-ketels in de OS (dus per kas) geleverd",
					Expr = "CapaciteitsVraag / n_Zijleiding / value(1000, kW / MW)";
					
				attribute<m> lengte_Zijleiding(PlanRegio) := 1.7 * (Areaal / GroenteKasLengteFactor + Sqrt(2.0) * SqrtAreaal), Descr = "F 50";
						
				container ZijleidingKosten := BuisKosten(PlanRegio, P_Zijleiding);
				attribute<EUR>   K_Zijleiding  (PlanRegio): Expr = "lengte_Zijleiding * ZijleidingKosten/K_m";
				
				attribute<EUR   > Ki_Totaal   (PlanRegio) := K_dienstleidingen + K_Zijleiding + Ki_OnderStation;
				attribute<EUR_YR> Kj_Onderhoud(PlanRegio) := 
					(K_dienstleidingen + K_Zijleiding) * VestaRunData/Onderhoud/Rj_SecundairNet + 
					Ki_OnderStation * VestaRunData/Onderhoud/Rj_OnderStation;
 			}
			container nieuw
			{
				attribute<m2> Areaal   (PlanRegio) := sum(     VestaRunData/UitlegGlTb/WarmteVraagD/NrModelUnits , PlanRegioKaarten/UitlegGlTb/CaseData/PlanRegio_rel);
				attribute<m> SqrtAreaal(PlanRegio) := sum(Sqrt(VestaRunData/UitlegGlTb/WarmteVraagD/NrModelUnits), PlanRegioKaarten/UitlegGlTb/CaseData/PlanRegio_rel);
				
				attribute<nrAansl> NrAansluitingen(PlanRegio) := 
						sum(  VestaRunData/UitlegGlTb/WarmteVraagD/nrAansluitingen * Float64(Not(IsDefined(VestaRunData/UitlegGlTb/WarmteAllocatie)))
						, PlanRegioKaarten/UitlegGlTb/CaseData/PlanRegio_rel  );
				attribute<kW> CapaciteitsVraag(PlanRegio) := 
						sum(  VestaRunData/UitlegGlTb/WarmteVraagD/AansluitCapaciteit * Float64(Not(IsDefined(VestaRunData/UitlegGlTb/WarmteAllocatie)))
						, VestaRunData/UitlegGlTb/PlanRegio_rel);
	
				attribute<Float64>  n_OS(PlanRegio): Expr = "CapaciteitsVraag / Vermogen_OS"; // *** OnderStations voor glsatuinbouw hebben dezelfde 'optimale' grootte als voor woningen
					
				attribute<EUR> Ki_OS_min(PlanRegio): Expr = "CapaciteitsVraag *  15[ EUR / KW]", Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[EUR_kW ]
				attribute<EUR> Ki_OS_max(PlanRegio): Expr = "CapaciteitsVraag * 150[ EUR / KW]", Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[EUR_kW ]
				attribute<EUR> Ki_OnderStation(PlanRegio): Expr = "(Schuiven/KostenMin * Ki_OS_min + Schuiven/KostenMax * Ki_OS_max) * LeerCurves/Curve1", Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[EUR_kW ]
					
				attribute<EUR> K_dienstleidingen(PlanRegio): Source = "F 47b",
					Expr = "sum(VestaRunData/UitlegGlTb/WarmteVraagD/NrModelUnits * K_dienstleiding_m2[VestaRunData/UitlegGlTb/KengetalType], PlanRegioKaarten/UitlegGlTb/CaseData/PlanRegio_rel)";
	
				attribute<Float64> n_Zijwegparen(PlanRegio) := Sqrt(2.0) * SqrtAreaal / GroenteKasLengteFactor, Descr = "F 48";
					
				attribute<Float64> n_Zijleiding(PlanRegio) := (n_Zijwegparen + 0.5) * 2.0, Descr = "F 48"; // add expected increase of round-up as a 'best' continuous replacement of Float64(RoundUp(n_Zijwegparen)) * Float64(2)
					
				attribute<MW> P_Zijleiding(PlanRegio) := CapaciteitsVraag / n_Zijleiding / 1000[kW / MW], Descr = "F 49: 50% van het piekvermogen wordt door CV-ketels in de OS (dus per kas) geleverd";
					
				attribute<m> lengte_Zijleiding(PlanRegio) := 1.3 * (Areaal / GroenteKasLengteFactor + Sqrt(2.0) * SqrtAreaal), Descr = "F 50";
						
				container ZijleidingKosten := BuisKosten(PlanRegio, P_Zijleiding);
				attribute<EUR>   K_Zijleiding  (PlanRegio) := lengte_Zijleiding * ZijleidingKosten/K_m;
					
				attribute<EUR>    Ki_Totaal   (PlanRegio) := K_dienstleidingen + K_Zijleiding + Ki_OnderStation;
				attribute<EUR_Yr> Kj_Onderhoud(PlanRegio) := 
					(K_dienstleidingen + K_Zijleiding) * VestaRunData/Onderhoud/Rj_SecundairNet
					 + Ki_OnderStation * VestaRunData/Onderhoud/Rj_OnderStation;
			}
			attribute<EUR>    Ki_CO2Installatie_min(PlanRegio): Source = "F 45, table 36", Expr = " 950[EUR_ha] * KostenFactorenD/Lt / 10000[m2 / ha]";
			attribute<EUR>    Ki_CO2Installatie_max(PlanRegio): Source = "F 45, table 36", Expr = "1050[EUR_ha] * KostenFactorenD/Lt / 10000[m2 / ha]";
			attribute<EUR>    Ki_CO2Installatie(PlanRegio) := (Schuiven/KostenMin * Ki_CO2Installatie_min + Schuiven/KostenMax * Ki_CO2Installatie_max) * LeerCurves/Curve1;
			attribute<EUR_Yr> Kj_CO2Installatie(PlanRegio) := (1600[EUR / ha / Yr] + 340[ton / ha / yr] * 80[EUR / ton]) * KostenFactorenD/Lt / 10000[m2 / ha], Source = "F 45";
			attribute<EUR_Yr> Kj_CO2Installatie_FictiefOnderhoud(PlanRegio) := Ki_CO2Installatie  * VestaRunData/Onderhoud/Rj_Installatie;
				
			attribute<kW>      CapaciteitsVraag(PlanRegio): Expr = "Bestaand/CapaciteitsVraag + Nieuw/CapaciteitsVraag";
			attribute<nrAansl> NrAansluitingen (PlanRegio): Expr = "Bestaand/NrAansluitingen + Nieuw/NrAansluitingen";
				
			attribute<EUR> Ki_WarmteMeter_min(PlanRegio): Expr = "800[ EUR / nrAansl ] * NrAansluitingen + 1.1[EUR_kW] * CapaciteitsVraag", Descr = "Tabel 36";
			attribute<EUR> Ki_WarmteMeter_max(PlanRegio): Expr = "825[ EUR / nrAansl ] * NrAansluitingen + 1.3[EUR_kW] * CapaciteitsVraag", Descr = "Tabel 36";
			attribute<EUR> Ki_WarmteMeter    (PlanRegio): Expr = "(Schuiven/KostenMin * Ki_WarmteMeter_min +Schuiven/KostenMax * Ki_WarmteMeter_max) * LeerCurves/Curve1";
			
			attribute<EUR_Yr> Kj_WarmteMeter_Onderhoud(PlanRegio):= Ki_WarmteMeter * VestaRunData/Onderhoud/Rj_Installatie;
					
			attribute<EUR>    Ki_Totaal(PlanRegio) := bestaand/Ki_Totaal + nieuw/Ki_Totaal + Ki_CO2Installatie + Ki_WarmteMeter;
			
			attribute<EUR_Yr> Kj_Onderhoud(PlanRegio):= bestaand/Kj_Onderhoud + nieuw/Kj_Onderhoud + Kj_WarmteMeter_Onderhoud;
			attribute<EUR_Yr> Kj_Admin    (PlanRegio):= (Kj_Onderhoud + Kj_CO2Installatie_FictiefOnderhoud) * VestaRunData/Onderhoud/R_Admin;
			attribute<EUR_Yr> Kj_Verbruik (PlanRegio):= Kj_CO2Installatie;
		}
		container SecundairNet
		{
			attribute<km2>    OPP_bebouwd     (PlanRegio) := KostenFactorenD/Lw2;
			attribute<Float64> n              (PlanRegio) := Wonen/bbw/OnderStation/n0 + Wonen/nbw/OnderStation/n0 + Utiliteit/n_OS; // Zonder glastuinbouw
			attribute<Ratio> VerkortingsFactor(PlanRegio) := 48.0 / (Max_Elem(n, 8.0)+40.0), Descr = "Fo v7a F 43";
			
			// Ik ben zo vrij geweest CapaciteitsVraag voor utiliteit (en glastuinbouw?) hier ook mee te nemen. 
			// Capaciteitsvraag vanuit woningen is nominaal per OnderStation; capaciteitsvraag vanuit Util + GlTb obv kengetallen
			parameter<float64> HulpketelVermogensaandeel := Parameters/Bijstook/vermogensaandelen/Hulpketel;
			attribute<MW>  P(PlanRegio) := (n * Vermogen_OS + GlasTuinbouw/CapaciteitsVraag) * 0.001[ MW / kW]; //, IntegrityCheck = "P < value(115, MW)";
			
			container HoofdLeidingKosten := BuisKosten(PlanRegio, P);
			attribute<m>       L_hoofdleiding (PlanRegio) := HoofdLeidingKosten/a * sqrt(2.0)* 1000[ m / km] * sqrt(OPP_bebouwd);
			attribute<EUR>     K_hoofdleiding (PlanRegio) := L_hoofdleiding * HoofdLeidingKosten/K_m, Source = "F 32";
			
			parameter<EUR_m>   K_zij_m  := 586.3461241875[EUR / m] * LeerCurves/Curve2, Source = "F 31", Descr = "3309[EUR_m] - 0.1917[EUR_m / MW*MW]* Sqr(120.0[MW] - 0.825[MW]))";
			attribute<m>       L_zijleiding  (PlanRegio) := HoofdLeidingKosten/a * n * 0.25 * 0.5 *sqrt(2.0) * 1000[m / km]*sqrt(OPP_bebouwd)* VerkortingsFactor, Descr = "F 33, K_buis with omwegfactor included";
			attribute<EUR>     K_zijleiding  (PlanRegio) := L_zijleiding * K_zij_m, Descr = "F 33";
			
			parameter<EUR_MW> K_WOS_p_min := 100000[EUR / MW], Descr = "Kosten Warmteoverdrachtstation, Tabel 36";
			parameter<EUR_MW> K_WOS_p_max := 150000[EUR / MW], Descr = "Kosten Warmteoverdrachtstation, Tabel 36";

			attribute<EUR>    K_WOS    (PlanRegio) := HulpketelVermogensaandeel* P * (K_WOS_p_min * Schuiven/KostenMin + K_WOS_p_max * Schuiven/KostenMax) * LeerCurves/Curve2, Descr = "Kosten Warmteoverdrachtstation, zie: F 34,email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM";
			attribute<EUR   > Ki_Totaal(PlanRegio) := K_hoofdleiding + K_zijleiding + K_WOS;
			
			attribute<m>      L_transport (Planregio) := L_hoofdleiding + L_zijleiding;
			attribute<EUR_Yr> Kj_Onderhoud(PlanRegio) := (K_hoofdleiding + K_zijleiding) * VestaRunData/Onderhoud/Rj_SecundairNet + K_WOS * VestaRunData/Onderhoud/Rj_WOS;
			attribute<EUR_Yr> Kj_Admin    (PlanRegio) := Kj_Onderhoud * VestaRunData/Onderhoud/R_Admin;
		}
		container PrimairNet
		{
			parameter<float64> HoofdbronVermogensaandeel := Parameters/Bijstook/vermogensaandelen/Hoofdbron;
			attribute<MW> P(PlanRegio) := HoofdbronVermogensaandeel * SecundairNet/P; // aandeel hoofdwaarmtebron (dus de niet-bijstook); n.b. aandelen sommeren tot meer dan 100% ivm reservecapaciteit.
			
			container LeidingKosten := BuisKosten(PlanRegio, P);
		}
		
		attribute<GJ_Yr>  Vj_Warmte       (PlanRegio) := (Lq2+Lq4+Lq6) / (1.0-N3), Source = "FO v7a F 36";
		attribute<GJ_Yr>  Vj_WarmtePrimair(PlanRegio) := N1 * Vj_Warmte, Source = "FO v7a F 36";
		
		container Bijstook {
			attribute<GJ_Yr>  Vj_Bijstook(PlanRegio) := (Vj_Warmte - Vj_WarmtePrimair) / 0.925, Source = "FO v7a F 35";
			attribute<EUR_Yr> Kj_Verbruik(PlanRegio) := N2   * Vj_Bijstook;
			attribute<EUR_Yr> Km_Verbruik(PlanRegio) := N2_m * Vj_Bijstook;
		}
		
		attribute<EUR>    Ki_ge_ov (PlanRegio) := Wonen/Ki_ge_ov;
		attribute<EUR>    Ki_ge_pm (PlanRegio) := Wonen/Ki_ge_pm;
		attribute<EUR>    Ki_id    (PlanRegio) := Wonen/Ki_id + Utiliteit/Ki_Totaal + Glastuinbouw/Ki_Totaal, Source = "FO v7a F 2";
		attribute<EUR>    Ki_wd    (PlanRegio) := SecundairNet/Ki_Totaal + Wonen/Ki_wd, Source = "FO v7a F 2";
		
		attribute<EUR_YR> Kj_ge_hv    (PlanRegio) := Wonen/Kj_ge_hv;
		attribute<EUR_YR> Kj_id_Onderhoud(PlanRegio) := Wonen/Kj_id_Onderhoud;
		attribute<EUR_YR> Kj_wd_Onderhoud(PlanRegio) := Wonen/Kj_wd_Onderhoud + Utiliteit/Kj_Onderhoud + Glastuinbouw/Kj_Onderhoud + SecundairNet/Kj_Onderhoud;
		attribute<EUR_YR> Kj_Onderhoud(PlanRegio) := Kj_wd_Onderhoud + Kj_id_Onderhoud;
		attribute<EUR_YR> Kj_Verbruik (PlanRegio) := Bijstook/Kj_Verbruik;
		attribute<EUR_YR> Km_Verbruik (PlanRegio) := Bijstook/Km_Verbruik;
		attribute<EUR_YR> Kj_lv_Admin (PlanRegio) := opbrengsten/JaarlijksD/Oj_VastRecht * VestaRunData/Onderhoud/R_lv_Admin;
		attribute<EUR_YR> Kj_wd_Admin (PlanRegio) := Wonen/Kj_wd_Admin + Utiliteit/Kj_Admin + Glastuinbouw/Kj_Admin + SecundairNet/Kj_Admin;
		
		attribute<nrAansl>nrAansl_d   (PlanRegio) := ='add('+AsItemList(replace('sum(VestaRunData/@BC@/WarmteVraagD/nrAansluitingen, VestaRunData/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/name))+')';
		attribute<nrAansl>nrAansl_g   (PlanRegio) := ='add('+AsItemList(replace('sum(VestaRunData/@BC@/WarmteVraagA/nrAansluitingen, VestaRunData/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/name))+')';
		attribute<nrAansl>nrAansl_e   (PlanRegio) := ='add('+AsItemList(replace('sum(VestaRunData/@BC@/RuimtelijkeVraagComponent/nrAansluitingen, VestaRunData/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/name))+')';
		attribute<m>      L_distr_d   (PlanRegio) := nrAansl_d * 15[m / nrAansl];
		attribute<m>      L_distr_g   (PlanRegio) := nrAansl_g * 15[m / nrAansl];
		attribute<m>      L_distr_e   (PlanRegio) := nrAansl_e * 15[m / nrAansl];
		attribute<m>      L_infra_d   (PlanRegio) := L_distr_d + SecundairNet/L_transport;
		attribute<m>      L_infra_g   (PlanRegio) := (L_distr_g + SecundairNet/L_transport)*Float64(indicatoren/heeft_gas);
		attribute<m>      L_infra_e   (PlanRegio) := L_distr_e + SecundairNet/L_transport;
		
		attribute<EUR_YR> Kj_Precario (PlanRegio) := L_infra_d * VestaRunData/Onderhoud/Rj_Precario_m;
		attribute<EUR_Yr> Kj_Totaal   (PlanRegio) := Kj_Onderhoud + Kj_Verbruik + Kj_wd_Admin + Kj_lv_Admin + Kj_Precario + Kj_ge_hv, Source = "FO v7a F 2";
		attribute<EUR_Yr> Km_Totaal   (PlanRegio) := Kj_Onderhoud + Km_Verbruik + Kj_wd_Admin + Kj_lv_Admin;
	}
	
	attribute<EUR   > Oi_Aansluitbijdrage(PlanRegio) := Opbrengsten/EenmaligD/Oi_Totaal;
	attribute<EUR_Yr> Oj_wd_KL         (PlanRegio) := Oi_Aansluitbijdrage * NCW/wd28/StartDiscountFactor * NCW/wd28/AnnualisationFactor;
	attribute<EUR_Yr> Kj_ge_KL         (PlanRegio) := Ki_ge_Bruto * NCW/bw28/AnnualisationFactor;
	attribute<EUR_Yr> Kj_id_KL         (PlanRegio) := Ki_id_Bruto * NCW/id28/AnnualisationFactor;
	
	attribute<EUR>    Ki_ge_ov         (PlanRegio) := KostenD/Ki_ge_ov;
	attribute<EUR>    Ki_ge_pm         (PlanRegio) := KostenD/Ki_ge_pm;
	attribute<EUR_Yr> Kj_ge_hv         (PlanRegio) := KostenD/Kj_ge_hv;
	attribute<EUR>    Ki_ge_Bruto      (PlanRegio) := Ki_ge_ov + Ki_ge_pm;
	attribute<EUR   > Ki_id_Bruto      (PlanRegio) := KostenD/Ki_id;
	attribute<EUR   > Ki_wd_Bruto      (PlanRegio) := KostenD/Ki_wd;
	attribute<EUR>    Oi_ge_subsidie   (PlanRegio) := Ki_ge_ov * UserInput/BeleidsOpties/EIA/bwe/S_OngeriefsVergoeding + Ki_ge_pm * UserInput/BeleidsOpties/EIA/bwe/S_ProjectManagement;
	attribute<EUR>    Oi_id_subsidie   (PlanRegio) := Ki_id_Bruto * UserInput/BeleidsOpties/EIA/id;
	attribute<EUR>    Oi_wd_subsidie   (PlanRegio) := Ki_wd_Bruto * UserInput/BeleidsOpties/EIA/wd;
	attribute<EUR_Yr> Kj_ge_base       (PlanRegio) := (Ki_ge_Bruto - Oi_ge_subsidie) * NCW/bw28/AnnualisationFactor + Kj_ge_hv;
	attribute<EUR_Yr> Kj_id_base       (PlanRegio) := (Ki_id_Bruto - Oi_id_subsidie) * NCW/id28/AnnualisationFactor + KostenD/Kj_id_Onderhoud;
	attribute<EUR_Yr> Kj_wd_base       (PlanRegio) := (Ki_wd_Bruto - Oi_wd_subsidie) * NCW/wd28/AnnualisationFactor + KostenD/Kj_wd_Onderhoud + KostenD/Kj_wd_Admin;
	attribute<EUR_Yr> Oe_ge_subsidie   (PlanRegio) := Kj_ge_base * UserInput/BeleidsOpties/EEA/ge;
	attribute<EUR_Yr> Oe_id_subsidie   (PlanRegio) := Kj_wd_base * UserInput/BeleidsOpties/EEA/id;
	attribute<EUR_Yr> Oe_wd_subsidie   (PlanRegio) := Kj_wd_base * UserInput/BeleidsOpties/EEA/wd;
	attribute<EUR_Yr> Kj_ge_Netto      (PlanRegio) := Kj_ge_base - Oe_ge_subsidie;
	attribute<EUR_Yr> Kj_id_Netto      (PlanRegio) := Kj_id_base - Oe_id_subsidie;
	attribute<EUR_Yr> Kj_wd_Netto      (PlanRegio) := Kj_wd_base  + KostenD/Kj_Verbruik + KostenD/Kj_Precario - Oe_wd_subsidie - Oj_wd_KL;
	attribute<EUR_Yr> Kj_Netto         (PlanRegio) := Kj_ge_Netto + Kj_id_Netto + Kj_wd_Netto + KostenD/Kj_lv_Admin;
	
	attribute<EUR_Yr> Oj_wd            (PlanRegio) := Oj_wd_KL + Opbrengsten/JaarlijksD/Oj_Totaal;
	attribute<EUR_Yr> Oj_NettoD        (PlanRegio) := Opbrengsten/JaarlijksD/Oj_Totaal - Kj_Netto;
	attribute<EUR_Yr> Km_totaalD       (PlanRegio) := KostenD/Km_Totaal;
	attribute<MW>     CapaciteitsVraagD(PlanRegio) := KostenD/PrimairNet/P;
	attribute<GJ_Yr>  Vj_WarmtePrimairD(PlanRegio) := KostenD/Vj_WarmtePrimair;
	attribute<KG_Yr>  CO2_BijstookD    (PlanRegio) := VestaRunData/Prijzen/AardGas/CO2_GJ * KostenD/Bijstook/Vj_Bijstook;
}

