//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2011                                       //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                               FEBRUARI 2010                                          //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//       Deze DMS-file wordt aangeroepen door stam.dms                                  //
//       In deze configuratiefile worden de eenheden geconfigureerd.                    //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Units:
	isHidden       = "True",
	DisableStorage = "True"
{
	unit<Float64> m:            Expr = "BaseUnit('m', Float64)", Label = "Meter", Descr = "SI base unit for length";
	unit<Float64> dm :=         0.1 * m;
	unit<Float64> km:           Expr = "1000.0 * m",             cdf = "Classifications/km_7k/Classes";
	unit<Float64> m2:           Expr = "m * m";
	unit<Float64> km2:          Expr = "km * km";
	unit<Float64> ha:           Expr = "10000.0 * m2";
	
	unit<Float64> g   := BaseUnit('g', Float64);
	unit<Float64> kg  := 1000.0*g, Descr = "SI base unit for mass";
	unit<Float64> ton := 1000.0 * kg;
	unit<Float64> kton:         Expr = "1000.0 * ton";
	
	unit<Float64> s:            Expr = "baseunit('s', Float64)",  label = "second", Descr = "SI base unit for time";
	unit<Float64> s2:           Expr = "s*s";
	unit<Float64> hr:           Expr = "60 * 60 * s",              label = "hour";
	unit<Float64> yr:           Expr = "BaseUnit('Yr', Float64)",  label = "year",  Descr = "alternative unit for time duration";
	unit<Float64> _yr:          Expr = "1 / Yr",                   label = "year",  Descr = "alternative unit for time duration";
	unit<UInt16>  Jaar:         Expr = "BaseUnit('Jaar', UInt16)", Descr = "aanduiding van een tijdsperiode of moment";
	unit<Float64> J:            Expr = "baseUnit('J', Float64)",   label = "Joule", Descr = "SI unit for energy";
//	unit<Float64> J:            Expr = "kg * m2 / s2",             label = "Joule", Descr = "SI unit for energy";
	unit<Float64> W:            Expr = "J / s",                    label = "Watt",  Descr = "SI unit for power";
	unit<Float64> kW:           Expr = "1000 * W";
	unit<Float64> MW:           Expr = "1000 * kW";
	unit<Float64> kWh:          Expr = "kW * hr";
	unit<Float64> kWh_Yr:       Expr = "kWh / yr";
	unit<Float64> kWh_Yr_Woning:Expr = "kWh_Yr / nrWoningen";
	unit<Float64> kWh_Yr_m2:    Expr = "kWh_Yr / m2";
	unit<Float64> kJ:           Expr = "1000 * J";
	unit<Float64> MJ:           Expr = "1000 * kJ";
	unit<Float64> MJ_Yr:        Expr = "MJ / Yr";
	unit<Float64> MJ_Yr_m2:     Expr = "MJ_Yr / m2";
	unit<Float64> GJ:           Expr = "1000 * MJ";
	unit<Float64> PJ:           Expr = "1000000 * GJ";
	unit<Float64> GJ_Yr:        Expr = "GJ / Yr", label = "GigaJoule per Year", Descr = "unit for energy consumption (as opposed to power which indicates maximum capacity)";
	unit<Float64> PJ_Yr:        Expr = "PJ / Yr", label = "PetaJoule per Year", Descr = "alternative unit for aggregated consumption";
	unit<Float64> GJ_Yr_Woning: Expr = "GJ_Yr / nrWoningen";
	unit<Float64> GJ_Yr_m2:     Expr = "GJ_Yr / m2";
	unit<Float64> GJ_Yr_ha:     Expr = "GJ_Yr / ha";

	unit<Float64> m3:           Expr = "m*m*m";
	unit<Float64> GJ_m3:        Expr = "GJ / m3";
	unit<Float64> m3_GJ:        Expr = "m3 / GJ";
	unit<Float64> kWh_GJ:       Expr = "kWh / GJ";
	unit<Float64> m3_Yr := m3 / yr;

	unit<Float64> ggHa:         = ha, cdf = "Classifications/GrondgebruikHa9K/Classes";
	unit<uint8>   ggSector:     nrofrows = 14, Source = "Ruimtescanner";

	unit<Float64> Ratio:        = Range(1.0 * ggHa / ggHa, Float64(0), Float64(1)), cdf = "Classifications/Ratio9K/Classes";
	unit<Float64> Percent:      = 100.0 * Ratio,     cdf = "Classifications/Percentage13K/Classes";
	unit<Float64> Percent_yr:   = Percent / Yr;

	unit<Float64> Eur         := BaseUnit('EURO', Float64), Descr = "Euro prijspeil 2010";
	unit<Float64> Eur_Yr:      = EUR / Yr;
	unit<Float64> Eur_Yr_m:    = Eur_Yr / m;
	unit<Float64> Eur_ton:     = EUR / ton;
	unit<Float64> Eur_Woning:  = Eur / nrWoningen;
	unit<Float64> Eur_Yr_Woning:= Eur_Yr / nrWoningen;
	unit<Float64> Eur_aansl:   = EUR / nrAansl;
	unit<Float64> Eur_Yr_aansl:= EUR / Yr / nrAansl;
	unit<Float64> Eur_Yr_m2:   = EUR / Yr / m2;
	unit<Float64> Eur_kW:      = Eur / kW;
	unit<Float64> Eur_kW_Yr:   = Eur_kW / Yr; // gebruikt voor aansluitwaarden
	unit<Float64> EUR_MW:      = EUR / MW;
	unit<Float64> EUR_MW_Yr:   = EUR_MW / Yr; // gebruikt voor ranking van planregio's voor restwarmtetoewijzing.
	unit<Float64> kEur:        = 1000.0 * Eur;
	unit<Float64> mEur:        = 1000.0 * kEur;
	unit<Float64> Eur_Ha:      = EUR / ggHa;
	unit<Float64> kEur_Ha:     = 1000.0 * EUR_Ha;
	unit<Float64> mEur_Ha:     = 1000.0 * KEUR_Ha;
	unit<Float64> Eur_M2:      = EUR / m2, cdf = "Classifications/Eur_M2_15K/Classes";
	unit<Float64> kEur_yr:     = kEur / yr;
	unit<Float64> mEur_yr:     = mEur / yr;

	unit<Float64> Eur_GJ:      = EUR / GJ;
	unit<Float64> Eur_GJ_Yr:   = EUR / GJ_Yr; // gebruikt voor investeringskosten van EWV per FunctioneleVraag eenheid
	unit<Float64> Eur_m:       = EUR / m;
	unit<Float64> Eur_kWh:     = EUR / kWh;
	unit<Float64> kg_GJ:       = kg / GJ, Descr = "Co2 effect van energieproductie";
	unit<Float64> g_GJ:        = g / GJ, Descr = "andere effect van energieproductie";
	unit<Float64> kg_Yr:       = kg / Yr, Descr = "Co2 effect per jaar";
	unit<Float64> kton_Yr := kton / Yr;
	unit<Float64> Ton_Yr  := ton  / Yr;

// actor based units
	unit<Float64> nrPersonen:   = BaseUnit('Inwoner', Float64), cdf = "Classifications/NrInwoners12K/Classes"; 
	unit<Float64> nrArbeidspl:  = BaseUnit('FTE', Float64),     cdf = "Classifications/Nrarbeidspl12K/Classes";
	unit<Float64> nrWoningen:   = BaseUnit('Woning', Float64);
	unit<Float64> nrAansl:      = BaseUnit('Aansluiting', Float64);
	unit<Float64> Bouwlaag:     = BaseUnit('Bouwlaag', Float64);
	unit<Float64> PC6:          = BaseUnit('PC6', Float64);
	unit<Float64> PC4:          = BaseUnit('PC4', Float64);
	unit<Float64> kW_km2:       = kW / km2;
	unit<Float64> MW_PC4:       = MW / PC4;
	unit<Float64> kW_Woning:    = kW / nrWoningen;
	unit<Float64> kW_m2:        = kW / m2;
	unit<Float64> m2_aansl:     = m2 / nrAansl;
	unit<Float64> m2_Woning:    = m2 / nrWoningen;

	unit<float64> Attractiviteit;
	unit<Float64> Potentiaal: cdf = "Classifications/Potentiaal10K/Classes";

// External Keys
	unit<uint8> utiliteit_EK: Range = "[0, 10)";
}
