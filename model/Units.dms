//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2018                                      //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                                    JUNI 2018                                         //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//       Deze DMS-file wordt aangeroepen door stam.dms                                  //
//       In deze configuratiefile worden de eenheden (values units) geconfigureerd.     //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Units: isHidden = "True"
{
	// length
	unit<float64> m             := BaseUnit('m', float64), Label = "Meter", Descr = "SI base unit for length";
	unit<float64> km            := 1000.0 * m, cdf = "Classifications/km_7k/ClassBreaks";

	// area
	unit<float64> m2            := m * m;
	unit<float64> km2           := km * km;
	unit<float64> ha            := 10000.0 * m2;

	//mass
	unit<float64> kg            := 1000.0 * g, Descr = "SI base unit for mass";
	unit<float64> g             := BaseUnit('g', float64);
	unit<float64> ton           := 1000.0 * kg;

	// duration
	unit<float64> s             := baseunit('s', float64),   label = "second", descr = "SI base unit for time";
	unit<float64> hr            := 60 * 60 * s,              label = "hour";
	unit<float64> yr            := BaseUnit('yr', float64) , label = "year", descr = "alternative unit for time duration";
	unit<float64> _yr           := 1 / yr,                   label = "per year";
	
	// time moment
	unit<uint16>  yr_uint16     := uint16(yr), descr = "aanduiding van een moment, ook geschikt als domain";

	// volume
	unit<float64> m3            := m * m * m;
	unit<float64> m3_yr         := m3 / yr;

	// energy
	unit<float64> J             := BaseUnit('J', float64), label = "Joule", descr = "SI unit for energy";
//	unit<float64> J             := kg * m2 / (s * s), label = "Joule", descr = "SI unit for energy";

	// power
	unit<float64> W             := J / s, label = "Watt", descr = "SI unit for power";
	unit<float64> kW            := 1000 * W;
	unit<float64> MW            := 1000 * kW;

	// energy
	unit<float64> kWh           := kW * hr;
	unit<float64> kWh_yr        := kWh / yr;
	unit<float64> kWh_yr_m2     := kWh_yr / m2;
	unit<float64> kJ            := 1000 * J;
	unit<float64> MJ            := 1000 * kJ;
	unit<float64> MJ_yr         := MJ / yr;
	unit<float64> GJ            := 1000 * MJ;
	unit<float64> PJ            := 1000000 * GJ;
	unit<float64> GJ_yr         := GJ / yr, label = "GigaJoule per Year", Descr = "unit for energy consumption (as opposed to power which indicates maximum capacity)";
	unit<float64> PJ_yr         := PJ / yr, label = "PetaJoule per Year", Descr = "alternative unit for aggregated consumption";
	unit<float64> GJ_yr_m2      := GJ_yr / m2;
	unit<float64> GJ_m3         := GJ / m3;

	// effects of energyproduction
	unit<float64> kg_GJ         := kg / GJ, Descr = "Co2 effect van energieproductie";
	unit<float64> g_GJ          :=  g / GJ, Descr = "andere effect van energieproductie";
	unit<float64> kg_yr         := kg / yr, Descr = "Co2 effect per jaar";

	// actor based
	unit<float64> nrWoningen    := BaseUnit('Woning', float64);
	unit<float64> nrAansl       := BaseUnit('Aansluiting', float64);
	unit<float64> Bouwlaag      := BaseUnit('Bouwlaag', float64);
	unit<float64> kW_Woning     := kW / nrWoningen;
	unit<float64> kW_m2         := kW / m2;
	unit<float64> m2_Aansl      := m2 / nrAansl;
	unit<float64> m2_Woning     := m2 / nrWoningen;

	// financial
	unit<float64> Eur           := BaseUnit('EurO', float64), Descr = "Euro prijspeil 2010";
	unit<float64> kEur          := 1000.0 * Eur;
	unit<float64> mEur          := 1000.0 * kEur;
	unit<float64> Eur_m         := Eur / m;
	unit<float64> Eur_M2        := Eur / m2, cdf = "Classifications/Eur_M2_15K/ClassBreaks";
	unit<float64> Eur_Ha        := Eur / ha;
	unit<float64> Eur_yr        := Eur / yr;
	unit<float64> mEur_yr       := mEur / yr;
	unit<float64> Eur_yr_m      := Eur_yr / m;
	unit<float64> Eur_yr_m2     := Eur / yr / m2;
	unit<float64> Eur_kW        := Eur / kW;
	unit<float64> Eur_kW_yr     := Eur_kW / yr; // gebruikt voor aansluitwaarden
	unit<float64> Eur_MW        := Eur / MW;
	unit<float64> Eur_MW_yr     := Eur_MW / yr; // gebruikt voor ranking van planregio's voor restwarmtetoewijzing.
	unit<float64> Eur_GJ        := Eur / GJ;
	unit<float64> Eur_Woning    := Eur / nrWoningen;
	unit<float64> Eur_Aansl     := Eur / nrAansl;
	unit<float64> Eur_yr_Aansl  := Eur / yr / nrAansl;

	// no metric
	unit<float64> Ratio         := range(1.0 * ha / ha, 0.0, 1.0), cdf = "Classifications/Ratio9K/ClassBreaks";
	unit<float64> Percent       := 100.0 * Ratio, cdf = "Classifications/Percentage13K/ClassBreaks";
	unit<float64> Percent_yr    := Percent / yr;
	unit<float64> Potentiaal    : cdf = "Classifications/Potentiaal10K/ClassBreaks";
}
