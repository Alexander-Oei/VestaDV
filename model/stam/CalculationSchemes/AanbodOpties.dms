//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container AanbodOpties
{
	#include <RestWarmte.dms>
	#include <RestWarmteIteratie.dms>
	#include <GeoThermie.dms>
	#include <WKO.dms>
	#include <WKOWoningData.dms>
	#include <WKOUtilData.dms>
	#include <WKOData.dms>
	#include <WKOIter.dms>
	#include <WKOResults.dms>
	#include <WijkTempl.dms>
	#include <LtWarmtenet.dms>
	#include <LtData.dms>
	#include <LtBronIter.dms>
	#include <ltResults.dms>

	Template WijkWKK
	{
		// begin case parameters
		container BeginStatus;
		container AanbodKentallen;
		container EnergiePrijzen;
		parameter<units/yr_uint16> Jaar;
		// end case parameters

		//parameter<kg_GJ> CO2_GJ :=  Impl/kosten/CO2_GJ + 0[GJ];

		// emissies per GJ gas voor WijkWKK
		parameter<kg_GJ> CO2_GJb := Prijzen/AardGas/CO2_GJ;
		parameter<g_GJ>  NOx_GJb :=  28[g_GJ];
		parameter<g_GJ>  SO2_GJb :=   0[g_GJ];
		parameter<g_GJ>  VOS_GJb := 420[g_GJ];
		parameter<g_GJ>  TS_GJb  :=   0[g_GJ];

		container Impl    := WijkTempl(BeginStatus, AanbodKentallen, EnergiePrijzen, Jaar, Kengetallen/WarmteBronnen/WijkWKK/TypeInfo, Classifications/GebiedsOptie/V/WijkWKK, '', 400[PJ_yr]), isHidden = "True";
		unit<uint32> PlanRegio := .../PlanRegio;
		attribute<kg_yr> CO2(PlanRegio) := impl/CO2;
		
		container Results := Impl/Results {
			container WijkWKK := Impl/Results/WijkResults;
		}
	}
	
	Template BioWKK
	{
		// begin case parameters
		container BeginStatus;
		container AanbodKentallen;
		container EnergiePrijzen;
		parameter<units/yr_uint16> Jaar;
		// end case parameters

		// emissies per GJ bio-brandstof voor BioWKK.
		parameter<kg_GJ> CO2_GJb :=  0[kg_GJ]; // obv definitie hernieuwbare bron.
		parameter<g_GJ>  NOx_GJb := 49[g_GJ];
		parameter<g_GJ>  SO2_GJb := 10[g_GJ];
		parameter<g_GJ>  VOS_GJb :=  0[g_GJ];
		parameter<g_GJ>  TS_GJb  :=  2[g_GJ];

		container Impl    := WijkTempl(BeginStatus, AanbodKentallen, EnergiePrijzen, Jaar, Kengetallen/WarmteBronnen/BioWKK/TypeInfo, Classifications/GebiedsOptie/V/BioWKK, 'BioWKK_Start', 100[PJ_yr]), isHidden = "True";
		container Results := Impl/Results {
			container BioWKK := Impl/Results/WijkResults;
		}
		unit<uint32> PlanRegio := .../PlanRegio;
		attribute<kg_yr> CO2(PlanRegio) := impl/CO2;
	}
	Template Lt15_30
	{
		// begin case parameters
		container BeginStatus;
		container AanbodKentallen;
		container EnergiePrijzen;
		parameter<units/yr_uint16> Jaar;
		// end case parameters
		
		container impl := LtWarmtenetImpl(BeginStatus, BeginStatus/Lt15_30, AanbodKentallen, EnergiePrijzen, Jaar, 15[Celsius], 30[Celsius]);
		container ObjectResults := impl/ObjectResults;
		container Results := Impl/Results {
			container Lt15_30 := LtWarmtenet;
		}
	}
	
	Template Lt15_50
	{
		// begin case parameters
		container BeginStatus;
		container AanbodKentallen;
		container EnergiePrijzen;
		parameter<units/yr_uint16> Jaar;
		// end case parameters
		
		container impl := LtWarmtenetImpl(BeginStatus, BeginStatus/Lt15_50, AanbodKentallen, EnergiePrijzen, Jaar, 15[Celsius], 50[Celsius]);
		container ObjectResults := impl/ObjectResults;
		container Results := Impl/Results {
			container Lt15_50 := LtWarmtenet;
		}
	}
	Template Lt15_70
	{
		// begin case parameters
		container BeginStatus;
		container AanbodKentallen;
		container EnergiePrijzen;
		parameter<units/yr_uint16> Jaar;
		// end case parameters
		
		container impl := LtWarmtenetImpl(BeginStatus, BeginStatus/Lt15_70, AanbodKentallen, EnergiePrijzen, Jaar, 15[Celsius], 70[Celsius]);
		container ObjectResults := impl/ObjectResults;
		container Results := Impl/Results {
			container Lt15_70 := LtWarmtenet;
		}
	}
	Template Lt30_30
	{
		// begin case parameters
		container BeginStatus;
		container AanbodKentallen;
		container EnergiePrijzen;
		parameter<units/yr_uint16> Jaar;
		// end case parameters
		
		container impl := LtWarmtenetImpl(BeginStatus, BeginStatus/Lt30_30, AanbodKentallen, EnergiePrijzen, Jaar, 30[Celsius], 30[Celsius]);
		container ObjectResults := impl/ObjectResults;
		container Results := Impl/Results {
			container Lt30_30 := LtWarmtenet;
		}
	}
	Template Lt30_50
	{
		// begin case parameters
		container BeginStatus;
		container AanbodKentallen;
		container EnergiePrijzen;
		parameter<units/yr_uint16> Jaar;
		// end case parameters
		
		container impl := LtWarmtenetImpl(BeginStatus, BeginStatus/Lt30_50, AanbodKentallen, EnergiePrijzen, Jaar, 30[Celsius], 50[Celsius]);
		container ObjectResults := impl/ObjectResults;
		container Results := Impl/Results {
			container Lt30_50 := LtWarmtenet;
		}
	}
	Template Lt30_70
	{
		// begin case parameters
		container BeginStatus;
		container AanbodKentallen;
		container EnergiePrijzen;
		parameter<units/yr_uint16> Jaar;
		// end case parameters
		
		container impl := LtWarmtenetImpl(BeginStatus, BeginStatus/Lt30_70, AanbodKentallen, EnergiePrijzen, Jaar, 30[Celsius], 70[Celsius]);
		container ObjectResults := impl/ObjectResults;
		container Results := Impl/Results {
			container Lt30_70 := LtWarmtenet;
		}
	}
	template PlanregioOptieResultaat {
		container BebouwingsComponent;
		parameter<Classifications/GebiedsOptie> Optie;
		attribute<Bool> GebruikOptie(PlanRegio);
		
		unit<uint32> PlanRegio := Invoer/SpecifiekeInstellingen/PlanRegio;
		
		unit<uint32> BebouwingsObject := BebouwingsComponent/BebouwingsObject;
		container result := BebouwingsComponent
		{
			attribute<Classifications/WarmteOptie> WarmteAllocatie(BebouwingsObject) := 
				Classifications/WarmteOptie/kanGebiedsOptie[BebouwingsComponent/WarmteAllocatie] && GebruikOptie[BebouwingsComponent/PlanRegio_rel]
				? Classifications/GebiedsOptie/WarmteOptie_rel[Optie]
				: BebouwingsComponent/WarmteAllocatie;
		}
		
	}
	
	template GebiedsAllocatieResultaat_optellen {
		container Cumulator;
		container Increment;
		
		unit<uint32> PlanRegio := Invoer/SpecifiekeInstellingen/PlanRegio;
		container results {
			container Flow
			{
				container ge {
					attribute<Eur_yr> Kj_ge_hv        (PlanRegio) := Cumulator/Flow/ge/Kj_ge_hv + Increment/Flow/ge/Kj_ge_hv;
					attribute<Eur_yr> Kji_ge_ov       (PlanRegio) := Cumulator/Flow/ge/Kji_ge_ov + Increment/Flow/ge/Kji_ge_ov;
					attribute<Eur_yr> Kji_ge_pm       (PlanRegio) := Cumulator/Flow/ge/Kji_ge_pm + Increment/Flow/ge/Kji_ge_pm;
					
					attribute<Eur_yr> Kmi_ge_ov       (PlanRegio) := Cumulator/Flow/ge/Kmi_ge_ov + Increment/Flow/ge/Kmi_ge_ov;
					attribute<Eur_yr> Kmi_ge_pm       (PlanRegio) := Cumulator/Flow/ge/Kmi_ge_pm + Increment/Flow/ge/Kmi_ge_pm;
					attribute<Eur_yr> Om_ge_comfort   (PlanRegio) := Cumulator/Flow/ge/Om_ge_comfort + Increment/Flow/ge/Om_ge_comfort;
					
					attribute<Eur_yr> Oji_ge_EIA      (PlanRegio) := Cumulator/Flow/ge/Oji_ge_EIA + Increment/Flow/ge/Oji_ge_EIA;
					attribute<Eur_yr> Omi_ge_EIA      (PlanRegio) := Cumulator/Flow/ge/Omi_ge_EIA + Increment/Flow/ge/Omi_ge_EIA;
				}
				
				container id {
					attribute<Eur_yr> Kj_id_gas       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_id_gas_EH    (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_id_gas_CO2   (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Km_id_gas       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kj_id_elek      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_id_elek_EH   (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_id_elek_CO2  (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Km_id_elek      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kj_id_oh        (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_id_adm       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kji_id          (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kmi_id          (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Oji_id_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Omi_id_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					/// TODO: ook aanpassen in rentabiliteitsafwegingen 
					attribute<Eur_yr> Oj_id_SDE       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Oj_id_EEA       (PlanRegio) := Cumulator/xxx + Increment/xxx;
				}
				
				container wd {
					attribute<Eur_yr> Kj_wd_gas       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_wd_gas_EH    (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_wd_gas_CO2   (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Km_wd_gas       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kj_wd_elek      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_wd_elek_EH   (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_wd_elek_CO2  (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Km_wd_elek      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kj_wd_oh        (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_wd_adm       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kji_wd          (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kmi_wd          (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Oji_wd_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Omi_wd_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					/// TODO: ook aanpassen in rentabiliteitsafwegingen 
					attribute<Eur_yr> Oj_wd_SDE       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Oj_wd_EEA       (PlanRegio) := Cumulator/xxx + Increment/xxx;
				}
				container pt {
					attribute<Eur_yr> Kj_pt_oh        (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_pt_adm       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kji_pt          (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kmi_pt          (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Oji_pt_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Omi_pt_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Oj_pt_EEA       (PlanRegio) := Cumulator/xxx + Increment/xxx;
				}
				container ow {
					attribute<Eur_yr> Kj_ow_gas       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Km_ow_gas       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_ow_gas_EH    (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_ow_gas_CO2   (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kj_ow_elek      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Km_ow_elek      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_ow_elek_EH   (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_ow_elek_CO2  (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kj_ow_productie (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kj_ow_oh        (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kj_ow_adm       (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Kji_ow          (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Kmi_ow          (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Oji_ow_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Omi_ow_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					/// TODO: ook aanpassen in rentabiliteitsafwegingen 
					attribute<Eur_yr> Oj_ow_EEA       (PlanRegio) := Cumulator/xxx + Increment/xxx;
						
					attribute<Eur_yr> Oj_ow_SDE   (PlanRegio) := Cumulator/xxx + Increment/xxx;
				}
				container lv
				{
					attribute<Eur_yr> Oji_lv_Aansl    (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Omi_lv_Aansl    (PlanRegio) := Cumulator/xxx + Increment/xxx;
					
					attribute<Eur_yr> Oj_lv_verbruik  (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Oj_lv_vastrecht (PlanRegio) := Cumulator/xxx + Increment/xxx;
					attribute<Eur_yr> Oj_lv_SDE       (PlanRegio) := Cumulator/xxx + Increment/xxx;
				}
			}

			container Stock
			{
				attribute<Eur> Oi_lv_Aansl    (PlanRegio) := Cumulator/xxx + Increment/xxx;
				
				attribute<Eur> Ki_ge_ov       (PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Eur> Ki_ge_pm       (PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Eur> Oi_ge_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
				
				attribute<Eur> Ki_id          (PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Eur> Oi_id_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
				
				attribute<Eur> Ki_wd          (PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Eur> Oi_wd_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
				
				attribute<Eur> Ki_pt          (PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Eur> Oi_pt_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
				
				attribute<Eur> Ki_ow          (PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Eur> Oi_ow_EIA      (PlanRegio) := Cumulator/xxx + Increment/xxx;
			}
			
			container Verbruik
			{
				attribute<Gj_yr>	V_id_gas	(PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Gj_yr>	V_wd_gas	(PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Gj_yr>	V_ow_gas	(PlanRegio) := Cumulator/xxx + Increment/xxx;
				
				attribute<Gj_yr>	V_id_elek	(PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Gj_yr>	V_wd_elek	(PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Gj_yr>	V_ow_elek	(PlanRegio) := Cumulator/xxx + Increment/xxx;
				
				attribute<Gj_yr>	V_id_verlies(PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Gj_yr>	V_wd_verlies(PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Gj_yr>	V_pt_verlies(PlanRegio) := Cumulator/xxx + Increment/xxx;
				
				attribute<Gj_yr>	V_warmte	(PlanRegio) := Cumulator/xxx + Increment/xxx;
				attribute<Gj_yr>	V_koude		(PlanRegio) := Cumulator/xxx + Increment/xxx;
			}
			
			container Uitstoot
			{
				attribute<KG_yr> CO2_id_gas (PlanRegio) :=	Cumulator/xxx + Increment/xxx;
				attribute<KG_yr> CO2_wd_gas (PlanRegio) :=	Cumulator/xxx + Increment/xxx;
				attribute<KG_yr> CO2_ow_gas (PlanRegio) :=	Cumulator/xxx + Increment/xxx;
				
				attribute<KG_yr> CO2_id_elek(PlanRegio) :=	Cumulator/xxx + Increment/xxx;
				attribute<KG_yr> CO2_wd_elek(PlanRegio) :=	Cumulator/xxx + Increment/xxx;
				attribute<KG_yr> CO2_ow_elek(PlanRegio) :=	Cumulator/xxx + Increment/xxx;
			}
		}
	}
	
}
