//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template WijkTempl
{
	// begin case parameters
	container BeginStatus;
	container AanbodKentallen;
	container EnergiePrijzen;
	parameter<units/yr_uint16> Jaar;
	container TypeInfo;
	parameter<Classifications/GebiedsOptie> Optie;
	parameter<string> StartJaarAttr;
	parameter<PJ_yr> MaxTotalDemand;
	// end case parameters

	unit<uint32> PlanRegio := SpecifiekeInstellingen/PlanRegio
	{
		attribute<units/yr_uint16> StartJaar := =StartJaarAttr != '' ? StartJaarAttr : 'const(2000[units/yr_uint16], .)';
	}

	container KostenBaten := CalculationSchemes/KostenBaten(BeginStatus/Bebouwing, invoer/Energieprijzen);
	
	container Kosten
	{
		attribute<Eur> Ki_Totaal_nu (PlanRegio) := 
			(TypeInfo/Ki_kW_min * Schuiven/KostenMin + TypeInfo/Ki_kW_max * Schuiven/KostenMax) 
			* max_elem(KostenBaten/CapaciteitsVraagD, TypeInfo/MWth_min) 
			* 1000[kW / MW];

		attribute<Eur> Ki_Totaal (PlanRegio) := Ki_Totaal_nu * LeerCurves/Curve2;
		attribute<Eur> Oi_EIA    (PlanRegio) := Ki_Totaal * SpecifiekeInstellingen/Beleid/EIA/ow[TypeInfo/TypeInfoList_rel];
		attribute<Eur> Ki_Netto  (PlanRegio) := Ki_Totaal - Oi_EIA;

		parameter<Eur_GJ> K_GJ    := ='TypeInfo/K_GJ'+string(Jaar-2000w); 
		parameter<KG_GJ>  CO2g_GJ := TypeInfo/RekenType/Factoren/Aardgas       * Prijzen/AardGas/CO2_GJ;
		parameter<KG_GJ>  CO2e_GJ := TypeInfo/RekenType/Factoren/Elektriciteit * Prijzen/Elektriciteit/CO2_GJ;
		parameter<KG_GJ>  CO2_GJ  := CO2g_GJ + CO2e_GJ, Source = "FO v7a C.5 WijkWKK";

		parameter<Eur_GJ> Km_GJ   := K_GJ;

		attribute<Eur_yr> Kj_Base         (PlanRegio) := Ki_Totaal * TypeInfo/Rj_Onderhoud;
		attribute<Eur_yr> Kj_Admin        (PlanRegio) := Kj_Base * Kengetallen/Onderhoud/R_Admin;
		attribute<Eur_yr> Kj_Onderhoud    (PlanRegio) := Kj_Base - Kj_Admin;
		attribute<Eur_yr> Kj_WarmteWaarde (PlanRegio) := K_GJ  * KostenBaten/Vj_WarmtePrimairD;
		attribute<Eur_yr> Km_WarmteWaarde (PlanRegio) := Km_GJ * KostenBaten/Vj_WarmtePrimairD;
		attribute<Eur_yr> Ke_Totaal       (PlanRegio) := TypeInfo/RekenType/Factoren/Elektriciteit * KostenBaten/Vj_WarmtePrimairD * last(prijzen/Elektriciteit/Staffel/KGJ_Commodity);

		attribute<Eur_yr> Kj_Totaal       (PlanRegio) := Kj_Base + Kj_WarmteWaarde;
		attribute<Eur_yr> Km_Totaal       (PlanRegio) := Kj_Base + Km_WarmteWaarde; // Let op: de warmtewaarde is momemteel incl belasting etc.
	}

	attribute<Eur   > Oi_Totaal  (PlanRegio) := KostenBaten/Oi_Aansluitbijdrage ;
	attribute<Eur   > Ki_Totaal  (PlanRegio) := KostenBaten/Ki_wd_bruto + Kosten/Ki_Totaal;
	attribute<Eur_yr> Ke_Totaal  (PlanRegio) := Kosten/Ke_Totaal;
	
	attribute<Eur_yr> Km_Totaal  (PlanRegio) := KostenBaten/Km_TotaalD + Kosten/Km_Totaal;
	attribute<Eur_yr> Oji_Netto  (PlanRegio) := KostenBaten/Oji_NettoD - Kosten/Kj_Totaal;
	attribute<kg_yr>  CO2_Primair(PlanRegio) := KostenBaten/Vj_WarmtePrimairD * Kosten/CO2_GJ;
	attribute<GJ_yr>  GJe_Totaal (PlanRegio) := KostenBaten/Vj_WarmtePrimairD * TypeInfo/RekenType/Factoren/Elektriciteit;
	attribute<kg_yr>  CO2_e      (PlanRegio) := KostenBaten/Vj_WarmtePrimairD * Kosten/CO2e_GJ;
	attribute<kg_yr>  CO2        (PlanRegio) := KostenBaten/CO2_BijstookD + CO2_Primair;
	
	attribute<Eur_yr> Oji_Yield  (PlanRegio) :=  Oji_Netto - Kosten/Ki_Netto * NCW/ow28/AnnualisationFactor * (1.0 - SpecifiekeInstellingen/Beleid/EEA/ow[TypeInfo/TypeInfoList_rel]);

	attribute<GJ_yr>  Vj_Warmte  (PlanRegio) := max_elem(KostenBaten/Vj_WarmtePrimairD, 0.001[GJ_yr]);
	attribute<Eur_GJ> YieldPerGJ (PlanRegio) := Oji_Yield / Vj_Warmte + SpecifiekeInstellingen/Beleid/EEA/SDE[TypeInfo/TypeInfoList_rel];
	parameter<Eur_GJ> Threshold := -nth_element_weighted( -YieldPerGJ  * Float64(not(OldGebruik)), MaxTotalDemand * 1000000[GJ / PJ], Vj_Warmte);
	
	attribute<Bool> RentabiliteitsAfweging (PlanRegio) := YieldPerGJ > max_elem(Threshold, 0[Eur_GJ]);

	attribute<Bool> OldGebruik    (PlanRegio) := IsDefined(BeginStatus/PlanRegioWarmteAllocatie_REMOVE); // een optie (deze of andere) was al in gebruik
	attribute<Bool> GebruiktOptie (PlanRegio) := BeginStatus/PlanRegioWarmteAllocatie_REMOVE == Optie;   // deze optie was al in gebruik;
	attribute<Bool> NewGebruik    (PlanRegio) := RentabiliteitsAfweging && (PlanRegio/StartJaar >= Jaar) && not(OldGebruik);
	attribute<Bool> GebruikOptie  (PlanRegio) := NewGebruik || GebruiktOptie;

	container Results := BeginStatus
	{
		container Factoren := TypeInfo/RekenType/Factoren;
		
		attribute<Classifications/GebiedsOptie> PlanRegioWarmteAllocatie_REMOVE (PlanRegio) := ../GebruikOptie ? Optie : BeginStatus/PlanRegioWarmteAllocatie_REMOVE;
		
		// TODO: Ook toepassen in andere Planregio Opties: Geothermie, Restwarmte
		container BebouwingMutatie :=
			for_each_ne(Classifications/BebouwingsComponent/Name
				, 'PlanRegioOptieResultaat(BeginStatus/Bebouwing/'+Classifications/BebouwingsComponent/Name+', Optie, .../GebruiktOptie)'
			);
		container Bebouwing :=
			for_each_ne(Classifications/BebouwingsComponent/Name
				, 'BebouwingMutatie/'+Classifications/BebouwingsComponent/Name+'/result'
			);
				
		container Stock := BeginStatus/Stock
		{
			attribute<Eur> Ki_ow         (PlanRegio) := BeginStatus/Stock/Ki_ow          + (NewGebruik ? Kosten/Ki_Totaal : 0[Eur]);
			attribute<Eur> Oi_ow_subsidie(PlanRegio) := BeginStatus/Stock/Oi_ow_subsidie + (NewGebruik ? Kosten/Oi_EIA    : 0[Eur]);
			attribute<Eur> Oe_ow_subsidie(PlanRegio) := BeginStatus/Stock/Oe_ow_subsidie + (NewGebruik ? Kosten/Ki_Netto * SpecifiekeInstellingen/Beleid/EEA/ow[TypeInfo/TypeInfoList_rel] : 0[Eur]);
		}
		container Flow := BeginStatus/Flow
		{
			attribute<Eur_yr> Kj_ow_oh       (PlanRegio) := BeginStatus/Flow/Kj_ow_oh        + (GebruikOptie ? Kosten/Kj_Onderhoud    : 0[Eur_yr]);
			attribute<Eur_yr> Kj_ow_adm      (PlanRegio) := BeginStatus/Flow/Kj_ow_adm       + (GebruikOptie ? Kosten/Kj_admin        : 0[Eur_yr]);
			attribute<Eur_yr> Kj_ow_verbruik (PlanRegio) := BeginStatus/Flow/Kj_ow_verbruik  + (GebruikOptie ? Kosten/Kj_WarmteWaarde : 0[Eur_yr]);
			attribute<Eur_yr> Km_ow_verbruik (PlanRegio) := BeginStatus/Flow/Km_ow_verbruik  + (GebruikOptie ? Kosten/Km_WarmteWaarde : 0[Eur_yr]);
			attribute<Eur_yr> Oj_SDE         (PlanRegio) := BeginStatus/Flow/Oj_SDE          + (GebruikOptie ? Vj_Warmte * SpecifiekeInstellingen/Beleid/EEA/SDE[TypeInfo/TypeInfoList_rel] : 0[Eur_yr]);
		}
	}
}
