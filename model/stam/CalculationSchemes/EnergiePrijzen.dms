//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2018                                      //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                                    JUNI 2018                                         //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
// Dit is de container met rekenschema's voor Energieprijzen voor het project Vesta     //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container EnergiePrijzen {
	template GebruiksSectie
	{
		unit<uint32> Table;
		parameter<string> code;
		attribute<Eur_GJ> distr_trans      (table) := ='(Table/'+code+'_PC_DIS[Eur_per_eenheid] + Table/'+code+'_PC_TRANS[Eur_per_eenheid]) * OmrekenFactor * InflationFactor';
		attribute<Eur_GJ> netwerk          (table) := ='Table/'+code+'_PC_NET[Eur_per_eenheid] * OmrekenFactor * InflationFactor';
		attribute<Eur_GJ> CommodityPrice   (table) := ='Table/'+code+'_PC_COM_EXCL_CO2[Eur_per_eenheid] * OmrekenFactor * InflationFactor';
		attribute<Eur_GJ> CO2Heffing       (table) := ='Table/'+code+'_PC_CO2         [Eur_per_eenheid] * OmrekenFactor * InflationFactor';
		attribute<Eur_GJ> EnergieHeffing   (table) := ='(Table/'+code+'_PC_BEL_EL[Eur_per_eenheid] + Table/'+code+'_PC_SDE[Eur_per_eenheid]) * OmrekenFactor * InflationFactor';

		attribute<Eur_GJ> maatschappelijk  (table) := CommodityPrice + CO2Heffing + netwerk;
		attribute<Eur_GJ> eindgebruik_excl (table) := maatschappelijk + EnergieHeffing;
	}
	template ImportElekGas
	{
		parameter<String>     FileName;
		unit<float64>         model_eenheid;
		unit<float64>         eenheid_GJ;
		parameter<eenheid_GJ> OmrekenFactor;
		parameter<_yr>        AnnualPriceInflationFactor;
		parameter<string>     GlastuinbouwExpr;

		unit<float64> Eur_per_eenheid := units/Eur / model_eenheid;

		unit<uint32> Table
		:	StorageName     = "='%EnergieDataProjDir%/'+ FileName + '.csv'"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		,	SyncMode        = "All";

		container Results
		{
			attribute<units/yr_uint16> Jaar            (table) := Table/Jaar[ units/yr_uint16 ];
			attribute<Ratio>           InflationFactor (table) := exp(float64(Jaar - 2010[units/yr_uint16]) * AnnualPriceInflationFactor);
			attribute<KG_GJ>           CO2_GJ          (table) := TABLE/RAT_CO2_KWH[KG / model_eenheid] * OmrekenFactor;

			container Teruglevering {
				parameter<string> code := 'TL';
				
				attribute<Eur_GJ> distr_trans      (table) := const(0[Eur_GJ], table);
				attribute<Eur_GJ> netwerk          (table) := const(0[Eur_GJ], table);
				attribute<Eur_GJ> CommodityPrice   (table) := KleinGebruik/CommodityPrice;
				attribute<Eur_GJ> CO2Heffing       (table) := const(0[Eur_GJ], table);
				attribute<Eur_GJ> EnergieHeffing   (table) := const(0[Eur_GJ], table);

				attribute<Eur_GJ> maatschappelijk  (table) := CommodityPrice + CO2Heffing + netwerk;
				attribute<Eur_GJ> eindgebruik_excl (table) := maatschappelijk + EnergieHeffing;
			}

			container KleinGebruik        := GebruiksSectie(table, 'KG');
			container KleinMiddelGebruik  := GebruiksSectie(table, 'KMG');
			container MiddelMiddelGebruik := GebruiksSectie(table, 'MMG');
			container GrootGebruik        := GebruiksSectie(table, 'GG');
			container GlasTuinBouw        := =GlastuinbouwExpr;
		}
	}
	template ImportOverig
	{
		parameter<String> FileName;
		parameter<_yr>    AnnualPriceInflationFactor;

		unit<uint32> Table
		:	StorageName     = "='%EnergieDataProjDir%/'+ FileName + '.csv'"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		,	SyncMode        = "All";

		container Results
		{
			attribute<units/yr_uint16> Jaar  (table) := Table/Jaar[units/yr_uint16];
			attribute<Ratio> InflationFactor (table) := exp(float64(Jaar - 2010[ units/yr_uint16 ]) * AnnualPriceInflationFactor);
			attribute<Eur_GJ> BioMassa       (table) := TABLE/KGJ_BioMassa    [Eur_GJ] * InflationFactor;
			attribute<Eur_GJ> Kolen_Excl     (table) := TABLE/KGJ_Kolen_Excl  [Eur_GJ] * InflationFactor;
			attribute<Eur_GJ> Kolen_CO2      (table) := TABLE/KGJ_Kolen_CO2   [Eur_GJ] * InflationFactor;
		}
	}
	template All
	{
		parameter<String> FileName;
		parameter<_yr>    AnnualPriceInflationFactor;

		container Elektriciteit := ImportElekGas(FileName + '_Elek',   kwh, Kwh / GJ, value( 1000000.0 / 3600.0, kWh / GJ),        AnnualPriceInflationFactor, 'GrootGebruik' );
		container AardGas       := ImportElekGas(FileName + '_Gas',     m3,  m3 / GJ, 1.0 / Invoer/SpecifiekeInstellingen/FysiekeConstanten/GasEnergie, AnnualPriceInflationFactor, 'GebruiksSectie(table, ''GLAST'')');
		container Overig        := ImportOverig ('OverigeKosten', AnnualPriceInflationFactor);
	}
}