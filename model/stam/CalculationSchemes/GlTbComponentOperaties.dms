//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2018                                      //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                                    JUNI 2018                                         //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//           Dit is de container met rekenschema's die werken op UtiliteitsComponenten  //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container GlTbComponentOperaties
{
	template MaakMutatieNieuwbouw
	{
		// begin case parameters
		attribute<bool>            bij (Geography/rdc_grids/m100);
		attribute<bool>            af  (Geography/rdc_grids/m100);
		parameter<units/yr_uint16> zichtjaar;

		unit<uint32> bron := Bebouwing/impl/BestaandeGlTb;

		// einde case parameters

		container impl: IsHidden = "True"
		{
			unit<uint32> lokatiesBij := Subset(bij)
			{
				attribute<Geography/rdc_meter>                point        := Geography/rdc_grids/m100/point[nr_OrgEntity];
				attribute<Geography/RegioIndelingen/blok500m> blok500m_rel := Geography/rdc_grids/m100/blok500m_rel[nr_OrgEntity];
				attribute<Geography/RegioIndelingen/blok1km>  blok1km_rel  := Geography/rdc_grids/m100/blok1km_rel[nr_OrgEntity];
				attribute<Geography/RegioIndelingen/blok2km>  blok2km_rel  := Geography/rdc_grids/m100/blok2km_rel[nr_OrgEntity];
			}
		}
		unit<uint32>  results := combine(impl/lokatiesBij, Classifications/GLTB)
		,	DialogType ="Map"
		,	DialogData ="Point"
		{
			// units en attributen van BebouwingsComponent
			attribute<String>              Code                         := String(ModelObjectKey)+ String(Bouwjaar) + String(Point);
			attribute<string>              Label                        := Code, DialogType = "LabelText";

			unit<uint8>   BebouwingsTypeDomein := Classifications/GLTB;

			attribute<Geography/rdc_meter>                point               := impl/lokatiesBij/point[nr_1];
			attribute<Geography/RegioIndelingen/blok500m> blok500m_rel        := impl/lokatiesBij/blok500m_rel[nr_1];
			attribute<Geography/RegioIndelingen/blok1km>  blok1km_rel         := impl/lokatiesBij/blok1km_rel [nr_1];
			attribute<Geography/RegioIndelingen/blok2km>  blok2km_rel         := impl/lokatiesBij/blok2km_rel [nr_1];
			attribute<BebouwingsTypeDomein>               BebouwingsType      := GLTB_Code;
			attribute<Classifications/bouwjaar>           bouwjaarOrg         := const(classify(value(zichtjaar, units/Yr)-value(0.5, units/Yr),  classifications/bouwjaar/ClassBreak), .);
			attribute<Classifications/bouwjaar>           bouwjaar            := (bouwjaarOrg < Classifications/BouwJaar/V/n2020) ? Classifications/BouwJaar/Onbekend : bouwjaarOrg;
			attribute<UInt8>                              ModelObjectKey      := BebouwingsType * UInt8(NrOfRows(Classifications/BouwJaar)) + BouwJaar;
			attribute<m2>                                 NrJoinedunits       := Oppervlakte;
			attribute<nrAansl>                            nrAansluitingen_i   := const(1[nrAansl   ], .), FreeData = "True";
			attribute<nrWoningen>                         nrWoonunits_i       := const(0[nrWoningen], .), FreeData = "True";

			// overige attributen
			attribute<Classifications/GLTB>               GLTB_code           := nr_2;
			attribute<units/ratio>                        Verdeling           := BronData/GlasTuinBouw/Verdeling/nl/GLTB[GLTB_code];
			attribute<m2>                                 Oppervlakte         := Verdeling * 10000[units/m2];
			attribute<float64>                            AandeelWarmteVraag  := const(1.0, .); // geen AandeelWarmteVraag in de nieuwe glastuinbouw

			container Criteria;
			container Gebied: FreeData = "True" // noodzakelijk voor Bebouwingscomponent interfact, hoewel gtb niet gebruikt wordt voor WKO.
			{
				attribute<float64> n      (..) := const(0.0, ..);
				attribute<float64> MEAN_x (..) := const(0.0, ..);
				attribute<float64> MEAN_y (..) := const(0.0, ..);
				attribute<float64> SSD_xx (..) := const(0.0, ..);
				attribute<float64> SSD_xy (..) := const(0.0, ..);
				attribute<float64> SSD_yy (..) := const(0.0, ..);
			}
		}
	}

}