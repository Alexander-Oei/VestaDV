//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template KostenBaten
{
	// begin case parameters
	container BebouwingsComponenten;
	container EnergiePrijzen;
	// end case parameters

	unit<uint32> PlanRegio := Invoer/SpecifiekeInstellingen/PlanRegio;

	container PlanRegioKaarten :=
		for_each_ne(
			 Classifications/BebouwingsComponent/name
			,'CalculationSchemes/NaarPlanRegio(BebouwingsComponenten/'+Classifications/BebouwingsComponent/name+')'
		);

	container WarmteVraag
	{
		attribute<Units/GJ_yr> deelnemers(PlanRegio) := ='add('+AsItemList('PlanRegioKaarten/'+Classifications/BebouwingsComponent/Name+'/Verbruik/deelnemers')+')';
	}

	container Opbrengsten
	{
		container EenmaligD := for_each_nedv(
			 Classifications/BebouwingsComponent/Name
			,replace('sum(BebouwingsComponenten/@BC@/Opbrengsten/AansluitBijdrageD * float64(Not(IsDefined(BebouwingsComponenten/@BC@/WarmteAllocatie))), BebouwingsComponenten/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/Name)
			,PlanRegio
			,Eur
			)
		{
			attribute<Eur> Oi_Totaal(PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container JaarlijksD
		{
			attribute<Eur_yr> WarmteVraag     (PlanRegio) := ='add('+AsItemList('PlanRegioKaarten/'+Classifications/BebouwingsComponent/Name+'/WarmteVraag/deelnemers')+')';

			attribute<Eur_yr> BestaandeWoning (PlanRegio) : Source = "F 6",  = sum(BebouwingsComponenten/BestaandeWoning/Opbrengsten/VastRechtBijdrageD * float64(Not(IsDefined(BebouwingsComponenten/BestaandeWoning/WarmteAllocatie))) , PlanRegioKaarten/BestaandeWoning/impl/PlanRegio_rel);
			attribute<Eur_yr> NieuwbouwWoning (PlanRegio) : Source = "F 6",  = sum(BebouwingsComponenten/NieuwbouwWoning/Opbrengsten/VastRechtBijdrageD * float64(Not(IsDefined(BebouwingsComponenten/NieuwbouwWoning/WarmteAllocatie))) , PlanRegioKaarten/NieuwbouwWoning/impl/PlanRegio_rel);
			attribute<Eur_yr> BestaandeUtil   (PlanRegio) : Source = "F 11", = sum(BebouwingsComponenten/BestaandeUtil/Opbrengsten/VastRechtBijdrageD   * float64(Not(IsDefined(BebouwingsComponenten/BestaandeUtil/WarmteAllocatie)))   , PlanRegioKaarten/BestaandeUtil/impl/PlanRegio_rel);
			attribute<Eur_yr> NieuwbouwUtil   (PlanRegio) : Source = "F 11", = sum(BebouwingsComponenten/NieuwbouwUtil/Opbrengsten/VastRechtBijdrageD   * float64(Not(IsDefined(BebouwingsComponenten/NieuwbouwUtil/WarmteAllocatie)))   , PlanRegioKaarten/NieuwbouwUtil/impl/PlanRegio_rel);
			attribute<Eur_yr> BestaandeGlTb   (PlanRegio) := const(0[Eur_yr], PlanRegio);
			attribute<Eur_yr> NieuwbouwGlTb   (PlanRegio) := const(0[Eur_yr], PlanRegio);

			attribute<Eur_yr> Oj_VastRecht    (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
			attribute<Eur_yr> Oj_Totaal       (PlanRegio) := WarmteVraag + Oj_VastRecht;
		}
	}

	container KostenFactorenD: Source = "F 3"
	{
		parameter<Ratio>  gr_warmte_geen_bijstook := 80[Percent] / 100[Percent], Source = "N1: FO v7a F 35", Descr = "Percentage grootschalige warmte dat niet wordt bijgestookt";
		parameter<Ratio>  warmteverlies_wd        := 0.2[ratio]                , Source = "N3: FO v7a F 35", Descr = "WarmteVerlies in de wijkdistributie";

		parameter<Eur_GJ> AardGasPrijs            := Prijzen/AardGas/Bijstook/KGJ_eindgebruik_excl, Source = "N2: FO v7a F 35";
		parameter<Eur_GJ> AardGasPrijs_m          := Prijzen/AardGas/Bijstook/KGJ_maatschappelijk;

		attribute<NrWoningen>    nr_won        (PlanRegio) := (PlanRegioKaarten/BestaandeWoning/nrAanslWarmteDeelnemers + PlanRegioKaarten/NieuwbouwWoning/nrAanslWarmteDeelnemers) * 1[NrWoningen / NrAansl], Source = "Lw1, FO v7a F 76", Descr = "Aantal woningen";
		attribute<Units/km2>     opp_land   (PlanRegio) := (PlanRegio/AreaInKm2 * (PlanRegio/Overigen/p_land_com / 100d)) , Source = "Lw2, FO v7a C1.3", Descr = "Landoppervlakte";
		attribute<Units/nrAansl> Lu            (PlanRegio) := PlanRegioKaarten/BestaandeUtil/nrAanslWarmteDeelnemers + PlanRegioKaarten/NieuwbouwUtil/nrAanslWarmteDeelnemers, Descr = "Omvang utiliteitsbouw"; // ?????
		//attribute<units/Eur_m2>  Ld          (PlanRegio) : Descr = "Distributieskosten per woning m2 utiliteitsbouw";
		attribute<units/m2>      opp_gltb      (PlanRegio) := PlanRegioKaarten/BestaandeGlTb/nrModelUnitsWarmteDeelnemers + PlanRegioKaarten/NieuwbouwGlTb/nrModelUnitsWarmteDeelnemers, Source = "Lt, FO v7a C1.3", Descr = "Omvang glastuinbouw";
		attribute<units/GJ_yr>   V_Warmte_w    (PlanRegio) := PlanRegioKaarten/BestaandeWoning/Verbruik/deelnemers + PlanRegioKaarten/NieuwbouwWoning/Verbruik/deelnemers              , Source = "Lq2, FO v7a C1.3", Descr = "Warmtevraag woningen";
		attribute<units/GJ_yr>   V_Warmte_u    (PlanRegio) := PlanRegioKaarten/BestaandeUtil/Verbruik/deelnemers + PlanRegioKaarten/NieuwbouwUtil/Verbruik/deelnemers                  , Source = "Lq4, FO v7a C1.3", Descr = "Warmtevraag utiliteitsbouw";
		attribute<units/GJ_yr>   V_Warmte_gltb (PlanRegio) := PlanRegioKaarten/BestaandeGlTb/Verbruik/deelnemers + PlanRegioKaarten/NieuwbouwGlTb/Verbruik/deelnemers                  , Source = "Lq6, FO v7a C1.3", Descr = "Warmtevraag glastuinbouw";
	}

	container KostenD: using = "KostenFactorenD"
	{
		parameter<nrWoningen> optimaal_aantal_woningen_os  := 150[nrWoningen] , Source = "aopt: FO v7a F 21";
		parameter<kW_Woning>  Vermogen_woning              := 11[kw_woning]   , Source = "ASWgem: FO v7a F 21";
		parameter<float64>    gelijktijdigheidsfactor_w    := 0.5             , Source = "y: FO v7a F 21";

		parameter<Eur_kW>     K_os_p_min                   :=  50[Eur_kW]     , Source = "Table 36";
		parameter<Eur_kW>     K_os_p_Max                   := 150[Eur_kW]     , Source = "Table 36";

		parameter<float64>    woning_os_factor             := (1.0 / 0.95 ) * gelijktijdigheidsfactor_w; // piekfactor en gelijktijdigheidsfactor (y: FO v7a F 21), aanname: meer dan 40 woningen
		parameter<kW>         Vermogen_OS                  := optimaal_aantal_woningen_os * Vermogen_woning * 0.5, Source = "FO v7a F 21";
		parameter<Eur_kW>     K_OS_p                       := (K_os_p_min * Schuiven/KostenMin + K_os_p_Max * Schuiven/KostenMax) * LeerCurves/Curve1, Source = "FO v7a F 22";
		parameter<Eur>        Kosten_OS                    := Vermogen_OS * K_OS_p, Source = "FO v7a F 22";

		parameter<Ratio>      afschrijving_resterend       := 1.0 / 3.0; // resterende afschijving.
		parameter<Eur>        KetelVergoeding              := 130[Eur_kW] * afschrijving_resterend * Vermogen_OS; // vergoeding bestaande blokverwarmingsketels obv nieuwwaarde

		parameter<Eur_Aansl>  Ki_HR_ketel_W                := 1900[Eur_Aansl], Source = "IKHR: FO F84";
		parameter<Eur_Aansl>  Ki_HR_ketel_U                :=  780[Eur_Aansl], Source = "Kengetallen Arcadis 2018";
		parameter<m_Aansl>    L_di_gem                     :=   15[m_Aansl]  , Source = "FO, nummer voetnoot 31 onder F80";

		container Wonen
		{
			parameter<Eur_Aansl> Kaansluiten_wd_gestappeld       :=  656[Eur_Aansl], Source = "FO Vesta 3.0 Tabel 6/7"; //correctie utigaande van €5000/pand met gemiddeld aantal aansluitingen per pand bij gestapelde bouw
			parameter<Eur_Aansl> Kaansluiten_wd_grondgebonden    := 5000[Eur_Aansl], Source = "FO Vesta 3.0 Tabel 8";
			parameter<Eur_Aansl> Ongeriefsvergoeding             :=  125[Eur_Aansl], Source = "FO Vesta 3.0 Tabel 7/8";
			parameter<Eur_Aansl> Projectmanagementvergoeding_min :=   50[Eur_Aansl], Source = "FO Vesta 3.0 Tabel 6";
			parameter<Eur_Aansl> Projectmanagementvergoeding_max :=  250[Eur_Aansl], Source = "FO Vesta 3.0 Tabel 7/8";

			container bw := CalculationSchemes/KostenWoningen(BebouwingsComponenten/BestaandeWoning, PlanRegio, false);
			container nw := CalculationSchemes/KostenWoningen(BebouwingsComponenten/NieuwbouwWoning, PlanRegio, true);

			attribute<Eur> Ki_wd              (PlanRegio) := bw/ki_wd + nw/Ki_wd;
			attribute<Eur> Ki_id              (PlanRegio) := bw/ki_id + nw/Ki_id;
			attribute<Eur> Ki_ge_ov           (PlanRegio) := bw/ki_ge_ov + nw/Ki_ge_ov;
			attribute<Eur> Ki_ge_pm           (PlanRegio) := bw/ki_ge_pm + nw/Ki_ge_pm;

			attribute<Eur_yr> Kj_wd_base      (PlanRegio) := bw/Kj_wd_base + nw/Kj_wd_base;
			attribute<Eur_yr> Kj_wd_adm       (PlanRegio) := Kj_wd_base * Kengetallen/Onderhoud/R_Admin;
			attribute<Eur_yr> Kj_wd_oh        (PlanRegio) := Kj_wd_base - Kj_wd_Adm;

			attribute<Eur_yr> Kj_id_Oh        (PlanRegio) := bw/Kj_id_base + nw/Kj_id_base;

			attribute<Eur_yr> Kj_ge_hv        (PlanRegio) := bw/Kj_hv;
		}
		container Utiliteit
		{
			parameter<kW> afkapgrens_klein := 100[kW];

			container NrAansluitingen
			{
				attribute<nrAansl> Klein (PlanRegio) := 
					sum(
					  BebouwingsComponenten/BestaandeUtil/WarmteVraag/deelnemers/nrAansluitingen 
						* float64(Not(IsDefined(BebouwingsComponenten/BestaandeUtil/WarmteAllocatie)))
						* float64(BebouwingsComponenten/BestaandeUtil/WarmteVraag/deelnemers/AansluitCapaciteit <= afkapgrens_klein) 
					, PlanRegioKaarten/BestaandeUtil/impl/PlanRegio_rel
					) + 
					sum(
					  BebouwingsComponenten/NieuwbouwUtil/WarmteVraag/deelnemers/nrAansluitingen 
						* float64(Not(IsDefined(BebouwingsComponenten/NieuwbouwUtil/WarmteAllocatie)))
						* float64(BebouwingsComponenten/NieuwbouwUtil/WarmteVraag/deelnemers/AansluitCapaciteit <= afkapgrens_klein) 
					, PlanRegioKaarten/NieuwbouwUtil/impl/PlanRegio_rel
					);
				attribute<nrAansl> Groot (PlanRegio) := 
					sum(
					  BebouwingsComponenten/BestaandeUtil/WarmteVraag/deelnemers/nrAansluitingen 
						* float64(Not(IsDefined(BebouwingsComponenten/BestaandeUtil/WarmteAllocatie)))
						* float64(BebouwingsComponenten/BestaandeUtil/WarmteVraag/deelnemers/AansluitCapaciteit > afkapgrens_klein) 
					, PlanRegioKaarten/BestaandeUtil/impl/PlanRegio_rel
					) + 
					sum(
					  BebouwingsComponenten/NieuwbouwUtil/WarmteVraag/deelnemers/nrAansluitingen 
						* float64(Not(IsDefined(BebouwingsComponenten/NieuwbouwUtil/WarmteAllocatie)))
						* float64(BebouwingsComponenten/NieuwbouwUtil/WarmteVraag/deelnemers/AansluitCapaciteit > afkapgrens_klein) 
						, PlanRegioKaarten/NieuwbouwUtil/impl/PlanRegio_rel
					);
				attribute<nrAansl> Totaal (PlanRegio) := Klein + Groot;
			}

			container CapaciteitsVraag
			{
				attribute<kW> Klein (PlanRegio) :=
					 0.5 * ( // gelijktijdigheidsfactor
						sum(BebouwingsComponenten/BestaandeUtil/WarmteVraag/deelnemers/AansluitCapaciteit 
							* float64(Not(IsDefined(BebouwingsComponenten/BestaandeUtil/WarmteAllocatie)))
							* float64(BebouwingsComponenten/BestaandeUtil/WarmteVraag/deelnemers/AansluitCapaciteit <= afkapgrens_klein) 
							, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel
						)+
						sum(BebouwingsComponenten/NieuwbouwUtil/WarmteVraag/deelnemers/AansluitCapaciteit 
							* float64(Not(IsDefined(BebouwingsComponenten/NieuwbouwUtil/WarmteAllocatie)))
							* float64(BebouwingsComponenten/NieuwbouwUtil/WarmteVraag/deelnemers/AansluitCapaciteit <= afkapgrens_klein) 
							, BebouwingsComponenten/NieuwbouwUtil/PlanRegio_rel
						)
					);
				attribute<kW> Groot (PlanRegio) :=
						// geen gelijktijdigheidsfactor voor grote utiliteit
						sum(BebouwingsComponenten/BestaandeUtil/WarmteVraag/deelnemers/AansluitCapaciteit 
							* float64(Not(IsDefined(BebouwingsComponenten/BestaandeUtil/WarmteAllocatie)))
							* float64(BebouwingsComponenten/BestaandeUtil/WarmteVraag/deelnemers/AansluitCapaciteit > afkapgrens_klein) 
							, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel
						)+
						sum(BebouwingsComponenten/NieuwbouwUtil/WarmteVraag/deelnemers/AansluitCapaciteit 
							* float64(Not(IsDefined(BebouwingsComponenten/NieuwbouwUtil/WarmteAllocatie)))
							* float64(BebouwingsComponenten/NieuwbouwUtil/WarmteVraag/deelnemers/AansluitCapaciteit > afkapgrens_klein) 
							, BebouwingsComponenten/NieuwbouwUtil/PlanRegio_rel
						);
				attribute<kW> Totaal(PlanRegio) := Klein + Groot;
			}

			attribute<Eur> Ki_WarmteMeter_min (PlanRegio) := 800[Eur / nrAansl] * NrAansluitingen/Totaal + 1.1[Eur_kW] * CapaciteitsVraag/Totaal, Descr = "Tabel 36";
			attribute<Eur> Ki_WarmteMeter_max (PlanRegio) := 825[Eur / nrAansl] * NrAansluitingen/Totaal + 1.3[Eur_kW] * CapaciteitsVraag/Totaal, Descr = "Tabel 36";

			attribute<Eur> Ki_WarmteMeter_sec (PlanRegio) := (Schuiven/KostenMin * Ki_WarmteMeter_min +Schuiven/KostenMax * Ki_WarmteMeter_max) * LeerCurves/Curve1;

			parameter<Eur_kw> Oi_vermeden_gasketel        := (Ki_HR_ketel_U *1 [nrAansl]) / 11[kw], Source = "FO F84 jo kentallenbestand woningen";
			attribute<Eur> Ki_WarmteMeter     (PlanRegio) := Ki_WarmteMeter_sec - Oi_vermeden_gasketel * CapaciteitsVraag/Totaal;

			attribute<Eur> Ki_Distributie_min (PlanRegio) := 100[Eur_kW] * CapaciteitsVraag/Klein,  Source = "FO v7a F 40, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36";
			attribute<Eur> Ki_Distributie_max (PlanRegio) := 150[Eur_kW] * CapaciteitsVraag/Klein,  Source = "FO v7a F 40, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36";
			attribute<Eur> Ki_Distributie     (PlanRegio) := (Schuiven/KostenMin * Ki_Distributie_min + Schuiven/KostenMax * Ki_Distributie_max) * LeerCurves/Curve1,  Source = "Tabel 36";

			attribute<float64> n_OS           (PlanRegio) := CapaciteitsVraag/Totaal / Vermogen_OS; // OnderStations voor utiliteit hebben dezelfde 'optimale' grootte als voor woningen

			attribute<Eur> Ki_OS_Klein        (PlanRegio) := CapaciteitsVraag/Klein * K_OS_p, Source = "mail Cor 16-12-2010; tabel 36"; // wegens gelijktijdigheid is dit 50 E / aansluitcap.

			attribute<Eur> Ki_OS_Groot_min    (PlanRegio) := CapaciteitsVraag/Groot *  15[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
			attribute<Eur> Ki_OS_Groot_max    (PlanRegio) := CapaciteitsVraag/Groot * 150[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
			attribute<Eur> Ki_OS_Groot        (PlanRegio) := (Schuiven/KostenMin * Ki_OS_Groot_min + Schuiven/KostenMax * Ki_OS_Groot_max) * LeerCurves/Curve1, Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
			attribute<Eur> Ki_OnderStation    (PlanRegio) := Ki_OS_Klein + Ki_OS_groot;

			attribute<Eur> Ki_Totaal          (PlanRegio) := Ki_WarmteMeter + Ki_Distributie + Ki_OnderStation;

			attribute<Eur_yr> Kj_sec          (PlanRegio) := Ki_WarmteMeter  * Kengetallen/Onderhoud/Rj_Installatie;
			attribute<Eur_yr> Kj_Base         (PlanRegio) := Ki_Distributie  * Kengetallen/Onderhoud/Rj_wd + Ki_OnderStation * Kengetallen/Onderhoud/Rj_Onderstation;
			attribute<Eur_yr> Kj_Admin        (PlanRegio) := Kj_Base * Kengetallen/Onderhoud/R_Admin;
			attribute<Eur_yr> Kj_Onderhoud    (PlanRegio) := Kj_sec + Kj_Base - Kj_Admin;
		}

		container GlasTuinbouw
		{
			parameter<m2> GemOppGroente          := 11000[m2], Source ="Gem_opp_groente, FO F47b";
			parameter<m2> GemOppbloemen_overig   :=  9000[m2], Source ="Gem_opp_bloemen/Gem_opp_overig, FO F47b";
			parameter<m>  GroenteKasLengteFactor := 2.0 * Sqrt(GemOppGroente), Descr = "noemer in F 50 en F 48";

			parameter<Eur_ha_yr> Ki_huur_CO2Installatie := 1600[Eur_ha_yr];
			parameter<ton_ha_yr> V_CO2                  :=  340[ton_ha_yr];
			parameter<Eur_ton>   P_CO2                  :=   80[Eur_ton];

			attribute<Eur_m2> K_dienstleiding_m2 (Classifications/GlTb) :=
				switch(
					 case(id(Classifications/GlTb) == Classifications/GLTB/V/Glastuinbouw_groente_verwarmd, 10000[eur] / GemOppGroente)
					,case(id(Classifications/GlTb) == Classifications/GLTB/V/Glastuinbouw_bloemen_verwarmd,  6000[eur] / GemOppbloemen_overig)
					,case(id(Classifications/GlTb) == Classifications/GLTB/V/Glastuinbouw_overig_verwarmd ,  6000[eur] / GemOppbloemen_overig)
					,case(id(Classifications/GlTb) == Classifications/GLTB/V/onbekend, 0[Eur_m2] / 0d)
					, 0[Eur_m2]
				)
			,	Source = "F 47b";

			container bestaand
			{
				attribute<m2> Areaal (PlanRegio) := sum(BebouwingsComponenten/BestaandeGlTb/WarmteVraag/deelnemers/NrModelUnits
						* float64(Not(IsDefined(BebouwingsComponenten/BestaandeGlTb/WarmteAllocatie)))
						, PlanRegioKaarten/BestaandeGlTb/impl/PlanRegio_rel);
				
				attribute<m> SqrtAreaal (PlanRegio) := sum(Sqrt(BebouwingsComponenten/BestaandeGlTb/WarmteVraag/deelnemers/NrModelUnits)
						* float64(Not(IsDefined(BebouwingsComponenten/BestaandeGlTb/WarmteAllocatie)))
						, PlanRegioKaarten/BestaandeGlTb/impl/PlanRegio_rel);

				attribute<nrAansl> NrAansluitingen (PlanRegio) :=
						sum(BebouwingsComponenten/BestaandeGlTb/WarmteVraag/deelnemers/nrAansluitingen
						* float64(Not(IsDefined(BebouwingsComponenten/BestaandeGlTb/WarmteAllocatie)))
						, PlanRegioKaarten/BestaandeGlTb/impl/PlanRegio_rel);

				attribute<kW> CapaciteitsVraag (PlanRegio) := 
						sum(  BebouwingsComponenten/BestaandeGlTb/WarmteVraag/deelnemers/AansluitCapaciteit
						* float64(Not(IsDefined(BebouwingsComponenten/BestaandeGlTb/WarmteAllocatie)))
						, BebouwingsComponenten/BestaandeGlTb/PlanRegio_rel);

				attribute<float64> n_OS          (PlanRegio) := CapaciteitsVraag / Vermogen_OS; // OnderStations voor glastuinbouw hebben dezelfde 'optimale' grootte als voor woningen

				attribute<Eur> Ki_OS_min         (PlanRegio) := CapaciteitsVraag *  15[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
				attribute<Eur> Ki_OS_max         (PlanRegio) := CapaciteitsVraag * 150[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
				attribute<Eur> Ki_OnderStation   (PlanRegio) := (Schuiven/KostenMin * Ki_OS_min + Schuiven/KostenMax * Ki_OS_max) * LeerCurves/Curve1, Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]

				attribute<Eur> K_dienstleidingen (PlanRegio) : Source = "F 47b" ,= sum(BebouwingsComponenten/BestaandeGlTb/WarmteVraag/deelnemers/NrModelUnits * K_dienstleiding_m2[BebouwingsComponenten/BestaandeGlTb/BebouwingsType], PlanRegioKaarten/BestaandeGlTb/impl/PlanRegio_rel);

				attribute<float64> n_Zijwegparen (PlanRegio) := Sqrt(2.0) * SqrtAreaal / GroenteKasLengteFactor, Descr = "F 48";
				attribute<float64> n_Zijleiding  (PlanRegio) := (n_Zijwegparen + 0.5) * 2.0, Descr = "F 48: estimate average increase of round-up in a 'best' continuous replacement";

				attribute<MW>      P_Zijleiding  (PlanRegio) : Descr = "F 49: 50% van het piekvermogen wordt door CV-ketels in de OS (dus per kas) geleverd" ,= CapaciteitsVraag / n_Zijleiding / value(1000, kW / MW);

				attribute<m>   lengte_Zijleiding (PlanRegio) := 1.7 * (Areaal / GroenteKasLengteFactor + Sqrt(2.0) * SqrtAreaal), Descr = "F 50";

				container ZijleidingKosten := BuisKosten(PlanRegio, P_Zijleiding);

				attribute<Eur>    K_Zijleiding  (PlanRegio) := lengte_Zijleiding * ZijleidingKosten/K_m;

				attribute<Eur   > Ki_Totaal     (PlanRegio) := K_dienstleidingen + K_Zijleiding + Ki_OnderStation;
				attribute<Eur_yr> Kj_Onderhoud  (PlanRegio) := 
					(K_dienstleidingen + K_Zijleiding) * Kengetallen/Onderhoud/Rj_SecundairNet + 
					Ki_OnderStation * Kengetallen/Onderhoud/Rj_OnderStation;
			}
			container nieuw
			{
				
				attribute<m2> Areaal     (PlanRegio) := sum(     BebouwingsComponenten/NieuwbouwGlTb/WarmteVraag/deelnemers/NrModelUnits , PlanRegioKaarten/NieuwbouwGlTb/impl/PlanRegio_rel);
				attribute<m>  SqrtAreaal (PlanRegio) := sum(Sqrt(BebouwingsComponenten/NieuwbouwGlTb/WarmteVraag/deelnemers/NrModelUnits), PlanRegioKaarten/NieuwbouwGlTb/impl/PlanRegio_rel);

				attribute<nrAansl> NrAansluitingen(PlanRegio) :=
						sum(  BebouwingsComponenten/NieuwbouwGlTb/WarmteVraag/deelnemers/nrAansluitingen * float64(Not(IsDefined(BebouwingsComponenten/NieuwbouwGlTb/WarmteAllocatie)))
						, PlanRegioKaarten/NieuwbouwGlTb/impl/PlanRegio_rel  );
				attribute<kW> CapaciteitsVraag(PlanRegio) :=
						sum(  BebouwingsComponenten/NieuwbouwGlTb/WarmteVraag/deelnemers/AansluitCapaciteit * float64(Not(IsDefined(BebouwingsComponenten/NieuwbouwGlTb/WarmteAllocatie)))
						, BebouwingsComponenten/NieuwbouwGlTb/PlanRegio_rel);

				attribute<float64>  n_OS         (PlanRegio) := CapaciteitsVraag / Vermogen_OS; // *** OnderStations voor glastuinbouw hebben dezelfde 'optimale' grootte als voor woningen

				attribute<Eur> Ki_OS_min         (PlanRegio) := CapaciteitsVraag *  15[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
				attribute<Eur> Ki_OS_max         (PlanRegio) := CapaciteitsVraag * 150[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
				attribute<Eur> Ki_OnderStation   (PlanRegio) := (Schuiven/KostenMin * Ki_OS_min + Schuiven/KostenMax * Ki_OS_max) * LeerCurves/Curve1, Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]

				attribute<Eur> K_dienstleidingen (PlanRegio): Source = "F 47b",
					= sum(BebouwingsComponenten/NieuwbouwGlTb/WarmteVraag/deelnemers/NrModelUnits * K_dienstleiding_m2[BebouwingsComponenten/NieuwbouwGlTb/BebouwingsType], PlanRegioKaarten/NieuwbouwGlTb/impl/PlanRegio_rel);

				attribute<float64> n_Zijwegparen (PlanRegio) := Sqrt(2.0) * SqrtAreaal / GroenteKasLengteFactor, Descr = "F 48";
				attribute<float64> n_Zijleiding  (PlanRegio) := (n_Zijwegparen + 0.5) * 2.0, Descr = "F 48"; // add expected increase of round-up as a 'best' continuous replacement of float64(RoundUp(n_Zijwegparen)) * float64(2)

				attribute<MW>      P_Zijleiding  (PlanRegio) := CapaciteitsVraag / n_Zijleiding / 1000[kW / MW], Descr = "F 49: 50% van het piekvermogen wordt door CV-ketels in de OS (dus per kas) geleverd";

				attribute<m>    lengte_Zijleiding(PlanRegio) := 1.3 * (Areaal / GroenteKasLengteFactor + Sqrt(2.0) * SqrtAreaal), Descr = "F 50";

				container ZijleidingKosten := BuisKosten(PlanRegio, P_Zijleiding);
				attribute<Eur>    K_Zijleiding  (PlanRegio) := lengte_Zijleiding * ZijleidingKosten/K_m;
				attribute<Eur>    Ki_Totaal     (PlanRegio) := K_dienstleidingen + K_Zijleiding + Ki_OnderStation;
				attribute<Eur_yr> Kj_Onderhoud  (PlanRegio) := 
					(K_dienstleidingen + K_Zijleiding) * Kengetallen/Onderhoud/Rj_SecundairNet
					 + Ki_OnderStation * Kengetallen/Onderhoud/Rj_OnderStation;
			}
			attribute<Eur>    Ki_CO2Installatie_min              (PlanRegio) : Source = "F 45, table 36", =  950[Eur_ha] * KostenFactorenD/opp_gltb / 10000[m2 / ha];
			attribute<Eur>    Ki_CO2Installatie_max              (PlanRegio) : Source = "F 45, table 36", = 1050[Eur_ha] * KostenFactorenD/opp_gltb / 10000[m2 / ha];
			attribute<Eur>    Ki_CO2Installatie                  (PlanRegio) := (Schuiven/KostenMin * Ki_CO2Installatie_min + Schuiven/KostenMax * Ki_CO2Installatie_max) * LeerCurves/Curve1;
			attribute<Eur_yr> Kj_CO2Installatie                  (PlanRegio) := (Ki_huur_CO2Installatie + V_CO2 * P_CO2) * KostenFactorenD/opp_gltb / 10000[m2 / ha], Source = "F 45";
			attribute<Eur_yr> Kj_CO2Installatie_FictiefOnderhoud (PlanRegio) := Ki_CO2Installatie  * Kengetallen/Onderhoud/Rj_Installatie;

			attribute<kW>      CapaciteitsVraag                  (PlanRegio) := Bestaand/CapaciteitsVraag + Nieuw/CapaciteitsVraag;
			attribute<nrAansl> NrAansluitingen                   (PlanRegio) := Bestaand/NrAansluitingen + Nieuw/NrAansluitingen;

			attribute<Eur>     Ki_WarmteMeter_min                (PlanRegio) := 800[ Eur / nrAansl ] * NrAansluitingen + 1.1[Eur_kW] * CapaciteitsVraag, Descr = "Tabel 36";
			attribute<Eur>     Ki_WarmteMeter_max                (PlanRegio) := 825[ Eur / nrAansl ] * NrAansluitingen + 1.3[Eur_kW] * CapaciteitsVraag, Descr = "Tabel 36";
			attribute<Eur>     Ki_WarmteMeter                    (PlanRegio) := (Schuiven/KostenMin * Ki_WarmteMeter_min +Schuiven/KostenMax * Ki_WarmteMeter_max) * LeerCurves/Curve1;

			attribute<Eur_yr>  Kj_WarmteMeter_Onderhoud          (PlanRegio) := Ki_WarmteMeter * Kengetallen/Onderhoud/Rj_Installatie;

			attribute<Eur>     Ki_Totaal                         (PlanRegio) := bestaand/Ki_Totaal + nieuw/Ki_Totaal + Ki_CO2Installatie + Ki_WarmteMeter;

			attribute<Eur_yr>  Kj_Onderhoud                      (PlanRegio) := bestaand/Kj_Onderhoud + nieuw/Kj_Onderhoud + Kj_WarmteMeter_Onderhoud;
			attribute<Eur_yr>  Kj_Admin                          (PlanRegio) := (Kj_Onderhoud + Kj_CO2Installatie_FictiefOnderhoud) * Kengetallen/Onderhoud/R_Admin;
			attribute<Eur_yr>  Kj_Verbruik                       (PlanRegio) := Kj_CO2Installatie;
		}

		container SecundairNet
		{
			attribute<km2>     opp_land       (PlanRegio) := KostenFactorenD/opp_land;
			attribute<float64> n                 (PlanRegio) := Wonen/bw/OnderStation/n0 + Wonen/nw/OnderStation/n0 + Utiliteit/n_OS; // Zonder glastuinbouw
			attribute<Ratio>   VerkortingsFactor (PlanRegio) := 48.0 / (Max_Elem(n, 8.0) + 40.0), Descr = "Fo v7a F 43";
			
			// Ik ben zo vrij geweest CapaciteitsVraag voor utiliteit (en glastuinbouw?) hier ook mee te nemen. 
			// Capaciteitsvraag vanuit woningen is nominaal per OnderStation; capaciteitsvraag vanuit Util + GlTb obv kengetallen
			parameter<float64> HulpketelVermogensaandeel     := SpecifiekeInstellingen/Bijstook/vermogensaandelen/Hulpketel;
			attribute<MW>      P                 (PlanRegio) := (n * Vermogen_OS + GlasTuinbouw/CapaciteitsVraag) * 0.001[ MW / kW]; //, IntegrityCheck = "P < value(115, MW)";

			container HoofdLeidingKosten := BuisKosten(PlanRegio, P);

			attribute<m>      L_hoofdleiding     (PlanRegio) := HoofdLeidingKosten/a * sqrt(2.0)* 1000[ m / km] * sqrt(opp_land);
			attribute<Eur>    K_hoofdleiding     (PlanRegio) := L_hoofdleiding * HoofdLeidingKosten/K_m, Source = "F 32";

			parameter<Eur_m>  K_zij_m                        := 586.3461241875[Eur / m] * LeerCurves/Curve2, Source = "F 31", Descr = "3309[Eur_m] - 0.1917[Eur_m / MW*MW]* Sqr(120.0[MW] - 0.825[MW]))";
			attribute<m>      L_zijleiding       (PlanRegio) := HoofdLeidingKosten/a * n * 0.25 * 0.5 *sqrt(2.0) * 1000[m / km]*sqrt(opp_land)* VerkortingsFactor, Descr = "F 33, K_buis with omwegfactor included";
			attribute<Eur>    K_zijleiding       (PlanRegio) := L_zijleiding * K_zij_m, Descr = "F 33";

			parameter<Eur_MW> K_WOS_p_min                    := 100000[Eur / MW], Descr = "Kosten Warmteoverdrachtstation, Tabel 36";
			parameter<Eur_MW> K_WOS_p_max                    := 150000[Eur / MW], Descr = "Kosten Warmteoverdrachtstation, Tabel 36";

			attribute<Eur>    K_WOS              (PlanRegio) := HulpketelVermogensaandeel* P * (K_WOS_p_min * Schuiven/KostenMin + K_WOS_p_max * Schuiven/KostenMax) * LeerCurves/Curve2, Descr = "Kosten Warmteoverdrachtstation, zie: F 34,email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM";
			attribute<Eur>    Ki_Totaal          (PlanRegio) := K_hoofdleiding + K_zijleiding + K_WOS;

			attribute<m>      L_transport        (Planregio) := L_hoofdleiding + L_zijleiding;
			attribute<Eur_yr> Kj_Onderhoud       (PlanRegio) := (K_hoofdleiding + K_zijleiding) * Kengetallen/Onderhoud/Rj_SecundairNet + K_WOS * Kengetallen/Onderhoud/Rj_WOS;
			attribute<Eur_yr> Kj_Admin           (PlanRegio) := Kj_Onderhoud * Kengetallen/Onderhoud/R_Admin;
		}

		container PrimairNet
		{
			parameter<float64> HoofdbronVermogensaandeel := SpecifiekeInstellingen/Bijstook/vermogensaandelen/Hoofdbron;
			attribute<MW>      P             (PlanRegio) := HoofdbronVermogensaandeel * SecundairNet/P; // aandeel hoofdwaarmtebron (dus de niet-bijstook); n.b. aandelen sommeren tot meer dan 100% ivm reservecapaciteit.

			container LeidingKosten := BuisKosten(PlanRegio, P);
		}

		attribute<GJ_yr>  Vj_WarmteVraag    (PlanRegio) := (V_Warmte_w + V_Warmte_u + V_Warmte_gltb);
		attribute<GJ_yr>  Vj_Warmte         (PlanRegio) := Vj_WarmteVraag * (1.0 / (1.0 - warmteverlies_wd)), Source = "FO v7a F 36"; // vraag * factor ter compensatie van leidingverliezen in de wijk
		attribute<GJ_yr>  Vj_LeidingVerlies (PlanRegio) := Vj_Warmte - Vj_WarmteVraag; // leidingverlies in het wijk-distributienet.
		attribute<GJ_yr>  Vj_WarmtePrimair  (PlanRegio) := gr_warmte_geen_bijstook * Vj_Warmte, Source = "FO v7a F 36"; // deel dat niet door bijstook wordt geleverd.

		container Bijstook
		{
			parameter<ratio>	eff_piekketel					:= 0.925[ratio],												Descr = "kengetal voor de efficientie van energieomzetting in aardgasgestookte hulpketels", Source = "nketel: FO, Tabel bij F 35";
			
			attribute<GJ_yr>	Vj_Vraag		(PlanRegio)		:= Vj_Warmte - Vj_WarmtePrimair,								Descr = "volumevraag naar warmte die jaarlijks wordt geleverd uit de hulpketel";
			attribute<GJ_yr>	Vj_Bijstook		(PlanRegio)		:= Vj_Vraag / eff_piekketel,									Descr = "volumevraag naar warmte uit hulpketel na correctie voor efficientiefactor", Source = "FO v7a F 35";
			attribute<GJ_yr>	Vj_Verlies		(PlanRegio)		:= Vj_Bijstook - Vj_Vraag,										Descr = "gedeelte van de benodigde energie in de hulpketel dat verloren gaat in de omzetting naar warmte";
			attribute<Eur_yr>	Kj_Verbruik		(PlanRegio)		:= AardGasPrijs * Vj_Bijstook,									Descr = "eindgebruikerskosten voor inkoop aardgas voor bijstook ik hulpketels";
			attribute<Eur_yr>	Km_Verbruik		(PlanRegio)		:= AardGasPrijs_m * Vj_Bijstook,								Descr = "maatschappelijke kosten voor inkoop aardgas voor bijstook in hulpketels";
			attribute<Eur_yr>	Kj_EH_verbruik	(PlanRegio)		:= prijzen/Aardgas/Bijstook/KGJ_EnergieHeffing * Vj_Bijstook,	Descr = "energiebelasting betaald over inkoop aardgas voor bijstook in hulpketels door eindgebruikers, als onderdeel van Kj_verbruik";
		}

		attribute<Eur>    Ki_ge_ov        (PlanRegio) := Wonen/Ki_ge_ov;
		attribute<Eur>    Ki_ge_pm        (PlanRegio) := Wonen/Ki_ge_pm;
		attribute<Eur>    Ki_id           (PlanRegio) := Wonen/Ki_id + Utiliteit/Ki_Totaal + Glastuinbouw/Ki_Totaal, Source = "FO v7a F 2";
		attribute<Eur>    Ki_wd           (PlanRegio) := SecundairNet/Ki_Totaal + Wonen/Ki_wd, Source = "FO v7a F 2";

		attribute<Eur_yr> Kj_ge_hv        (PlanRegio) := Wonen/Kj_ge_hv;
		attribute<Eur_yr> Kj_id_oh        (PlanRegio) := Wonen/Kj_id_oh;
		attribute<Eur_yr> Kj_wd_oh        (PlanRegio) := Wonen/Kj_wd_oh + Utiliteit/Kj_Onderhoud + Glastuinbouw/Kj_Onderhoud + SecundairNet/Kj_Onderhoud;
		attribute<Eur_yr> Kj_Onderhoud    (PlanRegio) := Kj_wd_oh + Kj_id_oh;
		
		attribute<Eur_yr> Kj_Verbruik     (PlanRegio) := Bijstook/Kj_Verbruik;
		attribute<Eur_yr> Km_Verbruik     (PlanRegio) := Bijstook/Km_Verbruik;
		attribute<Eur_yr> Kj_lv_adm       (PlanRegio) := opbrengsten/JaarlijksD/Oj_VastRecht * Kengetallen/Onderhoud/R_lv_Admin;
		attribute<Eur_yr> Kj_wd_adm       (PlanRegio) := Wonen/Kj_wd_adm + Utiliteit/Kj_Admin + Glastuinbouw/Kj_Admin + SecundairNet/Kj_Admin;

		attribute<nrAansl>nrAansl_d       (PlanRegio) := ='add('+AsItemList(replace('sum(BebouwingsComponenten/@BC@/WarmteVraag/deelnemers/nrAansluitingen, BebouwingsComponenten/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/name))+')';
		attribute<nrAansl>nrAansl_g       (PlanRegio) := ='add('+AsItemList(replace('sum(BebouwingsComponenten/@BC@/WarmteVraag/alle/nrAansluitingen, BebouwingsComponenten/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/name))+')';
		attribute<nrAansl>nrAansl_e       (PlanRegio) := ='add('+AsItemList(replace('sum(BebouwingsComponenten/@BC@/RuimtelijkeVraagComponent/nrAansluitingen, BebouwingsComponenten/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/name))+')';
		attribute<m>      L_distr_d       (PlanRegio) := nrAansl_d * L_di_gem;
		attribute<m>      L_distr_g       (PlanRegio) := nrAansl_g * L_di_gem;
		attribute<m>      L_distr_e       (PlanRegio) := nrAansl_e * L_di_gem;
		attribute<m>      L_infra_d       (PlanRegio) := L_distr_d + SecundairNet/L_transport;
		attribute<m>      L_infra_g       (PlanRegio) := (L_distr_g + SecundairNet/L_transport)*float64(Allocatie/heeft_gas);
		attribute<m>      L_infra_e       (PlanRegio) := L_distr_e + SecundairNet/L_transport;

		attribute<Eur_yr> Kj_Precario     (PlanRegio) := L_infra_d * Kengetallen/Onderhoud/Rj_Precario_pm;
		attribute<Eur_yr> Kj_Totaal       (PlanRegio) := Kj_Onderhoud + Kj_Verbruik + Kj_wd_adm + Kj_lv_adm + Kj_Precario + Kj_ge_hv, Source = "FO v7a F 2";
		attribute<Eur_yr> Km_Totaal       (PlanRegio) := Kj_Onderhoud + Km_Verbruik + Kj_wd_adm + Kj_lv_adm ;
	}

	attribute<Eur   > Oi_Aansluitbijdrage (PlanRegio) := Opbrengsten/EenmaligD/Oi_Totaal;
	attribute<Eur_yr> Oji_wd_KL           (PlanRegio) := Oi_Aansluitbijdrage * NCW/wd28/StartDiscountFactor * NCW/wd28/AnnualisationFactor;
	attribute<Eur_yr> Kji_ge_KL           (PlanRegio) := Ki_ge_Bruto * NCW/bw28/AnnualisationFactor;
	attribute<Eur_yr> Kji_id_KL           (PlanRegio) := Ki_id_Bruto * NCW/id28/AnnualisationFactor;

	attribute<Eur>    Ki_ge_ov            (PlanRegio) := KostenD/Ki_ge_ov;
	attribute<Eur>    Ki_ge_pm            (PlanRegio) := KostenD/Ki_ge_pm;
	attribute<Eur_yr> Kj_ge_hv            (PlanRegio) := KostenD/Kj_ge_hv;
	attribute<Eur>    Ki_ge_Bruto         (PlanRegio) := Ki_ge_ov + Ki_ge_pm;
	attribute<Eur   > Ki_id_Bruto         (PlanRegio) := KostenD/Ki_id;
	attribute<Eur   > Ki_wd_Bruto         (PlanRegio) := KostenD/Ki_wd;
	attribute<Eur>    Oi_ge_subsidie      (PlanRegio) := Ki_ge_ov * SpecifiekeInstellingen/Beleid/EIA/E_bw/Rs_OngeriefsVergoeding + Ki_ge_pm * SpecifiekeInstellingen/Beleid/EIA/E_bw/Rs_ProjectManagement;
	attribute<Eur>    Oi_id_subsidie      (PlanRegio) := Ki_id_Bruto * SpecifiekeInstellingen/Beleid/EIA/id;
	attribute<Eur>    Oi_wd_subsidie      (PlanRegio) := Ki_wd_Bruto * SpecifiekeInstellingen/Beleid/EIA/wd;
	attribute<Eur_yr> Kji_ge_base         (PlanRegio) := (Ki_ge_Bruto - Oi_ge_subsidie) * NCW/bw28/AnnualisationFactor + Kj_ge_hv;
	attribute<Eur_yr> Kji_id_base         (PlanRegio) := (Ki_id_Bruto - Oi_id_subsidie) * NCW/id28/AnnualisationFactor + KostenD/Kj_id_oh;
	attribute<Eur_yr> Kji_wd_base         (PlanRegio) := (Ki_wd_Bruto - Oi_wd_subsidie) * NCW/wd28/AnnualisationFactor + KostenD/Kj_wd_oh+ KostenD/Kj_wd_adm;
	attribute<Eur_yr> Oe_ge_subsidie      (PlanRegio) := Kji_ge_base * SpecifiekeInstellingen/Beleid/EEA/ge;
	attribute<Eur_yr> Oe_id_subsidie      (PlanRegio) := Kji_wd_base * SpecifiekeInstellingen/Beleid/EEA/id;
	attribute<Eur_yr> Oe_wd_subsidie      (PlanRegio) := Kji_wd_base * SpecifiekeInstellingen/Beleid/EEA/wd;
	attribute<Eur_yr> Kji_ge_Netto        (PlanRegio) := Kji_ge_base - Oe_ge_subsidie;
	attribute<Eur_yr> Kji_id_Netto        (PlanRegio) := Kji_id_base - Oe_id_subsidie;
	attribute<Eur_yr> Kji_wd_Netto        (PlanRegio) := Kji_wd_base  + KostenD/Kj_Verbruik + KostenD/Kj_Precario - Oe_wd_subsidie - Oji_wd_KL;
	attribute<Eur_yr> Kji_Netto           (PlanRegio) := Kji_ge_Netto + Kji_id_Netto + Kji_wd_Netto + KostenD/Kj_lv_adm;

	attribute<Eur_yr> Oji_wd              (PlanRegio) := Oji_wd_KL + Opbrengsten/JaarlijksD/Oj_Totaal;
	attribute<Eur_yr> Oji_NettoD          (PlanRegio) := Opbrengsten/JaarlijksD/Oj_Totaal - Kji_Netto;
	attribute<Eur_yr> Km_totaalD          (PlanRegio) := KostenD/Km_Totaal;
	attribute<MW>     CapaciteitsVraagD   (PlanRegio) := KostenD/PrimairNet/P;
	attribute<GJ_yr>  Vj_WarmtePrimairD   (PlanRegio) := KostenD/Vj_WarmtePrimair;
	attribute<KG_yr>  CO2_BijstookD       (PlanRegio) := Prijzen/AardGas/CO2_GJ * KostenD/Bijstook/Vj_Bijstook;
}
