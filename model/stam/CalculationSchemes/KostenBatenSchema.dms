//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2018                                      //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                                    JUNI 2018                                         //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template KostenBatenSchema
{
	container VestaRunData;
	
	container EnergiePrijzen;
	parameter<units/yr_uint16> Jaar;

	unit<uint32> PlanRegio := Invoer/SpecifiekeInstellingen/PlanRegio;

	container PlanRegioKaarten :=
		for_each_ne(
			Classifications/BebouwingsComponent/name
		,	'CalculationSchemes/AggrComponent(VestaRunData/'+Classifications/BebouwingsComponent/name+')'
		);
		
	attribute<Units/GJ_yr> WarmteVraagD(PlanRegio) := ='add('+AsItemList('PlanRegioKaarten/'+Classifications/BebouwingsComponent/Name+'/VerbruikD')+')';
	
	container Opbrengsten
	{
		container EenmaligD := for_each_nedv(Classifications/BebouwingsComponent/Name, 
			replace('sum(VestaRunData/@BC@/Opbrengsten/AansluitBijdrageD * float64(Not(IsDefined(VestaRunData/@BC@/WarmteAllocatie      ))), VestaRunData/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/Name)
		,	PlanRegio, Eur)
		{
			attribute<Eur> Oi_Totaal(PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
		}
		container JaarlijksD
		{
			attribute<Eur_yr> WarmteVraag     (PlanRegio) := ='add('+AsItemList('PlanRegioKaarten/'+Classifications/BebouwingsComponent/Name+'/WarmteVraagD')+')';

			attribute<Eur_yr> BestaandeWoning (PlanRegio) : Source = "F 6",  = sum(VestaRunData/BestaandeWoning/Opbrengsten/VastRechtBijdrageD          * float64(Not(IsDefined(VestaRunData/BestaandeWoning/WarmteAllocatie)))          , PlanRegioKaarten/BestaandeWoning/impl/PlanRegio_rel);
			attribute<Eur_yr> NieuwbouwWoning (PlanRegio) : Source = "F 6",  = sum(VestaRunData/NieuwbouwWoning/Opbrengsten/VastRechtBijdrageD * float64(Not(IsDefined(VestaRunData/NieuwbouwWoning/WarmteAllocatie))) , PlanRegioKaarten/NieuwbouwWoning/impl/PlanRegio_rel);
			attribute<Eur_yr> BestaandeUtil   (PlanRegio) : Source = "F 11", = sum(VestaRunData/BestaandeUtil/Opbrengsten/VastRechtBijdrageD       * float64(Not(IsDefined(VestaRunData/BestaandeUtil/WarmteAllocatie)))       , PlanRegioKaarten/BestaandeUtil/impl/PlanRegio_rel);
			attribute<Eur_yr> NieuwbouwUtil   (PlanRegio) : Source = "F 11", = sum(VestaRunData/NieuwbouwUtil/Opbrengsten/VastRechtBijdrageD   * float64(Not(IsDefined(VestaRunData/NieuwbouwUtil/WarmteAllocatie)))   , PlanRegioKaarten/NieuwbouwUtil/impl/PlanRegio_rel);
			attribute<Eur_yr> BestaandeGlTb   (PlanRegio) := const(0[Eur_yr], PlanRegio);
			attribute<Eur_yr> NieuwbouwGlTb   (PlanRegio) := const(0[Eur_yr], PlanRegio);

			attribute<Eur_yr> Oj_VastRecht    (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
			attribute<Eur_yr> Oj_Totaal       (PlanRegio) := WarmteVraag      + Oj_VastRecht;
		}
	}
	container KostenFactorenD: Source = "F 3"
	{
		attribute<float64>       Lw1 (PlanRegio) : Descr = "Aantal woningen",            = (PlanRegioKaarten/BestaandeWoning/NrAanslWarmteD + PlanRegioKaarten/NieuwbouwWoning/NrAanslWarmteD) * 1[NrWoningen / NrAansl];
		attribute<Units/km2>     Lw2 (PlanRegio) : Descr = "Oppervlakte",                = PlanRegio/AreaInKm2;
		attribute<Units/nrAansl> Lu  (PlanRegio) : Descr = "Omvang utiliteitsbouw",      = PlanRegioKaarten/BestaandeUtil/NrAanslWarmteD + PlanRegioKaarten/NieuwbouwUtil/NrAanslWarmteD;
		attribute<units/Eur_m2>  Ld  (PlanRegio) : Descr = "Distributieskosten per woning m2 utiliteitsbouw";
		attribute<units/m2>      Lt  (PlanRegio) : Descr = "Omvang glastuinbouw",        = PlanRegioKaarten/BestaandeGlTb/NrModelUnitsWarmteD + PlanRegioKaarten/NieuwbouwGlTb/NrModelUnitsWarmteD;
		attribute<units/GJ_yr>   Lq2 (PlanRegio) : Descr = "Warmtevraag woningen",       = PlanRegioKaarten/BestaandeWoning/VerbruikD + PlanRegioKaarten/NieuwbouwWoning/VerbruikD;
		attribute<units/GJ_yr>   Lq4 (PlanRegio) : Descr = "Warmtevraag utiliteitsbouw", = PlanRegioKaarten/BestaandeUtil/VerbruikD + PlanRegioKaarten/NieuwbouwUtil/VerbruikD;
		attribute<units/GJ_yr>   Lq6 (PlanRegio) : Descr = "Warmtevraag glastuinbouw",   = PlanRegioKaarten/BestaandeGlTb/VerbruikD + PlanRegioKaarten/NieuwbouwGlTb/VerbruikD;

		parameter<Ratio>  N1   := 80[Percent] / 100[Percent], Source = "FO v7a F 35", Descr = "Percentage grootschalige warmte dat niet wordt bijgestookt";
		parameter<Eur_GJ> N2   := Prijzen/AardGas/Bijstook/KGJ_eindgebruik_excl;
		parameter<Eur_GJ> N2_m := Prijzen/AardGas/Bijstook/KGJ_maatschappelijk;
		parameter<Ratio>  N3   := 0.20, Descr = "WarmteVerlies in de wijkdistributie", Source ="FO v7a F 35";
	}
	container KostenD: using = "KostenFactorenD"
	{
		parameter<kW_Woning> Vermogen_woning  := 11[kw_woning], Source = "FO v7a F 21";
		parameter<float64>   woning_os_factor := (1.0 / 0.95 ) * 0.5; // piekfactor en gelijktijdigheidsfactor (aanname: meer dan 40 woningen)
		parameter<kW>        Vermogen_OS      := 150[nrWoningen] * Vermogen_woning * 0.5, Source = "FO v7a F 21";
		parameter<Eur_kW>    K_OS_p_Min       := 050[Eur_kW], Source = "Table 36";
		parameter<Eur_kW>    K_OS_p_Max       := 150[Eur_kW], Source = "Table 36";
		parameter<Eur_kW>    K_OS_p           := (K_OS_p_Min * Schuiven/KostenMin + K_OS_p_Max * Schuiven/KostenMax) * LeerCurves/Curve1, Source = "FO v7a F 22";
		parameter<Eur>       Kosten_OS        := Vermogen_OS * K_OS_p, Source = "FO v7a F 22";

		parameter<Eur>       KetelVergoeding  := 130[Eur_kW] * s * Vermogen_OS; // vergoeding bestaande blokverwarmingsketels obv nieuwwaarde
		parameter<Ratio>     s                := 1.0 / 3.0; // resterende afschijving.

		container Wonen
		{
			template ComponentTempl {
				container       VestaRunDataComponent;
				unit<uint8>     Type;
				parameter<bool> IsNieuwbouw;
				unit<uint32>    WoonObject := VestaRunDataComponent/BebouwingsObject;
				// en dof case parameters

				attribute<bool>      IsMeergezins  (WoonObject) := Type/IsMeergezins[VestaRunDataComponent/BebouwingsType];
				attribute<Eur_Aansl> Ki_wd_w       (WoonObject) := IsMeergezins ? 2700[Eur_Aansl] : 5000[Eur_Aansl]; // zie FO Vesta 3.0, Tabel 6/7/8

				parameter<Eur_Aansl> Oi_vermeden_gasketel := 1900[Eur_Aansl] * NCW/bw15/AnnualisationFactor * NCW/bw30/DurationFactor, Source = "FO F84";

				// eenmalige kosten, zie FO tabellen 5..7
				attribute<Eur_Aansl> Ki_id_fa (WoonObject) := IsMeergezins ? Schuiven/VerketelingMin * 1800[Eur_Aansl] + Schuiven/VerketelingMax * 5300[Eur_Aansl] :  0[Eur_Aansl]; // fysieke aansluitmaatregelen
				parameter<Eur_Aansl> Ki_id_va              := 0[Eur_Aansl] * float64(!IsNieuwbouw);
				
				// kosten voor projectmanagement en door huurder ervaren en door eigenaar vergoedde ongerief
				attribute<Eur_Aansl> Ki_ge_ov_w  (WoonObject) := =IsNieuwbouw?'const(0[Eur_Aansl], WoonObject)':'IsMeergezins ? Schuiven/VerketelingMin *    0[Eur_Aansl] + Schuiven/VerketelingMax * 125[Eur_Aansl] : 125[Eur_Aansl]'; // woon-ongerief
				attribute<Eur_Aansl> Ki_ge_pm_w  (WoonObject) := =IsNieuwbouw?'const(0[Eur_Aansl], WoonObject)':'IsMeergezins ? Schuiven/VerketelingMin *   50[Eur_Aansl] + Schuiven/VerketelingMax * 250[Eur_Aansl] : 250[Eur_Aansl]'; // project management
				attribute<Eur>       Ki_ge_ov_o  (WoonObject) := =IsNieuwbouw?'const(0[Eur], WoonObject)':'NrDeelnemers * Ki_ge_ov_w';
				attribute<Eur>       Ki_ge_pm_o  (WoonObject) := =IsNieuwbouw?'const(0[Eur], WoonObject)':'NrDeelnemers * Ki_ge_pm_w';

				// huurverlaging, alleen gebruikt in Payments en als kostenfactor
				attribute<Eur_yr_Aansl> Kj_hv_w  (WoonObject) := =IsNieuwbouw?'const(0[Eur_yr_Aansl], WoonObject)':'(IsMeergezins ? Schuiven/VerketelingMax : 1.0) * 160[Eur_yr_Aansl] * Schuiven/HuurVerlagingBijGebiedsOptie';
				attribute<Eur_yr>       Kj_hv_o  (WoonObject) := =IsNieuwbouw?'const(0[Eur_yr      ], WoonObject)':'Kj_hv_w* NrDeelnemers';

				attribute<nrAansl> NrDeelnemers  (WoonObject) := VestaRunDataComponent/WarmteVraagD/nrAansluitingen    * float64(!IsDefined(VestaRunDataComponent/WarmteAllocatie));
				attribute<kW>      Capaciteit    (WoonObject) := VestaRunDataComponent/WarmteVraagD/AansluitCapaciteit * float64(!IsDefined(VestaRunDataComponent/WarmteAllocatie));

				attribute<Eur>     Ki_ge_bruto   (WoonObject) := Ki_ge_ov_o + Ki_ge_pm_o - Oi_vermeden_gasketel * NrDeelnemers;
				attribute<Eur>     Oi_ge_subsidie(WoonObject) := Ki_ge_ov_o * SpecifiekeInstellingen/BeleidsOpties/EIA/bwe/S_OngeriefsVergoeding + Ki_ge_pm_o * SpecifiekeInstellingen/BeleidsOpties/EIA/bwe/S_ProjectManagement;
				attribute<Eur>     Ki_ge_netto   (WoonObject) := Ki_ge_bruto - Oi_ge_subsidie;
				attribute<Eur_yr>  Kj_ge_base    (WoonObject) := Ki_ge_netto * NCW/bw28/AnnualisationFactor + Kj_hv_o;
				attribute<Eur_yr>  Oe_ge_subsidie(WoonObject) := Kj_ge_base * SpecifiekeInstellingen/BeleidsOpties/EEA/ge;
				attribute<Eur_yr>  Oj_ge_subsidie(WoonObject) := Oi_ge_subsidie *NCW/bw28/AnnualisationFactor + Oe_ge_subsidie;
				attribute<Eur_yr>  Kj_ge_netto   (WoonObject) := Kj_ge_base - Oe_ge_subsidie;

				container Onderstation {
					attribute<kW> GevraagdeCapaciteit                (PlanRegio) := woning_os_factor * sum(Capaciteit, VestaRunDataComponent/PlanRegio_rel);
					attribute<kW> GevraagdeCapaciteit_blokverwarming (PlanRegio) := float64(!IsNieuwbouw) * 
						woning_os_factor * sum(Capaciteit * (IsMeergezins ? Schuiven/VerketelingMin : 0.0), VestaRunDataComponent/PlanRegio_rel);

					attribute<float64>  n0    (PlanRegio) := GevraagdeCapaciteit / Vermogen_OS, Source = "FO v7a F 23";
					attribute<float64>  n2    (PlanRegio) := GevraagdeCapaciteit_blokverwarming / Vermogen_OS, Descr = "F 28";
					attribute<float64>  n1    (PlanRegio) := n0 - n2;
					attribute<Eur>      Ki_wd (PlanRegio) := n0 * Kosten_OS + n2 *KetelVergoeding, Descr = "F 27";
				}

				attribute<Eur> Ki_wd_sec     (PlanRegio) := sum(Ki_wd_w*NrDeelnemers, VestaRunDataComponent/PlanRegio_rel);
				attribute<Eur> Ki_wd         (PlanRegio) := Ki_wd_sec + Onderstation/Ki_wd;
				attribute<Eur> Ki_id         (PlanRegio) := sum((Ki_id_fa + Ki_id_va) * NrDeelnemers, VestaRunDataComponent/PlanRegio_rel);
				attribute<Eur> Ki_ge_ov      (PlanRegio) := sum(Ki_ge_ov_w * NrDeelnemers, VestaRunDataComponent/PlanRegio_rel) * float64(!IsNieuwbouw);
				attribute<Eur> Ki_ge_pm      (PlanRegio) := sum(Ki_ge_pm_w * NrDeelnemers, VestaRunDataComponent/PlanRegio_rel) * float64(!IsNieuwbouw);

				attribute<Eur_yr> Kj_hv      (PlanRegio) :=  =IsNieuwbouw?'const(0[Eur_yr      ], PlanRegio)':'sum(Kj_hv_o, VestaRunDataComponent/PlanRegio_rel)'; // huurverlaging, alleen gebruikt in flow en als kostenfactor

				attribute<Eur_yr> Kj_wd_base (PlanRegio) := Ki_wd_sec * Kengetallen/Onderhoud/Rj_wd + Onderstation/Ki_wd * Kengetallen/Onderhoud/Rj_Onderstation;
				attribute<Eur_yr> Kj_id_base (PlanRegio) := Ki_id * Kengetallen/Onderhoud/Rj_id;
			}
			container bbw := ComponentTempl(VestaRunData/BestaandeWoning, VestaRunData/BestaandeWoning/BebouwingsTypeDomein, false);
			container nbw := ComponentTempl(VestaRunData/NieuwbouwWoning, VestaRunData/NieuwbouwWoning/BebouwingsTypeDomein, true);

			attribute<Eur> Ki_wd(PlanRegio) := bbw/ki_wd + nbw/Ki_wd;
			attribute<Eur> Ki_id(PlanRegio) := bbw/ki_id + nbw/Ki_id;
			attribute<Eur> Ki_ge_ov(PlanRegio) := bbw/ki_ge_ov + nbw/Ki_ge_ov;
			attribute<Eur> Ki_ge_pm(PlanRegio) := bbw/ki_ge_pm + nbw/Ki_ge_pm;

			attribute<Eur_yr> Kj_wd_base      (PlanRegio) := bbw/Kj_wd_base + nbw/Kj_wd_base;
			attribute<Eur_yr> Kj_wd_Admin     (PlanRegio) := Kj_wd_base * Kengetallen/Onderhoud/R_Admin;
			attribute<Eur_yr> Kj_wd_Onderhoud (PlanRegio) := Kj_wd_base - Kj_wd_Admin;

			attribute<Eur_yr> Kj_id_Onderhoud (PlanRegio) := bbw/Kj_id_base + nbw/Kj_id_base;

			attribute<Eur_yr> Kj_ge_hv        (PlanRegio) := bbw/Kj_hv;
		}
		container Utiliteit
		{
			container NrAansluitingen
			{
				attribute<nrAansl> Klein (PlanRegio) := 
					sum(
					  VestaRunData/BestaandeUtil/WarmteVraagD/nrAansluitingen 
						* float64(Not(IsDefined(VestaRunData/BestaandeUtil/WarmteAllocatie)))
						* float64(VestaRunData/BestaandeUtil/WarmteVraagD/AansluitCapaciteit <= value(100, kW)) 
					, PlanRegioKaarten/BestaandeUtil/impl/PlanRegio_rel
					) + 
					sum(
					  VestaRunData/NieuwbouwUtil/WarmteVraagD/nrAansluitingen 
						* float64(Not(IsDefined(VestaRunData/NieuwbouwUtil/WarmteAllocatie)))
						* float64(VestaRunData/NieuwbouwUtil/WarmteVraagD/AansluitCapaciteit <= value(100, kW)) 
					, PlanRegioKaarten/NieuwbouwUtil/impl/PlanRegio_rel
					);
				attribute<nrAansl> Groot (PlanRegio) := 
					sum(
					  VestaRunData/BestaandeUtil/WarmteVraagD/nrAansluitingen 
						* float64(Not(IsDefined(VestaRunData/BestaandeUtil/WarmteAllocatie)))
						* float64(VestaRunData/BestaandeUtil/WarmteVraagD/AansluitCapaciteit > value(100, kW)) 
					, PlanRegioKaarten/BestaandeUtil/impl/PlanRegio_rel
					) + 
					sum(
					  VestaRunData/NieuwbouwUtil/WarmteVraagD/nrAansluitingen 
						* float64(Not(IsDefined(VestaRunData/NieuwbouwUtil/WarmteAllocatie)))
						* float64(VestaRunData/NieuwbouwUtil/WarmteVraagD/AansluitCapaciteit > value(100, kW)) 
						, PlanRegioKaarten/NieuwbouwUtil/impl/PlanRegio_rel
					);
				attribute<nrAansl> Totaal (PlanRegio) := Klein + Groot;
			}

			container CapaciteitsVraag
			{
				attribute<kW> Klein (PlanRegio) :=
					 0.5 * ( // gelijktijdigheidsfactor
						sum(VestaRunData/BestaandeUtil/WarmteVraagD/AansluitCapaciteit 
							* float64(Not(IsDefined(VestaRunData/BestaandeUtil/WarmteAllocatie)))
							* float64(VestaRunData/BestaandeUtil/WarmteVraagD/AansluitCapaciteit <= 100[ kW]) 
							, VestaRunData/BestaandeUtil/PlanRegio_rel
						)+
						sum(VestaRunData/NieuwbouwUtil/WarmteVraagD/AansluitCapaciteit 
							* float64(Not(IsDefined(VestaRunData/NieuwbouwUtil/WarmteAllocatie)))
							* float64(VestaRunData/NieuwbouwUtil/WarmteVraagD/AansluitCapaciteit <= 100[ kW ]) 
							, VestaRunData/NieuwbouwUtil/PlanRegio_rel
						)
					);
				attribute<kW> Groot (PlanRegio) :=
						// geen gelijktijdigheidsfactor voor grote utiliteit
						sum(VestaRunData/BestaandeUtil/WarmteVraagD/AansluitCapaciteit 
							* float64(Not(IsDefined(VestaRunData/BestaandeUtil/WarmteAllocatie)))
							* float64(VestaRunData/BestaandeUtil/WarmteVraagD/AansluitCapaciteit > 100[ kW ]) 
							, VestaRunData/BestaandeUtil/PlanRegio_rel
						)+
						sum(VestaRunData/NieuwbouwUtil/WarmteVraagD/AansluitCapaciteit 
							* float64(Not(IsDefined(VestaRunData/NieuwbouwUtil/WarmteAllocatie)))
							* float64(VestaRunData/NieuwbouwUtil/WarmteVraagD/AansluitCapaciteit > 100[ kW ]) 
							, VestaRunData/NieuwbouwUtil/PlanRegio_rel
						);
				attribute<kW> Totaal(PlanRegio) := Klein + Groot;
			}

			attribute<Eur> Ki_WarmteMeter_min (PlanRegio) := 800[Eur / nrAansl] * NrAansluitingen/Totaal + 1.1[Eur_kW] * CapaciteitsVraag/Totaal, Descr = "Tabel 36";
			attribute<Eur> Ki_WarmteMeter_max (PlanRegio) := 825[Eur / nrAansl] * NrAansluitingen/Totaal + 1.3[Eur_kW] * CapaciteitsVraag/Totaal, Descr = "Tabel 36";

			attribute<Eur> Ki_WarmteMeter_sec (PlanRegio) := (Schuiven/KostenMin * Ki_WarmteMeter_min +Schuiven/KostenMax * Ki_WarmteMeter_max) * LeerCurves/Curve1;

			parameter<Eur_kw> Oi_vermeden_gasketel := 1900[Eur] / 11[kw], Source = "FO F84 jo kentallenbestand woningen";
			attribute<Eur> Ki_WarmteMeter     (PlanRegio) := Ki_WarmteMeter_sec - Oi_vermeden_gasketel * CapaciteitsVraag/Totaal;

			attribute<Eur> Ki_Distributie_min (PlanRegio) := 100[Eur_kW] * CapaciteitsVraag/Klein,  Source = "FO v7a F 40, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36";
			attribute<Eur> Ki_Distributie_max (PlanRegio) := 150[Eur_kW] * CapaciteitsVraag/Klein,  Source = "FO v7a F 40, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36";
			attribute<Eur> Ki_Distributie     (PlanRegio) := (Schuiven/KostenMin * Ki_Distributie_min + Schuiven/KostenMax * Ki_Distributie_max) * LeerCurves/Curve1,  Source = "Tabel 36";

			attribute<float64> n_OS           (PlanRegio) := CapaciteitsVraag/Totaal / Vermogen_OS; // OnderStations voor utiliteit hebben dezelfde 'optimale' grootte als voor woningen

			attribute<Eur> Ki_OS_Klein        (PlanRegio) := CapaciteitsVraag/Klein * K_OS_p, Source = "mail Cor 16-12-2010; tabel 36"; // wegens gelijktijdigheid is dit 50 E / aansluitcap.

			attribute<Eur> Ki_OS_Groot_min    (PlanRegio) := CapaciteitsVraag/Groot *  15[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
			attribute<Eur> Ki_OS_Groot_max    (PlanRegio) := CapaciteitsVraag/Groot * 150[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
			attribute<Eur> Ki_OS_Groot        (PlanRegio) := (Schuiven/KostenMin * Ki_OS_Groot_min + Schuiven/KostenMax * Ki_OS_Groot_max) * LeerCurves/Curve1, Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
			attribute<Eur> Ki_OnderStation    (PlanRegio) := Ki_OS_Klein + Ki_OS_groot;

			attribute<Eur> Ki_Totaal          (PlanRegio) := Ki_WarmteMeter + Ki_Distributie + Ki_OnderStation;

			attribute<Eur_yr> Kj_sec          (PlanRegio) := Ki_WarmteMeter  * Kengetallen/Onderhoud/Rj_Installatie;
			attribute<Eur_yr> Kj_Base         (PlanRegio) := Ki_Distributie  * Kengetallen/Onderhoud/Rj_wd + Ki_OnderStation * Kengetallen/Onderhoud/Rj_Onderstation;
			attribute<Eur_yr> Kj_Admin        (PlanRegio) := Kj_Base * Kengetallen/Onderhoud/R_Admin;
			attribute<Eur_yr> Kj_Onderhoud    (PlanRegio) := Kj_sec + Kj_Base - Kj_Admin;
		}

		attribute<Eur_m2> K_dienstleiding_m2 (Classifications/GlTb):  Source = "F 47b",
		[
			null,
			0.909090909, 0, 0, 0,
			0.666666666, 0, 0, 0,
			0.666666666, 0, 0, 0
		];

		container GlasTuinbouw
		{
			parameter<m2> GemOppGroente: [ 11000 ];
			parameter<m>  GroenteKasLengteFactor := 2.0 * Sqrt(GemOppGroente), Descr = "noemer in F 50 en F 48";

			container bestaand
			{
				attribute<m2> Areaal (PlanRegio) := sum(VestaRunData/BestaandeGlTb/WarmteVraagD/NrModelUnits
						* float64(Not(IsDefined(VestaRunData/BestaandeGlTb/WarmteAllocatie)))
						, PlanRegioKaarten/BestaandeGlTb/impl/PlanRegio_rel);
				
				attribute<m> SqrtAreaal (PlanRegio) := sum(Sqrt(VestaRunData/BestaandeGlTb/WarmteVraagD/NrModelUnits)
						* float64(Not(IsDefined(VestaRunData/BestaandeGlTb/WarmteAllocatie)))
						, PlanRegioKaarten/BestaandeGlTb/impl/PlanRegio_rel);

				attribute<nrAansl> NrAansluitingen (PlanRegio) :=
						sum(VestaRunData/BestaandeGlTb/WarmteVraagD/nrAansluitingen
						* float64(Not(IsDefined(VestaRunData/BestaandeGlTb/WarmteAllocatie)))
						, PlanRegioKaarten/BestaandeGlTb/impl/PlanRegio_rel);

				attribute<kW> CapaciteitsVraag (PlanRegio) := 
						sum(  VestaRunData/BestaandeGlTb/WarmteVraagD/AansluitCapaciteit
						* float64(Not(IsDefined(VestaRunData/BestaandeGlTb/WarmteAllocatie)))
						, VestaRunData/BestaandeGlTb/PlanRegio_rel);

				attribute<float64> n_OS          (PlanRegio) := CapaciteitsVraag / Vermogen_OS; // OnderStations voor glastuinbouw hebben dezelfde 'optimale' grootte als voor woningen

				attribute<Eur> Ki_OS_min         (PlanRegio) := CapaciteitsVraag *  15[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
				attribute<Eur> Ki_OS_max         (PlanRegio) := CapaciteitsVraag * 150[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
				attribute<Eur> Ki_OnderStation   (PlanRegio) := (Schuiven/KostenMin * Ki_OS_min + Schuiven/KostenMax * Ki_OS_max) * LeerCurves/Curve1, Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]

				attribute<Eur> K_dienstleidingen (PlanRegio) : Source = "F 47b" ,= sum(VestaRunData/BestaandeGlTb/WarmteVraagD/NrModelUnits * K_dienstleiding_m2[VestaRunData/BestaandeGlTb/BebouwingsType], PlanRegioKaarten/BestaandeGlTb/impl/PlanRegio_rel);

				attribute<float64> n_Zijwegparen (PlanRegio) := Sqrt(2.0) * SqrtAreaal / GroenteKasLengteFactor, Descr = "F 48";
				attribute<float64> n_Zijleiding  (PlanRegio) := (n_Zijwegparen + 0.5) * 2.0, Descr = "F 48: estimate average increase of round-up in a 'best' continuous replacement";

				attribute<MW>      P_Zijleiding  (PlanRegio) : Descr = "F 49: 50% van het piekvermogen wordt door CV-ketels in de OS (dus per kas) geleverd" ,= CapaciteitsVraag / n_Zijleiding / value(1000, kW / MW);

				attribute<m>   lengte_Zijleiding (PlanRegio) := 1.7 * (Areaal / GroenteKasLengteFactor + Sqrt(2.0) * SqrtAreaal), Descr = "F 50";

				container ZijleidingKosten := BuisKosten(PlanRegio, P_Zijleiding);

				attribute<Eur>    K_Zijleiding  (PlanRegio) := lengte_Zijleiding * ZijleidingKosten/K_m;

				attribute<Eur   > Ki_Totaal     (PlanRegio) := K_dienstleidingen + K_Zijleiding + Ki_OnderStation;
				attribute<Eur_yr> Kj_Onderhoud  (PlanRegio) := 
					(K_dienstleidingen + K_Zijleiding) * Kengetallen/Onderhoud/Rj_SecundairNet + 
					Ki_OnderStation * Kengetallen/Onderhoud/Rj_OnderStation;
			}
			container nieuw
			{
				attribute<m2> Areaal    (PlanRegio) := sum(     VestaRunData/NieuwbouwGlTb/WarmteVraagD/NrModelUnits , PlanRegioKaarten/NieuwbouwGlTb/impl/PlanRegio_rel);
				attribute<m> SqrtAreaal (PlanRegio) := sum(Sqrt(VestaRunData/NieuwbouwGlTb/WarmteVraagD/NrModelUnits), PlanRegioKaarten/NieuwbouwGlTb/impl/PlanRegio_rel);

				attribute<nrAansl> NrAansluitingen(PlanRegio) :=
						sum(  VestaRunData/NieuwbouwGlTb/WarmteVraagD/nrAansluitingen * float64(Not(IsDefined(VestaRunData/NieuwbouwGlTb/WarmteAllocatie)))
						, PlanRegioKaarten/NieuwbouwGlTb/impl/PlanRegio_rel  );
				attribute<kW> CapaciteitsVraag(PlanRegio) :=
						sum(  VestaRunData/NieuwbouwGlTb/WarmteVraagD/AansluitCapaciteit * float64(Not(IsDefined(VestaRunData/NieuwbouwGlTb/WarmteAllocatie)))
						, VestaRunData/NieuwbouwGlTb/PlanRegio_rel);

				attribute<float64>  n_OS         (PlanRegio) := CapaciteitsVraag / Vermogen_OS; // *** OnderStations voor glsatuinbouw hebben dezelfde 'optimale' grootte als voor woningen

				attribute<Eur> Ki_OS_min         (PlanRegio) := CapaciteitsVraag *  15[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
				attribute<Eur> Ki_OS_max         (PlanRegio) := CapaciteitsVraag * 150[ Eur / KW], Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]
				attribute<Eur> Ki_OnderStation   (PlanRegio) := (Schuiven/KostenMin * Ki_OS_min + Schuiven/KostenMax * Ki_OS_max) * LeerCurves/Curve1, Source = "F 42, email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM, Tabel 36"; // 82.5[Eur_kW ]

				attribute<Eur> K_dienstleidingen (PlanRegio): Source = "F 47b",
					= sum(VestaRunData/NieuwbouwGlTb/WarmteVraagD/NrModelUnits * K_dienstleiding_m2[VestaRunData/NieuwbouwGlTb/BebouwingsType], PlanRegioKaarten/NieuwbouwGlTb/impl/PlanRegio_rel);

				attribute<float64> n_Zijwegparen (PlanRegio) := Sqrt(2.0) * SqrtAreaal / GroenteKasLengteFactor, Descr = "F 48";
				attribute<float64> n_Zijleiding  (PlanRegio) := (n_Zijwegparen + 0.5) * 2.0, Descr = "F 48"; // add expected increase of round-up as a 'best' continuous replacement of float64(RoundUp(n_Zijwegparen)) * float64(2)

				attribute<MW>      P_Zijleiding  (PlanRegio) := CapaciteitsVraag / n_Zijleiding / 1000[kW / MW], Descr = "F 49: 50% van het piekvermogen wordt door CV-ketels in de OS (dus per kas) geleverd";

				attribute<m>    lengte_Zijleiding(PlanRegio) := 1.3 * (Areaal / GroenteKasLengteFactor + Sqrt(2.0) * SqrtAreaal), Descr = "F 50";

				container ZijleidingKosten := BuisKosten(PlanRegio, P_Zijleiding);
				attribute<Eur>    K_Zijleiding  (PlanRegio) := lengte_Zijleiding * ZijleidingKosten/K_m;
				attribute<Eur>    Ki_Totaal     (PlanRegio) := K_dienstleidingen + K_Zijleiding + Ki_OnderStation;
				attribute<Eur_yr> Kj_Onderhoud  (PlanRegio) := 
					(K_dienstleidingen + K_Zijleiding) * Kengetallen/Onderhoud/Rj_SecundairNet
					 + Ki_OnderStation * Kengetallen/Onderhoud/Rj_OnderStation;
			}
			attribute<Eur>    Ki_CO2Installatie_min              (PlanRegio) : Source = "F 45, table 36", =  950[Eur_ha] * KostenFactorenD/Lt / 10000[m2 / ha];
			attribute<Eur>    Ki_CO2Installatie_max              (PlanRegio) : Source = "F 45, table 36", = 1050[Eur_ha] * KostenFactorenD/Lt / 10000[m2 / ha];
			attribute<Eur>    Ki_CO2Installatie                  (PlanRegio) := (Schuiven/KostenMin * Ki_CO2Installatie_min + Schuiven/KostenMax * Ki_CO2Installatie_max) * LeerCurves/Curve1;
			attribute<Eur_yr> Kj_CO2Installatie                  (PlanRegio) := (1600[Eur / ha / Yr] + 340[ton / ha / yr] * 80[Eur / ton]) * KostenFactorenD/Lt / 10000[m2 / ha], Source = "F 45";
			attribute<Eur_yr> Kj_CO2Installatie_FictiefOnderhoud (PlanRegio) := Ki_CO2Installatie  * Kengetallen/Onderhoud/Rj_Installatie;

			attribute<kW>      CapaciteitsVraag                  (PlanRegio) := Bestaand/CapaciteitsVraag + Nieuw/CapaciteitsVraag;
			attribute<nrAansl> NrAansluitingen                   (PlanRegio) := Bestaand/NrAansluitingen + Nieuw/NrAansluitingen;

			attribute<Eur>     Ki_WarmteMeter_min                (PlanRegio) := 800[ Eur / nrAansl ] * NrAansluitingen + 1.1[Eur_kW] * CapaciteitsVraag, Descr = "Tabel 36";
			attribute<Eur>     Ki_WarmteMeter_max                (PlanRegio) := 825[ Eur / nrAansl ] * NrAansluitingen + 1.3[Eur_kW] * CapaciteitsVraag, Descr = "Tabel 36";
			attribute<Eur>     Ki_WarmteMeter                    (PlanRegio) := (Schuiven/KostenMin * Ki_WarmteMeter_min +Schuiven/KostenMax * Ki_WarmteMeter_max) * LeerCurves/Curve1;

			attribute<Eur_yr>  Kj_WarmteMeter_Onderhoud          (PlanRegio) := Ki_WarmteMeter * Kengetallen/Onderhoud/Rj_Installatie;

			attribute<Eur>     Ki_Totaal                         (PlanRegio) := bestaand/Ki_Totaal + nieuw/Ki_Totaal + Ki_CO2Installatie + Ki_WarmteMeter;

			attribute<Eur_yr>  Kj_Onderhoud                      (PlanRegio) := bestaand/Kj_Onderhoud + nieuw/Kj_Onderhoud + Kj_WarmteMeter_Onderhoud;
			attribute<Eur_yr>  Kj_Admin                          (PlanRegio) := (Kj_Onderhoud + Kj_CO2Installatie_FictiefOnderhoud) * Kengetallen/Onderhoud/R_Admin;
			attribute<Eur_yr>  Kj_Verbruik                       (PlanRegio) := Kj_CO2Installatie;
		}

		container SecundairNet
		{
			attribute<km2>    OPP_bebouwd     (PlanRegio) := KostenFactorenD/Lw2;
			attribute<float64> n              (PlanRegio) := Wonen/bbw/OnderStation/n0 + Wonen/nbw/OnderStation/n0 + Utiliteit/n_OS; // Zonder glastuinbouw
			attribute<Ratio> VerkortingsFactor(PlanRegio) := 48.0 / (Max_Elem(n, 8.0)+40.0), Descr = "Fo v7a F 43";
			
			// Ik ben zo vrij geweest CapaciteitsVraag voor utiliteit (en glastuinbouw?) hier ook mee te nemen. 
			// Capaciteitsvraag vanuit woningen is nominaal per OnderStation; capaciteitsvraag vanuit Util + GlTb obv kengetallen
			parameter<float64> HulpketelVermogensaandeel := SpecifiekeInstellingen/Bijstook/vermogensaandelen/Hulpketel;
			attribute<MW>      P             (PlanRegio) := (n * Vermogen_OS + GlasTuinbouw/CapaciteitsVraag) * 0.001[ MW / kW]; //, IntegrityCheck = "P < value(115, MW)";

			container HoofdLeidingKosten := BuisKosten(PlanRegio, P);
			attribute<m>       L_hoofdleiding (PlanRegio) := HoofdLeidingKosten/a * sqrt(2.0)* 1000[ m / km] * sqrt(OPP_bebouwd);
			attribute<Eur>     K_hoofdleiding (PlanRegio) := L_hoofdleiding * HoofdLeidingKosten/K_m, Source = "F 32";

			parameter<Eur_m>   K_zij_m  := 586.3461241875[Eur / m] * LeerCurves/Curve2, Source = "F 31", Descr = "3309[Eur_m] - 0.1917[Eur_m / MW*MW]* Sqr(120.0[MW] - 0.825[MW]))";
			attribute<m>       L_zijleiding  (PlanRegio) := HoofdLeidingKosten/a * n * 0.25 * 0.5 *sqrt(2.0) * 1000[m / km]*sqrt(OPP_bebouwd)* VerkortingsFactor, Descr = "F 33, K_buis with omwegfactor included";
			attribute<Eur>     K_zijleiding  (PlanRegio) := L_zijleiding * K_zij_m, Descr = "F 33";

			parameter<Eur_MW> K_WOS_p_min := 100000[Eur / MW], Descr = "Kosten Warmteoverdrachtstation, Tabel 36";
			parameter<Eur_MW> K_WOS_p_max := 150000[Eur / MW], Descr = "Kosten Warmteoverdrachtstation, Tabel 36";

			attribute<Eur>    K_WOS       (PlanRegio) := HulpketelVermogensaandeel* P * (K_WOS_p_min * Schuiven/KostenMin + K_WOS_p_max * Schuiven/KostenMax) * LeerCurves/Curve2, Descr = "Kosten Warmteoverdrachtstation, zie: F 34,email Ruud van den Wijngaart Mon 9/2/2013 1:06 PM";
			attribute<Eur   > Ki_Totaal   (PlanRegio) := K_hoofdleiding + K_zijleiding + K_WOS;

			attribute<m>      L_transport (Planregio) := L_hoofdleiding + L_zijleiding;
			attribute<Eur_yr> Kj_Onderhoud(PlanRegio) := (K_hoofdleiding + K_zijleiding) * Kengetallen/Onderhoud/Rj_SecundairNet + K_WOS * Kengetallen/Onderhoud/Rj_WOS;
			attribute<Eur_yr> Kj_Admin    (PlanRegio) := Kj_Onderhoud * Kengetallen/Onderhoud/R_Admin;
		}
		container PrimairNet
		{
			parameter<float64> HoofdbronVermogensaandeel := SpecifiekeInstellingen/Bijstook/vermogensaandelen/Hoofdbron;

			attribute<MW> P (PlanRegio) := HoofdbronVermogensaandeel * SecundairNet/P; // aandeel hoofdwaarmtebron (dus de niet-bijstook); n.b. aandelen sommeren tot meer dan 100% ivm reservecapaciteit.

			container LeidingKosten := BuisKosten(PlanRegio, P);
		}
		
		attribute<GJ_yr>  Vj_WarmteVraag    (PlanRegio) := (Lq2+Lq4+Lq6);
		attribute<GJ_yr>  Vj_Warmte         (PlanRegio) := Vj_WarmteVraag * (1.0 / (1.0-N3)), Source = "FO v7a F 36"; // vraag * factor ter compensatie van leidingverliezen in de wijk
		attribute<GJ_yr>  Vj_LeidingVerlies (PlanRegio) := Vj_Warmte - Vj_WarmteVraag; // leidingverlies in het wijk-distributienet.
		attribute<GJ_yr>  Vj_WarmtePrimair  (PlanRegio) := N1 * Vj_Warmte, Source = "FO v7a F 36"; // deel dat niet door bijstook wordt geleverd.

		container Bijstook {
			attribute<GJ_yr>  Vj_Vraag    (PlanRegio) := Vj_Warmte - Vj_WarmtePrimair;
			attribute<GJ_yr>  Vj_Bijstook (PlanRegio) := Vj_Vraag / 0.925, Source = "FO v7a F 35";
			attribute<GJ_yr>  Vj_Verlies  (PlanRegio) := Vj_Bijstook - Vj_Vraag;
			attribute<Eur_yr> Kj_Verbruik (PlanRegio) := N2   * Vj_Bijstook;
			attribute<Eur_yr> Km_Verbruik (PlanRegio) := N2_m * Vj_Bijstook;
		}

		attribute<Eur>    Ki_ge_ov        (PlanRegio) := Wonen/Ki_ge_ov;
		attribute<Eur>    Ki_ge_pm        (PlanRegio) := Wonen/Ki_ge_pm;
		attribute<Eur>    Ki_id           (PlanRegio) := Wonen/Ki_id + Utiliteit/Ki_Totaal + Glastuinbouw/Ki_Totaal, Source = "FO v7a F 2";
		attribute<Eur>    Ki_wd           (PlanRegio) := SecundairNet/Ki_Totaal + Wonen/Ki_wd, Source = "FO v7a F 2";

		attribute<Eur_yr> Kj_ge_hv        (PlanRegio) := Wonen/Kj_ge_hv;
		attribute<Eur_yr> Kj_id_Onderhoud (PlanRegio) := Wonen/Kj_id_Onderhoud;
		attribute<Eur_yr> Kj_wd_Onderhoud (PlanRegio) := Wonen/Kj_wd_Onderhoud + Utiliteit/Kj_Onderhoud + Glastuinbouw/Kj_Onderhoud + SecundairNet/Kj_Onderhoud;
		attribute<Eur_yr> Kj_Onderhoud    (PlanRegio) := Kj_wd_Onderhoud + Kj_id_Onderhoud;
		attribute<Eur_yr> Kj_Verbruik     (PlanRegio) := Bijstook/Kj_Verbruik;
		attribute<Eur_yr> Km_Verbruik     (PlanRegio) := Bijstook/Km_Verbruik;
		attribute<Eur_yr> Kj_lv_Admin     (PlanRegio) := opbrengsten/JaarlijksD/Oj_VastRecht * Kengetallen/Onderhoud/R_lv_Admin;
		attribute<Eur_yr> Kj_wd_Admin     (PlanRegio) := Wonen/Kj_wd_Admin + Utiliteit/Kj_Admin + Glastuinbouw/Kj_Admin + SecundairNet/Kj_Admin;

		attribute<nrAansl>nrAansl_d       (PlanRegio) := ='add('+AsItemList(replace('sum(VestaRunData/@BC@/WarmteVraagD/nrAansluitingen, VestaRunData/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/name))+')';
		attribute<nrAansl>nrAansl_g       (PlanRegio) := ='add('+AsItemList(replace('sum(VestaRunData/@BC@/WarmteVraagA/nrAansluitingen, VestaRunData/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/name))+')';
		attribute<nrAansl>nrAansl_e       (PlanRegio) := ='add('+AsItemList(replace('sum(VestaRunData/@BC@/RuimtelijkeVraagComponent/nrAansluitingen, VestaRunData/@BC@/PlanRegio_rel)', '@BC@', Classifications/BebouwingsComponent/name))+')';
		attribute<m>      L_distr_d       (PlanRegio) := nrAansl_d * 15[m / nrAansl];
		attribute<m>      L_distr_g       (PlanRegio) := nrAansl_g * 15[m / nrAansl];
		attribute<m>      L_distr_e       (PlanRegio) := nrAansl_e * 15[m / nrAansl];
		attribute<m>      L_infra_d       (PlanRegio) := L_distr_d + SecundairNet/L_transport;
		attribute<m>      L_infra_g       (PlanRegio) := (L_distr_g + SecundairNet/L_transport)*float64(heeft_gas);
		attribute<m>      L_infra_e       (PlanRegio) := L_distr_e + SecundairNet/L_transport;

		attribute<Eur_yr> Kj_Precario     (PlanRegio) := L_infra_d * Kengetallen/Onderhoud/Rj_Precario_pm;
		attribute<Eur_yr> Kj_Totaal       (PlanRegio) := Kj_Onderhoud + Kj_Verbruik + Kj_wd_Admin + Kj_lv_Admin + Kj_Precario + Kj_ge_hv, Source = "FO v7a F 2";
		attribute<Eur_yr> Km_Totaal       (PlanRegio) := Kj_Onderhoud + Km_Verbruik + Kj_wd_Admin + Kj_lv_Admin;
	}
	
	attribute<Eur   > Oi_Aansluitbijdrage (PlanRegio) := Opbrengsten/EenmaligD/Oi_Totaal;
	attribute<Eur_yr> Oj_wd_KL            (PlanRegio) := Oi_Aansluitbijdrage * NCW/wd28/StartDiscountFactor * NCW/wd28/AnnualisationFactor;
	attribute<Eur_yr> Kj_ge_KL            (PlanRegio) := Ki_ge_Bruto * NCW/bw28/AnnualisationFactor;
	attribute<Eur_yr> Kj_id_KL            (PlanRegio) := Ki_id_Bruto * NCW/id28/AnnualisationFactor;

	attribute<Eur>    Ki_ge_ov            (PlanRegio) := KostenD/Ki_ge_ov;
	attribute<Eur>    Ki_ge_pm            (PlanRegio) := KostenD/Ki_ge_pm;
	attribute<Eur_yr> Kj_ge_hv            (PlanRegio) := KostenD/Kj_ge_hv;
	attribute<Eur>    Ki_ge_Bruto         (PlanRegio) := Ki_ge_ov + Ki_ge_pm;
	attribute<Eur   > Ki_id_Bruto         (PlanRegio) := KostenD/Ki_id;
	attribute<Eur   > Ki_wd_Bruto         (PlanRegio) := KostenD/Ki_wd;
	attribute<Eur>    Oi_ge_subsidie      (PlanRegio) := Ki_ge_ov * SpecifiekeInstellingen/BeleidsOpties/EIA/bwe/S_OngeriefsVergoeding + Ki_ge_pm * SpecifiekeInstellingen/BeleidsOpties/EIA/bwe/S_ProjectManagement;
	attribute<Eur>    Oi_id_subsidie      (PlanRegio) := Ki_id_Bruto * SpecifiekeInstellingen/BeleidsOpties/EIA/id;
	attribute<Eur>    Oi_wd_subsidie      (PlanRegio) := Ki_wd_Bruto * SpecifiekeInstellingen/BeleidsOpties/EIA/wd;
	attribute<Eur_yr> Kj_ge_base          (PlanRegio) := (Ki_ge_Bruto - Oi_ge_subsidie) * NCW/bw28/AnnualisationFactor + Kj_ge_hv;
	attribute<Eur_yr> Kj_id_base          (PlanRegio) := (Ki_id_Bruto - Oi_id_subsidie) * NCW/id28/AnnualisationFactor + KostenD/Kj_id_Onderhoud;
	attribute<Eur_yr> Kj_wd_base          (PlanRegio) := (Ki_wd_Bruto - Oi_wd_subsidie) * NCW/wd28/AnnualisationFactor + KostenD/Kj_wd_Onderhoud + KostenD/Kj_wd_Admin;
	attribute<Eur_yr> Oe_ge_subsidie      (PlanRegio) := Kj_ge_base * SpecifiekeInstellingen/BeleidsOpties/EEA/ge;
	attribute<Eur_yr> Oe_id_subsidie      (PlanRegio) := Kj_wd_base * SpecifiekeInstellingen/BeleidsOpties/EEA/id;
	attribute<Eur_yr> Oe_wd_subsidie      (PlanRegio) := Kj_wd_base * SpecifiekeInstellingen/BeleidsOpties/EEA/wd;
	attribute<Eur_yr> Kj_ge_Netto         (PlanRegio) := Kj_ge_base - Oe_ge_subsidie;
	attribute<Eur_yr> Kj_id_Netto         (PlanRegio) := Kj_id_base - Oe_id_subsidie;
	attribute<Eur_yr> Kj_wd_Netto         (PlanRegio) := Kj_wd_base  + KostenD/Kj_Verbruik + KostenD/Kj_Precario - Oe_wd_subsidie - Oj_wd_KL;
	attribute<Eur_yr> Kj_Netto            (PlanRegio) := Kj_ge_Netto + Kj_id_Netto + Kj_wd_Netto + KostenD/Kj_lv_Admin;

	attribute<Eur_yr> Oj_wd               (PlanRegio) := Oj_wd_KL + Opbrengsten/JaarlijksD/Oj_Totaal;
	attribute<Eur_yr> Oj_NettoD           (PlanRegio) := Opbrengsten/JaarlijksD/Oj_Totaal - Kj_Netto;
	attribute<Eur_yr> Km_totaalD          (PlanRegio) := KostenD/Km_Totaal;
	attribute<MW>     CapaciteitsVraagD   (PlanRegio) := KostenD/PrimairNet/P;
	attribute<GJ_yr>  Vj_WarmtePrimairD   (PlanRegio) := KostenD/Vj_WarmtePrimair;
	attribute<KG_yr>  CO2_BijstookD       (PlanRegio) := Prijzen/AardGas/CO2_GJ * KostenD/Bijstook/Vj_Bijstook;
}

