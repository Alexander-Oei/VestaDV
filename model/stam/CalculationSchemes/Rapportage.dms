//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                                  (C) VESTA 2018                                      //
//        Het doel van het model is om beleidsinformatie te genereren met betrekking    //
//        tot de energievoorziening van de gebouwde omgeving.                           //
//                                                                                      //
//                         Planbureau voor de Leefomgeving                              //
//                                    JUNI 2018                                         //
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//     * In het geval van externe publicatie van onderzoeksresultaten waarbij gebruik   //
//       is gemaakt van de verstrekte gegevens dient de gebruiker deze resultaten aan   //
//       het PBL mede te delen middels de toezending van 2 exemplaren van de betref-    //
//       fende publicatie aan het hoofd van het team ROL van het PBL.                   //
//                                                                                      //
//     * In elke publicatie waarin de gegevens van het PBL in enige vorm zijn opgenomen,//
//       zal de gebruiker de vermelding opnemen: "Bron: Planbureau voor de Leefomgeving"//
//       Indien het een bewerking van de gegevens betreft, dient te worden opgenomen:   //
//       "Gebaseerd op Planbureau voor de Leefomgeving gegevens".                       //
//                                                                                      //
//     * Het PBL is onder geen enkele voorwaarde aansprakelijk tegenover gebruiker voor //
//       enige schade, mede begrepen winstderving, verlies van gegevens, schade         //
//       tengevolge van fouten of onjuistheden in gegevens, schade tengevolge van fouten//
//       of onvolkomenheden in de documentatie of andere incidentele of gevolgschade    //
//       welke voortvloeit uit of in verband staat met gebruik of het niet kunnen ge-   //
//       bruiken van gegevens.                                                          //
//                                                                                      //
//     * Het PBL staat niet in voor de juistheid van de resultaten die worden verkregen //
//       door combinatie van diverse, op zichzelf staande PBL-gegevens onderling,       //
//       of met die uit andere bronnen.                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Rapportage
{
	#include <RegionaleRapportageTempl.dms>
	#include <FlowTempl.dms>

	template EindgebruikerComponentTempl
	{
		container AllocatieComponent;
		container NCW15;
		container NCW30;
		container NCW50;
		
		attribute<Eur_yr> Oj_VastRechtG (Invoer/SpecifiekeInstellingen/PlanRegio);
		attribute<Eur   > Oi_AansluitG  (Invoer/SpecifiekeInstellingen/PlanRegio);
		attribute<Eur_yr> Oj_VastRechtE (Invoer/SpecifiekeInstellingen/PlanRegio);
		attribute<Eur   > Oi_AansluitE  (Invoer/SpecifiekeInstellingen/PlanRegio);

		container PlanRegioKaartComponent;

		container BCdata    := AllocatieComponent/BCdata;
		container RuimtelijkeVraagComponent:= AllocatieComponent/RuimtelijkeVraagComponent;
		unit<uint32> BebouwingsObject      := BCdata/BebouwingsObject;

		parameter<Ratio> BTW_Factor    := BCdata/BTW_Factor;
		parameter<Ratio> BTW_Factor_gv := BCdata/BTW_Factor_gv;

		unit<uint32> PlanRegio         := SpecifiekeInstellingen/PlanRegio;

		container gebouwen {
			container Elektriciteit 
			{
				attribute<Eur_yr> Verbruik      (PlanRegio) := sum(AllocatieComponent/Elektriciteit/eindgebruik_excl, BCdata/PlanRegio_rel);
				attribute<Eur_yr> netwerk       (PlanRegio) := sum(AllocatieComponent/Elektriciteit/netwerk,          BCdata/PlanRegio_rel);
				attribute<Eur_yr> EnergieHeffing(PlanRegio) := sum(AllocatieComponent/Elektriciteit/EnergieHeffing,   BCdata/PlanRegio_rel);
				attribute<Eur_yr> CO2Heffing    (PlanRegio) := sum(AllocatieComponent/Elektriciteit/CO2Heffing,       BCdata/PlanRegio_rel);
				
				attribute<Eur_yr> VastRecht     (PlanRegio):= Oj_VastRechtE;
				attribute<Eur_yr> Aansl_j       (PlanRegio):= Oi_AansluitE * Ncw50/AnnualisationFactor;
				attribute<Eur_yr> Aansl_m       (PlanRegio):= Oi_AansluitE * Ncw/mr50/AnnualisationFactor;
				
				attribute<Eur_yr> Vraag_excl    (PlanRegio) := Verbruik + VastRecht + Aansl_j;
				attribute<Eur_yr> Vraag_m       (PlanRegio) := Verbruik + Vastrecht + Aansl_m - EnergieHeffing;
			}
			container AardGas {
				attribute<Eur_yr> Verbruik      (PlanRegio) := sum(AllocatieComponent/AardGas/eindgebruik_excl, BCdata/PlanRegio_rel);
				attribute<Eur_yr> netwerk       (PlanRegio) := sum(AllocatieComponent/AardGas/netwerk,          BCdata/PlanRegio_rel);
				attribute<Eur_yr> EnergieHeffing(PlanRegio) := sum(AllocatieComponent/AardGas/EnergieHeffing,   BCdata/PlanRegio_rel);
				attribute<Eur_yr> CO2Heffing    (PlanRegio) := sum(AllocatieComponent/AardGas/CO2Heffing,       BCdata/PlanRegio_rel);

				attribute<Eur_yr> VastRecht     (PlanRegio):= Oj_VastRechtG;
				attribute<Eur_yr> Aansl_j       (PlanRegio):= Oi_AansluitG  * Ncw50/AnnualisationFactor;
				attribute<Eur_yr> Aansl_m       (PlanRegio):= Oi_AansluitG  * Ncw/mr50/AnnualisationFactor;

				attribute<Eur_yr> Vraag_excl    (PlanRegio):= Verbruik + VastRecht + Aansl_j;
				attribute<Eur_yr> Vraag_m       (PlanRegio):= Verbruik + VastRecht + Aansl_m - EnergieHeffing;
			}
			
			template GebiedsOptieTempl
			{
				// *** Vastrecht en aansluitbijdrage voor Deelnemers wordt nu ook meegenomen itt FO C6
				parameter<Classifications/AanbodOptie> Optie;
				attribute<Ratio> Aandeel(BebouwingsObject);
				
				attribute<Eur_yr> Verbruik    (PlanRegio): = sum(PlanRegioKaartComponent/WarmteVraag/deelnemers_obj                   * Aandeel, BCdata/PlanRegio_rel);
				attribute<Eur_yr> VastRecht   (PlanRegio): = sum(BCdata/Opbrengsten/VastRechtBijdrageD * Aandeel, BCdata/PlanRegio_rel);
				
				attribute<Eur>    Oi_AanslD   (PlanRegio) := sum(BCdata/Opbrengsten/AansluitBijdrageD  * Aandeel, BCdata/PlanRegio_rel);
				attribute<Eur_yr> Aansl_j     (PlanRegio) := Oi_AanslD * BCdata/NcwRefs/_28/StartDiscountFactor * BCdata/NcwRefs/_28/AnnualisationFactor;
				attribute<Eur_yr> Aansl_m     (PlanRegio) := Oi_AanslD * NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor;
				
				attribute<Eur_yr> Vraag_excl  (PlanRegio): = Verbruik + VastRecht + Aansl_j;
				attribute<Eur_yr> Vraag_m     (PlanRegio): = Verbruik + VastRecht + Aansl_m;
			}
			container RestWarmte: = GebiedsOptieTempl(Classifications/AanbodOptie/V/RestWarmte, AllocatieComponent/Aandelen/RestWarmte);
			container GeoThermie: = GebiedsOptieTempl(Classifications/AanbodOptie/V/GeoThermie, AllocatieComponent/Aandelen/GeoThermie);
			container WijkWKK:    = GebiedsOptieTempl(Classifications/AanbodOptie/V/WijkWKK, AllocatieComponent/Aandelen/WijkWKK);
			container BioWKK:     = GebiedsOptieTempl(Classifications/AanbodOptie/V/BioWKK, AllocatieComponent/Aandelen/BioWKK);
			container WKO {
				parameter<bool> Active : =rjoin(BCdata/BCname,  Classifications/BebouwingsComponent/Name, Classifications/BebouwingsComponent/KanWKO);
				
				attribute<Ratio> Aandeel(BebouwingsObject): = AllocatieComponent/Aandelen/WKO;
				
				// *** Vastrecht en aansluitbijdrage voor Deelnemers wordt nu ook meegenomen itt FO C6
				
				attribute<Eur_yr> Warmte      (PlanRegio): = =Active ? 'sum(PlanRegioKaartComponent/WarmteVraag/deelnemers_obj         * Aandeel, BCdata/PlanRegio_rel)' : 'const(0[Eur_yr], PlanRegio)';
				attribute<Eur_yr> Koude       (PlanRegio): = =Active ? 'sum(AllocatieComponent/KoudeAllocatie * Aandeel, BCdata/PlanRegio_rel)' : 'const(0[Eur_yr], PlanRegio)';
				attribute<Eur_yr> Om_Comfort  (PlanRegio): = =Active ? 'sum(AllocatieComponent/Om_Comfort     * Aandeel, BCdata/PlanRegio_rel)' : 'const(0[Eur_yr], PlanRegio)';
				
				attribute<Eur_yr> Verbruik    (PlanRegio): = =Active ? 'Warmte + Koude' : 'const(0[Eur_yr], PlanRegio)';
				attribute<Eur_yr> VastRecht   (PlanRegio): = =Active ? 'sum(BCdata/Opbrengsten/VastRechtBijdrageD * Aandeel, BCdata/PlanRegio_rel)' : 'const(0[Eur_yr], PlanRegio)';
				
				attribute<Eur>    Aansl_i     (PlanRegio): = =Active ? 'EndState/WKO/Oi_Aansl/'+BCdata/BCname : 'const(0[Eur], PlanRegio)';
				attribute<Eur_yr> Aansl_j     (PlanRegio): = =Active ? 'Aansl_i * BCdata/NcwRefs/_28/StartDiscountFactor * BCdata/NcwRefs/_28/AnnualisationFactor' : 'const(0[Eur_yr], PlanRegio)';
				attribute<Eur_yr> Aansl_m     (PlanRegio): = =Active ? 'Aansl_i * NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor' : 'const(0[Eur_yr], PlanRegio)';
				
				attribute<Eur_yr> Vraag_excl  (PlanRegio): = =Active ? 'Verbruik + VastRecht + Aansl_j' : 'const(0[Eur_yr], PlanRegio)';
				attribute<Eur_yr> Vraag_m     (PlanRegio): = =Active ? 'Verbruik + VastRecht + Aansl_m' : 'const(0[Eur_yr], PlanRegio)';
			}
			
			attribute<Eur>    Ki_GebouwVerbetering_excl (PlanRegio): = sum(BCdata/Kosten/Ki_GebouwVerbetering, BCdata/PlanRegio_rel);
			attribute<Eur_yr> Kw_GebouwVerbetering_excl (PlanRegio) := Ki_GebouwVerbetering_excl * NCW30/AnnualisationFactor;
			
			attribute<Eur_yr> Kw_Totaal_excl(PlanRegio): = Elektriciteit/Vraag_excl + AardGas/Vraag_excl + RestWarmte/Vraag_excl + GeoThermie/Vraag_excl + WKO/Vraag_excl + WijkWKK/Vraag_excl + BioWKK/Vraag_excl + Kw_GebouwVerbetering_excl;
			attribute<Eur_yr> Kj_OenM_base  (PlanRegio): = Ki_GebouwVerbetering_excl * Kengetallen/Onderhoud/Rj_GebouwVerbetering;
			attribute<Eur_yr> Kj_Onderh_excl(PlanRegio): = Kj_OenM_base * Kengetallen/Onderhoud/R_Onderhoud;
			attribute<Eur_yr> Kj_Admin_excl (PlanRegio): = Kj_OenM_base * Kengetallen/Onderhoud/R_Admin;
		}
		container LokaleEnergieProductie
		{
			attribute<Eur>    Ki_ZonneBoiler(PlanRegio): = sum(BCdata/kosten/Ki_ZonneBoiler,BCdata/PlanRegio_rel);
			attribute<Eur>    Ki_Zon_PV     (PlanRegio): = sum(BCdata/kosten/Ki_Zon_PV,     BCdata/PlanRegio_rel);
			attribute<Eur>    Ki_mWKK       (PlanRegio): = sum(BCdata/Kosten/Ki_mWKK,       BCdata/PlanRegio_rel);
			attribute<Eur>    Ki_eWP        (PlanRegio): = sum(BCdata/Kosten/Ki_eWP,        BCdata/PlanRegio_rel);
			attribute<Eur>    Ki_hWP        (PlanRegio): = sum(BCdata/Kosten/Ki_hWP,        BCdata/PlanRegio_rel);
			attribute<Eur>    Ki_EWV        (PlanRegio): = sum(BCdata/Kosten/Ki_EWV,        BCdata/PlanRegio_rel);
			attribute<Eur>    Ki_Totaal30   (PlanRegio): = sum(BCdata/Kosten/Ki_LokaleOpwekking30, BCdata/PlanRegio_rel);
			attribute<Eur>    Ki_Totaal15   (PlanRegio): = sum(BCdata/Kosten/Ki_LokaleOpwekking15, BCdata/PlanRegio_rel);
			
			attribute<Eur_yr> Kw_Totaal_excl(PlanRegio): = Ki_Totaal30 * Ncw30/AnnualisationFactor + Ki_Totaal15 * Ncw15/AnnualisationFactor;
			attribute<Eur_yr> Kj_OenM_base  (PlanRegio): = (Ki_Totaal30 + Ki_Totaal15) * Kengetallen/Onderhoud/Rj_LokaleOpwekking;
			attribute<Eur_yr> Kj_Onderh_excl(PlanRegio): = Kj_OenM_base * Kengetallen/Onderhoud/R_Onderhoud;
			attribute<Eur_yr> Kj_Admin_excl (PlanRegio): = Kj_OenM_base * Kengetallen/Onderhoud/R_Admin;
		}
		attribute<Eur_yr> Om_Comfort    (PlanRegio): = gebouwen/WKO/Om_Comfort;
		attribute<Eur_yr> Kw_Totaal_excl(PlanRegio): = gebouwen/Kw_Totaal_excl + LokaleEnergieProductie/Kw_Totaal_excl;
		attribute<Eur_yr> Kj_Onderh_excl(PlanRegio): = gebouwen/Kj_Onderh_excl + LokaleEnergieProductie/Kj_onderh_excl;
		attribute<Eur_yr> Kj_Admin_excl (PlanRegio): = gebouwen/Kj_Admin_excl  + LokaleEnergieProductie/Kj_Admin_excl;
		
		attribute<Eur_yr> Oj_Subsidie(PlanRegio) := 
			sum(
		  		  BCdata/sprongen/subsidie/EIA30 * NCW30/AnnualisationFactor
				+ BCdata/sprongen/subsidie/EIA15 * NCW15/AnnualisationFactor
				+ BCdata/sprongen/subsidie/EEA
			,	BCdata/PlanRegio_rel
			);
			
		attribute<Eur_yr> Om_Subsidie(PlanRegio) := 
			sum(
				  BCdata/sprongen/subsidie/EIA30 * NCW/mr30/AnnualisationFactor
				+ BCdata/sprongen/subsidie/EIA15 * NCW/mr15/AnnualisationFactor
				+ BCdata/sprongen/subsidie/EEA
			,	BCdata/PlanRegio_rel
			);
			
		attribute<Eur_yr> Kw_Totaal_incl(PlanRegio): = 
			BTW_Factor * (Kw_Totaal_excl + Kj_Onderh_excl + Kj_Admin_excl) +
			(BTW_Factor_gv -BTW_Factor) * gebouwen/Kw_GebouwVerbetering_excl
			- Oj_Subsidie;
	}
	template WriteToCSV
	{
		// begin case parameters
		container context;
		unit<uint8> RapGroep;
		parameter<String> fieldlist;
		parameter<String> filename;
		// end   case parameters

		container impl
		{
			unit<uint32> Field := range(uint32,0,strcount(fieldlist,';')+1)
			{
				attribute<string> FieldDescr  := ReadArray(fieldlist,.,string,0);
				attribute<UInt32> SepPos      := strpos(FieldDescr, ':');
				attribute<string> Name        := IsDefined(SepPos) ? substr(FieldDescr, 0, SepPos): FieldDescr;
				attribute<string> NameInTable := IsDefined(SepPos) ? substr(FieldDescr, SepPos+1, strlen(FieldDescr)) : FieldDescr;
			}
			parameter<string> NewLine := '\n';
		}
		parameter<String> Header := AsList(impl/Field/Name, ';');

		parameter<String> Metric := 
			=asList(
				Quote('[')+'+PropValue(ValuesUnit(context/' + impl/Field/NameInTable +'),' + quote('metric') + ')+'+Quote(']')
				, '+'+Quote(';')+'+'
			);

		attribute<String> Body (RapGroep) := 
			='union_data(RapGroep, '
				+AsList('String(context/'+impl/Field/NameInTable+')'
					,'+' + quote(';') + '+'
				)
			+')';

		parameter<String> Result := Header + impl/NewLine + Metric + impl/NewLine + AsList(Body+impl/NewLine,'')
		,	StorageName = "=filename"
		,	StorageType = "str";
	}
	template ExportCsvT
	{
		// begin case parameters
		unit<uint32> table;
		unit<uint32> variabele;
		parameter<string> filename;
		// end   case parameters
		
		parameter<string> result_expr := AsList('MakeDefined(string(table/' + variabele/name + '),'''')',' +'';''+ ');
		attribute<string> result_att (table) := =result_expr;
		parameter<string> result := AsList(variabele/name, ';')+'\n'+AsList(result_att, '\n'),
			Storagename = "=filename",
			StorageType = "str";
	}
}