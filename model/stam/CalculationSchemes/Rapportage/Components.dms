//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template Components
{
	// begin case parameters
	parameter<string>  name;
	attribute<float64> factor (Invoer/SpecifiekeInstellingen/PlanRegio);
	// end case parameters

	container Jaarlijks := CalculationSchemes/Payments/Main(Model/ReportingMetaData/Jaarlijks, Eur_yr , true , ReportFolder+ '/' + Name + '_Jaarlijks'  , factor);
	container Eenmalig  := CalculationSchemes/Payments/Main(Model/ReportingMetaData/Eenmalig,  Eur    , false, ReportFolder+ '/' + Name + '_Eenmalig' , factor);

	container Energy := CalculationSchemes/Transformations/Main(Model/ReportingMetaData/Verbruik, GJ_yr ,  ReportFolder + '/' + Name + '_Energy', factor, ''                             , PJ_yr);
	container CO2    := CalculationSchemes/Transformations/Main(Model/ReportingMetaData/Uitstoot, kg_yr ,  ReportFolder + '/' + Name + '_CO2'   , factor, 'CO2_' + string(ZichtJaar_jaar), kg_GJ);
	container NOx    := CalculationSchemes/Transformations/Main(Model/ReportingMetaData/Uitstoot, g / Yr,  ReportFolder + '/' + Name + '_NOx'   , factor, 'NOx_' + string(ZichtJaar_jaar), g_GJ);
	container SO2    := CalculationSchemes/Transformations/Main(Model/ReportingMetaData/Uitstoot, g / Yr,  ReportFolder + '/' + Name + '_SO2'   , factor, 'SO2_' + string(ZichtJaar_jaar), g_GJ);
	container VOS    := CalculationSchemes/Transformations/Main(Model/ReportingMetaData/Uitstoot, g / Yr,  ReportFolder + '/' + Name + '_VOS'   , factor, 'VOS_' + string(ZichtJaar_jaar), g_GJ);
	container TS     := CalculationSchemes/Transformations/Main(Model/ReportingMetaData/Uitstoot, g / Yr,  ReportFolder + '/' + Name + '_TS'    , factor, 'TS_'  + string(ZichtJaar_jaar), g_GJ);

	parameter<string> GenerateAll := 'Ready', ExplicitSuppliers = "Jaarlijks/GenerateAll;Eenmalig/GenerateAll;Energy/GenerateAll;CO2/GenerateAll;NOx/GenerateAll;SO2/GenerateAll;VOS/GenerateAll;TS/GenerateAll";
}