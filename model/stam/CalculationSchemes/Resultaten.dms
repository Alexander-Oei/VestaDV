//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2019 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template Resultaten
{
	// begin case parameters
	parameter<String> RekenstapName;
	parameter<String> ZichtjaarName;
	// optional case parameter

	container TussenResultaten := ='/TussenResultaten/' + RekenstapName;
	unit<uint32> PlanRegio     := Invoer/SpecifiekeInstellingen/PlanRegio;

	container Prijzen               := TussenResultaten/Prijzen;
	container BebouwingsComponenten := TussenResultaten/BebouwingsComponenten;
	container NCW                   := TussenResultaten/NCW;
	container GebiedsAllocatie      := TussenResultaten/GebiedsAllocatie;
	container StateVoorAllocatie    := TussenResultaten/StateVoorAllocatie;
	container StateNaAllocatie      := TussenResultaten/StateNaAllocatie;
	container Voorkeuren            := TussenResultaten/Voorkeuren;

	container Allocatie             := TussenResultaten/AllocatieResultaten;
	parameter<Classifications/zichtjaar> ZichtJaar_rel  := rlookup(ZichtJaarName, Classifications/zichtjaar/name);
	parameter<units/yr_uint16>           ZichtJaar_jaar := Classifications/zichtjaar/jaar[zichtjaar_rel];

	container RestWamte
	{
		unit<uint32> CumulatedArcSet := GebiedsAllocatie/RestWarmte/Iterations/I0/NextState/CumulatedArcSet, StorageName = "=FolderInfo/OutputFolder+'/RestWarmte.dbf'" //REMOVE , DialogType = "Map", DialogData = "CumulatedArcs"
		{
			attribute<float64>   BronPointX    := MakeDefined(PointCol(BronPoint), 280000.0 / 2.0);
			attribute<float64>   BronPointY    := MakeDefined(PointRow(BronPoint), (300000.0 + 325000.0) / 2.0);
			attribute<PlanRegio> PlanRegio_rel := GebiedsAllocatie/RestWarmte/Iterations/I0/NextState/CumulatedArcSet/PlanRegio_rel;
		}
	}
	
//	TODO: Grid100m gebiedsopties dynamisch maken en corrigeren nieuwe StateNaAllocatie
//	#include <Grid100m.dms>

	container CO2: Source = "FO v7a C5"
	{
		container Gebouwen
		{
			container Elektriciteit := for_each_nedv(Classifications/BebouwingsComponent/Name, 'sum(Allocatie/'+Classifications/BebouwingsComponent/Name+'/CO2/Elektriciteit, BebouwingsComponenten/'+Classifications/BebouwingsComponent/Name+'/PlanRegio_rel)', PlanRegio, KG_yr)
			{
				attribute<KG_yr> Totaal(PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
			}

			container AardGas := for_each_nedv(Classifications/BebouwingsComponent/Name, 'sum(Allocatie/'+Classifications/BebouwingsComponent/Name+'/CO2/AardGas, BebouwingsComponenten/'+Classifications/BebouwingsComponent/Name+'/PlanRegio_rel)', PlanRegio, KG_yr)
			{
				attribute<KG_yr> Totaal(PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
			}

			attribute<KG_yr> Totaal(PlanRegio) := Elektriciteit/Totaal + AardGas/Totaal;
		}

		container gebiedsopties
		{
			attribute<KG_yr>	CO2_id_gas		(PlanRegio)	:=	StateNaAllocatie/totaal/Uitstoot/CO2_id_gas;
			attribute<KG_yr>	CO2_wd_gas		(PlanRegio)	:=	StateNaAllocatie/totaal/Uitstoot/CO2_wd_gas;
			attribute<KG_yr>	CO2_ow_gas		(PlanRegio)	:=	StateNaAllocatie/totaal/Uitstoot/CO2_ow_gas;
			attribute<KG_yr>	CO2_id_elek		(PlanRegio)	:=	StateNaAllocatie/totaal/Uitstoot/CO2_id_elek;
			attribute<KG_yr>	CO2_wd_elek		(PlanRegio)	:=	StateNaAllocatie/totaal/Uitstoot/CO2_wd_elek;
			attribute<KG_yr>	CO2_ow_elek		(PlanRegio)	:=	StateNaAllocatie/totaal/Uitstoot/CO2_ow_elek;
			
			attribute<KG_yr>	totaal			(PlanRegio)	:=	CO2_id_gas  + CO2_wd_gas  + CO2_ow_gas  +
																CO2_id_elek + CO2_wd_elek + CO2_ow_elek;
		}

		attribute<KG_yr> Totaal(PlanRegio) := Gebouwen/Totaal + Gebiedsopties/Totaal;
	}

	container Metervraag
	{
		container Gebouwen
		{
			container WarmteKoudeLevering
			{
				attribute<GJ_yr>	V_koude		(PlanRegio)	:=	StateNaAllocatie/totaal/verbruik/V_Koude;
				attribute<GJ_yr>	V_warmte	(PlanRegio)	:=	StateNaAllocatie/totaal/verbruik/V_Warmte;
			}
			
			container Elektriciteit := for_each_nedv(Classifications/BebouwingsComponent/Name, 'sum(Allocatie/'+Classifications/BebouwingsComponent/Name+'/Metervraag/Elektriciteit, BebouwingsComponenten/'+Classifications/BebouwingsComponent/Name+'/PlanRegio_rel)', PlanRegio, GJ_yr)
			{
				attribute<GJ_yr> Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
			}

			container Gas := for_each_nedv(Classifications/BebouwingsComponent/Name, 'sum(Allocatie/'+Classifications/BebouwingsComponent/Name+'/Metervraag/AardGas, BebouwingsComponenten/'+Classifications/BebouwingsComponent/Name+'/PlanRegio_rel)', PlanRegio, GJ_yr)
			{
				attribute<GJ_yr> Totaal (PlanRegio) := ='add('+AsItemList(Classifications/BebouwingsComponent/Name)+')';
			}
		}
		
		container Gebiedsopties
		{
			container Elektriciteit
			{
				attribute<GJ_yr>	V_id_elek	(PlanRegio)	:=	StateNaAllocatie/totaal/verbruik/V_id_elek;
				attribute<GJ_yr>	V_wd_elek	(PlanRegio)	:=	StateNaAllocatie/totaal/verbruik/V_wd_elek;
				attribute<GJ_yr>	V_ow_elek	(PlanRegio)	:=	StateNaAllocatie/totaal/verbruik/V_ow_elek;
			}
			container Gas
			{
				attribute<GJ_yr>	V_id_gas	(PlanRegio)	:=	StateNaAllocatie/totaal/verbruik/V_id_gas;
				attribute<GJ_yr>	V_wd_gas	(PlanRegio)	:=	StateNaAllocatie/totaal/verbruik/V_wd_gas;
				attribute<GJ_yr>	V_ow_gas	(PlanRegio)	:=	StateNaAllocatie/totaal/verbruik/V_ow_gas;
			}
		}
	}

	#include<Maatschappelijk.dms>

	container Eindgebruiker :=
			for_each_ne(Classifications/BebouwingsComponent/name,
				replace(
					'Rapportage/EindgebruikerComponent(
						 Allocatie/@BC@
						,NCW/@NC@15
						,NCW/@NC@30
						,NCW/@NC@50
						,sum(Allocatie/@BC@/AardGas/Vastrecht,              BebouwingsComponenten/@BC@/PlanRegio_rel)
						,sum(Allocatie/@BC@/AardGas/AansluitBijdrage,       BebouwingsComponenten/@BC@/PlanRegio_rel)
						,sum(Allocatie/@BC@/Elektriciteit/Vastrecht,        BebouwingsComponenten/@BC@/PlanRegio_rel)
						,sum(Allocatie/@BC@/Elektriciteit/AansluitBijdrage, BebouwingsComponenten/@BC@/PlanRegio_rel)
						,StateNaAllocatie/KostenBaten/PlanRegioKaarten/@BC@
					)'
				,	'@BC@', Classifications/BebouwingsComponent/name
				,	'@NC@', Classifications/BebouwingsComponent/NcwRefBase
				)
			)
		,	Source = "FO v7a C6";

	container EnergieProducent
	{
		container impl: IsHidden = "True"
		{
			attribute<String> FlowExpr (Classifications/GebiedsOptie)	:= 
				replace(
					'	
						  StateNaAllocatie/Cumulaties/@RO@/Flow/ge/Kj_ge_hv
						- StateNaAllocatie/Cumulaties/@RO@/Flow/lv/Oj_lv_verbruik
						- StateNaAllocatie/Cumulaties/@RO@/Flow/lv/Oj_lv_vastrecht
						- StateNaAllocatie/Cumulaties/@RO@/Flow/lv/Oj_lv_SDE
					
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/id/Kj_id_gas
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/id/Kj_id_elek
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/id/Kj_id_oh
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/id/Kj_id_adm
						- StateNaAllocatie/Cumulaties/@RO@/Flow/id/Oj_id_SDE
						- StateNaAllocatie/Cumulaties/@RO@/Flow/id/Oj_id_EEA
						
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/wd/Kj_wd_gas
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/wd/Kj_wd_elek
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/wd/Kj_wd_oh
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/wd/Kj_wd_adm
						- StateNaAllocatie/Cumulaties/@RO@/Flow/wd/Oj_wd_SDE
						- StateNaAllocatie/Cumulaties/@RO@/Flow/wd/Oj_wd_EEA
						
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/pt/Kj_pt_oh
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/pt/Kj_pt_adm
						- StateNaAllocatie/Cumulaties/@RO@/Flow/pt/Oj_pt_EEA
						
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/ow/Kj_ow_gas
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/ow/Kj_ow_elek
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/ow/Kj_ow_oh
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/ow/Kj_ow_adm
						- StateNaAllocatie/Cumulaties/@RO@/Flow/ow/Oj_ow_SDE
						- StateNaAllocatie/Cumulaties/@RO@/Flow/ow/Oj_ow_EEA
						+ StateNaAllocatie/Cumulaties/@RO@/Flow/ow/Kj_ow_productie
						
					',	'@RO@', Classifications/GebiedsOptie/Name);		

			attribute<String> StockExpr(Classifications/GebiedsOptie)	:=
				replace(
					'	
						  StateNaAllocatie/Cumulaties/@RO@/Stock/Ki_id			
						+ StateNaAllocatie/Cumulaties/@RO@/Stock/Ki_wd
						+ StateNaAllocatie/Cumulaties/@RO@/Stock/Ki_pt
						+ StateNaAllocatie/Cumulaties/@RO@/Stock/Ki_ow
						+ StateNaAllocatie/Cumulaties/@RO@/Stock/Ki_ge_pm
						+ StateNaAllocatie/Cumulaties/@RO@/Stock/Ki_ge_ov
						
						- StateNaAllocatie/Cumulaties/@RO@/Stock/Oi_lv_aansl
						- StateNaAllocatie/Cumulaties/@RO@/Stock/Oi_ge_EIA
						- StateNaAllocatie/Cumulaties/@RO@/Stock/Oi_id_EIA
						- StateNaAllocatie/Cumulaties/@RO@/Stock/Oi_wd_EIA
						- StateNaAllocatie/Cumulaties/@RO@/Stock/Oi_pt_EIA
						- StateNaAllocatie/Cumulaties/@RO@/Stock/Oi_ow_EIA
						
					',	'@RO@', Classifications/GebiedsOptie/Name);
		}

		container CashFlow := for_each_nedv(Classifications/GebiedsOptie/Name
			,	IsDefined(invert(Voorkeuren/ActieveGebiedsOptie/GebiedsOptie_rel)) ? impl/FlowExpr : 'const(0[Eur_yr], PlanRegio)'
			,	PlanRegio, Eur_yr)
		{
			attribute<Eur_yr> Kj_Totaal  (PlanRegio) := ='add('+AsItemList(Classifications/GebiedsOptie/Name)+')';
		}

		attribute<Eur_yr> Kj_Totaal (PlanRegio):= CashFlow/Kj_Totaal;

		container Stock := for_each_nedv(Classifications/GebiedsOptie/Name
			,	IsDefined(invert(Voorkeuren/ActieveGebiedsOptie/GebiedsOptie_rel)) ? impl/StockExpr : 'const(0[Eur], PlanRegio)'
			,	PlanRegio, Eur)
		{
			attribute<Eur> Ki_Totaal(PlanRegio) := ='add('+AsItemList(Classifications/GebiedsOptie/Name)+')';
		}
		attribute<Eur> Ki_Totaal(PlanRegio) := Stock/Ki_Totaal; // totale investeringen zonder aftrek van de te ontvangen aansluitbijdrage.
	}

	container netwerken
	{
		attribute<bool> heeft_gas (PlanRegio) := TussenResultaten/AllocatieResultaten/heeft_gas;

		attribute<nrWoningen> nrWoonUnits     (Planregio) := ='add('+AsItemList(replace('sum(BebouwingsComponenten/@BC@/BebouwingsObject/nrWoonUnits_i, BebouwingsComponenten/@BC@/PlanRegio_rel)', '@BC@',Classifications/BebouwingsComponent/name) )+')';
		attribute<nrWoningen> nrAllElectric   (Planregio) := ='add('+AsItemList(replace('sum(BebouwingsComponenten/@BC@/BebouwingsObject/nrWoonUnits_i * Allocatie/@BC@/Aandelen/AllElectric, BebouwingsComponenten/@BC@/PlanRegio_rel)', '@BC@',Classifications/BebouwingsComponent/name) )+')';
		attribute<float64>    R_all_electric  (Planregio) := makedefined(nrAllElectric / nrWoonUnits, 0.0);
		attribute<bool >      all_electric    (Planregio) := R_all_electric > 0.999, // tolereer afronding fouten en kleine afwijkingen
			IntegrityCheck = "!(heeft_gas && all_electric)";

		container aardgas
		{
			attribute<bool>   had_gas         (Planregio) := /TussenResultaten/StartJaar/AllocatieResultaten/heeft_gas; // false voor bestaande restwarmte
			attribute<bool>   verwijderd      (Planregio) := had_gas && !heeft_gas; // alleen true als hele planregio gasloos is geworden

			// inkomsten
			attribute<Eur_yr> netbijdrage     (Planregio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsComponent/name+'/gebouwen/Aardgas/netwerk'  )+')';
			attribute<Eur_yr> vastrecht       (Planregio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsComponent/Name+'/gebouwen/AardGas/Vastrecht')+')';
			attribute<Eur_yr> Aansl_m         (Planregio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsComponent/Name+'/gebouwen/AardGas/Aansl_m'  )+')';
			attribute<Eur_yr> Oj_totaal       (Planregio) := netbijdrage + vastrecht;

			// kosten
			attribute<m>      L_infra_nu      (PlanRegio) := float64(heeft_gas ) * StateNaAllocatie/KostenBaten/KostenD/L_infra_g;
			attribute<m>      L_infra_org     (PlanRegio) := StartJaar/netwerken/aardgas/L_infra_nu;
			attribute<m>      L_infra         (PlanRegio) := max_elem(L_infra_nu, L_infra_org);

			attribute<Eur_yr> kapitaallasten  (Planregio) := L_infra    * Kengetallen/Infra/Kj_g_m;
			attribute<Eur_yr> onderhoud       (Planregio) := L_infra_nu * Kengetallen/Infra/Ko_g_m;
			attribute<Eur_yr> vervangen       (Planregio) := (kosten/kosten_verv_LD_net) * NCW/mr50/AnnualisationFactor;
			attribute<Eur_yr> verwijderen     (Planregio) := (kosten/kosten_verw_g_aansl + kosten/kosten_verw_LD_net) * NCW/mr50/AnnualisationFactor;
			attribute<Eur_yr> verwijderkosten (Planregio) := verwijderen + vervangen;
			attribute<Eur_yr> Kj_totaal       (Planregio) := kapitaallasten + verwijderkosten + onderhoud;
			attribute<Eur_yr> Kj_netto        (Planregio) := Kj_totaal - Oj_totaal - Aansl_m;
		}
		container elektriciteit
		{
			// inkomsten
			attribute<Eur_yr> netbijdrage     (Planregio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsComponent/name+'/gebouwen/Elektriciteit/netwerk'  )+')';
			attribute<Eur_yr> vastrecht       (Planregio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsComponent/Name+'/gebouwen/Elektriciteit/Vastrecht')+')';
			attribute<Eur_yr> Aansl_m         (Planregio) := ='add('+AsItemList('Eindgebruiker/'+Classifications/BebouwingsComponent/Name+'/gebouwen/Elektriciteit/Aansl_m'  )+')';
			attribute<Eur_yr> Oj_totaal       (Planregio) := netbijdrage + vastrecht;

			// kosten
			attribute<m>      L_infra         (PlanRegio) := StateNaAllocatie/KostenBaten/KostenD/L_infra_e;

			attribute<Eur_yr> kapitaallasten  (Planregio) := L_infra * Kengetallen/Infra/Kj_e_m;
			attribute<Eur_yr> onderhoud       (Planregio) := L_infra * Kengetallen/Infra/Ko_e_m;
			attribute<Eur_yr> netverzwaring   (Planregio) := (kosten/kosten_verzw_e_aansl + kosten/kosten_verzw_MSR + kosten/kosten_verzw_LS) * NCW/mr50/AnnualisationFactor;
			attribute<Eur_yr> Kj_totaal       (Planregio) := kapitaallasten + netverzwaring + onderhoud;
			attribute<Eur_yr> Kj_netto        (Planregio) := Kj_totaal - Oj_totaal - Aansl_m;
		}
		
		container kosten //TO DO: verwijzing toevoegen
		{
			attribute<Eur>                 kosten_verv_LD_net        (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/kosten_verv_LD_net;
			attribute<Eur>                 kosten_verw_g_aansl_laagb (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/kosten_verw_g_aansl_laagb;
			attribute<Eur>                 kosten_verw_g_aansl_hoogb (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/kosten_verw_g_aansl_hoogb;
			attribute<Eur>                 kosten_verw_g_aansl_util  (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/kosten_verw_g_aansl_util;
			attribute<Eur>                 kosten_verw_g_aansl       (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/kosten_verw_g_aansl;
			attribute<Eur>                 kosten_verw_LD_net        (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/kosten_verw_LD_net;
			attribute<Eur>                 kosten_verzw_e_aansl      (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/kosten_verzw_e_aansl;
			attribute<Eur>                 kosten_verzw_MSR          (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/kosten_verzw_MSR;
			attribute<Eur>                 kosten_verzw_LS           (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/kosten_verzw_LS;
				
			container cumulatief
			{
				attribute<Eur>                 kosten_verv_LD_net        (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/cumulatief/kosten_verv_LD_net;
				attribute<Eur>                 kosten_verw_g_aansl_laagb (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/cumulatief/kosten_verw_g_aansl_laagb;
				attribute<Eur>                 kosten_verw_g_aansl_hoogb (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/cumulatief/kosten_verw_g_aansl_hoogb;
				attribute<Eur>                 kosten_verw_g_aansl_util  (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/cumulatief/kosten_verw_g_aansl_util;
				attribute<Eur>                 kosten_verw_g_aansl       (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/cumulatief/kosten_verw_g_aansl;
				attribute<Eur>                 kosten_verw_LD_net        (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/cumulatief/kosten_verw_LD_net;
				attribute<Eur>                 kosten_verzw_e_aansl      (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/cumulatief/kosten_verzw_e_aansl;
				attribute<Eur>                 kosten_verzw_MSR          (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/cumulatief/kosten_verzw_MSR;
				attribute<Eur>                 kosten_verzw_LS           (PlanRegio)  := StateNaAllocatie/Infra_per_buurt/Kosten/cumulatief/kosten_verzw_LS;
			}
		}
	}
	
	container MaatregelenRapportage
	{
		unit<uint32> RapportageRegio := SpecifiekeInstellingen/Rapportage/Regio;
		container BestaandeWoning :=
			for_each_ne(
				 RapportageRegio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/BestaandeWoning, '+quote('BestaandeWoning')+'
					, '+Classifications/WoningBestaandRapGroep/ClassRef[SpecifiekeInstellingen/Rapportage/WoningBestaandRapGroep_rel]+'
					, '+quote('BebouwingsObject/'+Classifications/WoningBestaandRapGroep/AttrRef [ SpecifiekeInstellingen/Rapportage/WoningBestaandRapGroep_rel ])+'
					, Classifications/WoningBestaandRapGroep/ExportLabel [ SpecifiekeInstellingen/Rapportage/WoningBestaandRapGroep_rel ]
					, units/nrWoningen
				)'
			);

		container NieuwbouwWoning :=
			for_each_ne(
				 RapportageRegio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/NieuwbouwWoning, '+quote('NieuwbouwWoning')+'
					, BebouwingsComponenten/NieuwbouwWoning/BebouwingsTypeDomein
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('WoningType')+'
					, units/nrWoningen
				)'
			);

		container BestaandeUtil:=
			for_each_ne(
				 RapportageRegio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/BestaandeUtil, '+quote('BestaandeUtil')+'
					, BebouwingsComponenten/BestaandeUtil/BebouwingsTypeDomein
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('UtiliteitsType')+'
					, units/m2
				)'
			);

		container NieuwbouwUtil:=
			for_each_ne(
				 SpecifiekeInstellingen/Rapportage/Regio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/NieuwbouwUtil, '+quote('NieuwbouwUtil')+'
					, BebouwingsComponenten/NieuwbouwUtil/BebouwingsTypeDomein
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('UtiliteitsType')+'
					, units/m2
				)'
			);

		container BestaandeGlTb :=
			for_each_ne(
				 SpecifiekeInstellingen/Rapportage/Regio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/BestaandeGlTb, '+quote('BestaandeGlTb')+'
					, Classifications/GLTB
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('GlasTuinBouwType')+'
					, units/m2
				)'
			);

		container NieuwbouwGlTb:=
			for_each_ne(
				 SpecifiekeInstellingen/Rapportage/Regio/Name
				, 'Rapportage/RegionaleRapportage(
					  RapportageRegio, '+string(id(RapportageRegio))+'[RapportageRegio]
					, Allocatie/NieuwbouwGlTb, '+quote('NieuwbouwGlTb')+'
					, Classifications/GlTb
					, '+quote('RuimtelijkeVraagComponent/BebouwingsType')+'
					, '+quote('NieuwbouwGlTb')+'
					, units/m2
				)'
			);
	}

	container InputOutput :=
		for_each_ne(
			 SpecifiekeInstellingen/Rapportage/Regio/Name
		,	'Rapportage/Flow('
				'SpecifiekeInstellingen/Rapportage/Regio'
				','+Quote(SpecifiekeInstellingen/Rapportage/Regio/Name)+
				', value('+ string(id(SpecifiekeInstellingen/Rapportage/Regio)) + ',SpecifiekeInstellingen/Rapportage/Regio)'
			')'
		)
	{
		container Totaal := =(SpecifiekeInstellingen/Rapportage/Regio/Name != 'NL')
			? 'Rapportage/Flow(geography/RegioIndelingen/NL, ''NL'', value(0, geography/RegioIndelingen/NL) )'
			: '.';
	}
	
	container Generate: isHidden = "True"
	{
		parameter<String> All := 'Ready',
			ExplicitSuppliers =
				"= ';' + AsList('InputOutput/'+SpecifiekeInstellingen/Rapportage/Regio/Name+'/GenerateAll',';')"
				"+ (SpecifiekeInstellingen/Rapportage/Regio/Name != 'NL' ? ';InputOutput/Totaal/GenerateAll': '')"
				"+ ';' + AsList('MaatregelenRapportage/BestaandeWoning/'+SpecifiekeInstellingen/Rapportage/Regio/Name+'/GenerateAll',';')"
				"+ ';' + AsList('MaatregelenRapportage/NieuwbouwWoning/'+SpecifiekeInstellingen/Rapportage/Regio/Name+'/GenerateAll',';')"
				"+ ';' + AsList('MaatregelenRapportage/BestaandeUtil/'  +SpecifiekeInstellingen/Rapportage/Regio/Name+'/GenerateAll',';')"
				"+ ';' + AsList('MaatregelenRapportage/NieuwbouwUtil/'  +SpecifiekeInstellingen/Rapportage/Regio/Name+'/GenerateAll',';')"
				"+ ';' + AsList('MaatregelenRapportage/BestaandeGlTb/'  +SpecifiekeInstellingen/Rapportage/Regio/Name+'/GenerateAll',';')"
				"+ ';' + AsList('MaatregelenRapportage/NieuwbouwGlTb/'  +SpecifiekeInstellingen/Rapportage/Regio/Name+'/GenerateAll',';')"
	//			"+ ';' + 'AllocExports/GenerateThisToo'" // comment-out if you want to skip all exports
			;
	}
	#include <AllocExports.dms>

	container FolderInfo: isHidden = "True"
	{
		parameter<string> RunName      := Expand(., '%configName%');
		parameter<string> OutputFolder := '%localDataProjDir%/Results/'+ RunName +'/'+ RekenstapName;
	}
	
	container RegressieTest: isHidden = "True"
	{
		parameter<bool>   PotentiaalKaartLeesbaar : = all(Grid100m/totaal/Vraag/Potentiaal/totaal >= 0.0) && sum(Grid100m/totaal/Vraag/Potentiaal/totaal) > 0.0;
		parameter<bool>   All                     : = PotentiaalKaartLeesbaar;
		parameter<string> Generate                := 'Ready'
		,	IntegrityCheck    = "All"
		,	ExplicitSuppliers = "Generate/All"; // Generates All reports.
	}
	
	container PR_LD: isHidden = "True"
	{
		//statische indicatoren per buurt
		container Statisch
		{
			attribute<String>		I01_Buurtcode				(Planregio)	:=	Geography/RegioIndelingen/buurt/BU_CODE;
			attribute<String>		I02_Buurtnaam				(Planregio)	:=	Geography/RegioIndelingen/buurt/BU_NAAM;
			attribute<String>		I03_Wijkcode				(Planregio)	:=	Geography/RegioIndelingen/buurt/WK_CODE;
			attribute<String>		I04_Wijknaam				(Planregio)	:=	Geography/RegioIndelingen/buurt/WK_NAAM;
			attribute<String>		I05_Gemeentecode			(Planregio)	:=	Geography/RegioIndelingen/buurt/GM_CODE;
			attribute<String>		I06_Gemeentenaam			(Planregio)	:=	Geography/RegioIndelingen/buurt/GM_NAAM;
			attribute<String>		I07_Energieregio			(Planregio)	:=	Geography/RegioIndelingen/buurt/ER_NAAM;
			attribute<String>		I08_Provincienaam			(Planregio)	:=	Geography/RegioIndelingen/buurt/PROV_NAAM;
			attribute<nrAansl>		I09_Vbo_woningen			(Planregio)	:=	float64(round(0.49 + sum(BebouwingsComponenten/BestaandeWoning/RuimtelijkeVraagComponent/nrAansluitingen,	BebouwingsComponenten/BestaandeWoning/PlanRegio_rel)));
			attribute<nrAansl>		I10_vbo_utiliteit			(Planregio)	:=	float64(round(0.49 + sum(BebouwingsComponenten/BestaandeUtil/RuimtelijkeVraagComponent/nrAansluitingen,		BebouwingsComponenten/BestaandeUtil/PlanRegio_rel)));
			attribute<nrWoningen>	I11_Woningequivalenten		(Planregio)	:=	float64(round(0.49 + nrWEQ));	//100m2 utiliteit = 1 WEQ
		}		
		//dynamische indicatoren op hoofdlijnen
		container Hoofdindicatoren
		{
			attribute<GJ_yr_WEQ>	H01_Vraag_warmtetotaal		(Planregio)	:=	add(H02_Vraag_aardgas, H03_Vraag_groengas, H04_Vraag_MTwarmte, H05_Vraag_LTwarmte, H06_Vraag_elekwarmte);	
			attribute<GJ_yr_WEQ>	H02_Vraag_aardgas			(Planregio)	:=	makedefined((Groengas ? 0 [GJ_yr] : (subitem/BW_aardgas + subitem/BU_aardgas))	/ nrWEQ, 0.0[GJ_yr_WEQ]);
			attribute<GJ_yr_WEQ>	H03_Vraag_groengas			(Planregio)	:=	makedefined((Groengas ? (subitem/BW_aardgas + subitem/BU_aardgas): 0 [GJ_yr])	/ nrWEQ, 0.0[GJ_yr_WEQ]);
			attribute<GJ_yr_WEQ>	H04_Vraag_MTwarmte			(Planregio)	:=	makedefined(subitem/V_Buurt_MT													/ nrWEQ, 0.0[GJ_yr_WEQ]);
			attribute<GJ_yr_WEQ>	H05_Vraag_LTwarmte			(Planregio)	:=	makedefined(subitem/V_Buurt_LT													/ nrWEQ, 0.0[GJ_yr_WEQ]);
			attribute<GJ_yr_WEQ>	H06_Vraag_elekwarmte		(Planregio)	:=	makedefined((subitem/BW_ewP_warmte + subitem/BU_eWP_warmte)						/ nrWEQ, 0.0[GJ_yr_WEQ]);
			attribute<GJ_yr_WEQ>	H07_Vraag_elektotaal		(Planregio)	:=	(subitem/BW_elek + subitem/BU_elek + subitem/V_elek_col) / nrWEQ;
			attribute<GJ_yr_ha>		H08_Warmte_hectare			(Planregio)	:=	subitem/Warmtevraag / subitem/Oppervlak;
			attribute<GJ_yr_WEQ>	H09_Vraag_koude				(Planregio)	:=	(subitem/BW_koude + subitem/BU_koude)						/ nrWEQ;
			attribute<KG_yr_WEQ>	H10_Uitstoot_CO2			(Planregio)	:=	(AllocExports/PlanRegioResults/Table/CO2_totaal)			/ nrWEQ;
			attribute<Eur_yr_WEQ>	H11_Nationale_kosten		(Planregio)	:=	(maatschappelijk/Kmi_totaal - maatschappelijk/Om_comfort)	/ nrWEQ;
			attribute<Eur_ton>		H12_Eur_vermeden_CO2		(Planregio)	:=	makedefined((subitem/Delta_nat_kosten / subitem/Delta_CO2_ton), 0.0[EUR_ton]);
		}
		
		//alternatieve nationale kosten DUMMYWAARDEN
		container Gevoeligheidsanalyses
		{
			attribute<Eur_yr_WEQ>	G01_investering_min		(Planregio)	:=	Hoofdindicatoren/H11_Nationale_kosten * 1.10;
			attribute<Eur_yr_WEQ>	G02_investering_max		(Planregio)	:=	Hoofdindicatoren/H11_Nationale_kosten * 0.90;
			attribute<Eur_yr_WEQ>	G03_leercurves_min		(Planregio)	:=	Hoofdindicatoren/H11_Nationale_kosten * 1.40;
			attribute<Eur_yr_WEQ>	G04_leercurves_max		(Planregio)	:=	Hoofdindicatoren/H11_Nationale_kosten * 0.60;
			attribute<Eur_yr_WEQ>	G05_E_prijzen_min		(Planregio)	:=	Hoofdindicatoren/H11_Nationale_kosten * 0.75;
			attribute<Eur_yr_WEQ>	G06_E_prijzen_max		(Planregio)	:=	Hoofdindicatoren/H11_Nationale_kosten * 1.25;
			attribute<Eur_yr_WEQ>	G07_efficiency_min		(Planregio)	:=	Hoofdindicatoren/H11_Nationale_kosten * 1.15;
			attribute<Eur_yr_WEQ>	G08_efficiency_max		(Planregio)	:=	Hoofdindicatoren/H11_Nationale_kosten * 0.85;
			attribute<Eur_yr_WEQ>	G09_label_Aplus			(Planregio)	:=	Hoofdindicatoren/H11_Nationale_kosten * 1.80;
		}
		
		container Eindgebruikers
		{		
		//eindverbruikerskosten woningen
			attribute<EUR>		I22_W_eig_investering		(Planregio)	:=	subitem/W_Ki_aansl + subitem/W_Ki_gebouw + subitem/W_Ki_instal;
			attribute<EUR>		I23_W_eig_subsidie			(Planregio)	:=	const(0.0[Eur], Planregio); // voor nu geen subsidies opgenomen
			attribute<EUR_yr>	I24_W_eig_kapitaallast		(Planregio)	:=	subitem/W_KL_installatie + subitem/W_KL_gebouw + subitem/W_KL_aansl;
			attribute<EUR_yr>	I25_W_eig_splitincentive	(Planregio)	:=	const(0.0[Eur_yr], Planregio); //split incentive moet nog over besloten worden
			attribute<EUR>		I26_W_eig_BTWinvest			(Planregio)	:=	I22_W_eig_investering * 0.21; //voor nu constant, afhankelijk van beleidsscenario
			attribute<EUR_yr>	I27_W_geb_inkoopgas			(Planregio)	:=	(Groengas ? 3d : 1d) * sum(Allocatie/BestaandeWoning/Aardgas/eindgebruik_excl, BebouwingsComponenten/BestaandeWoning/PlanRegio_rel);
			attribute<EUR_yr>	I28_W_geb_inkoopwarmte		(Planregio)	:=	subitem/W_MT_rest + subitem/W_MT_bio + subitem/W_MT_geo;
			attribute<EUR_yr>	I29_W_geb_inkoopElek		(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/Elektriciteit/Vraag_excl;
			attribute<EUR_yr>	I30_W_geb_splitincentive	(Planregio)	:=	const(0.0[Eur_yr], Planregio);//split incentive moet nog over besloten worden
			attribute<EUR_yr>	I31_W_geb_energiebelasting	(Planregio)	:=	subitem/W_EH_gas + subitem/W_EH_elek;
				
		//eindverbruikerskosten utiliteit
			attribute<EUR>		I32_U_eig_investering		(Planregio)	:=	subitem/U_Ki_aansl + subitem/U_Ki_gebouw + subitem/U_Ki_instal;
			attribute<EUR>		I33_U_eig_subsidie			(Planregio)	:=	const(0.0[Eur], Planregio); // voor nu geen subsidies opgenomen
			attribute<EUR_yr>	I34_U_eig_kapitaallast		(Planregio)	:=	subitem/U_KL_installatie + subitem/U_KL_gebouw + subitem/U_KL_aansl;
			attribute<EUR_yr>	I35_U_eig_splitincentive	(Planregio)	:=	const(0.0[Eur_yr], Planregio); //split incentive moet nog over besloten worden
			attribute<EUR_yr>	I36_U_geb_inkoopgas			(Planregio)	:=	(Groengas ? 3d : 1d) * sum(Allocatie/BestaandeUtil/Aardgas/eindgebruik_excl, BebouwingsComponenten/BestaandeUtil/PlanRegio_rel);
			attribute<EUR_yr>	I37_U_geb_inkoopwarmte		(Planregio)	:=	subitem/U_MT_rest + subitem/U_MT_bio + subitem/U_MT_geo;
			attribute<EUR_yr>	I38_U_geb_inkoopElek		(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/Elektriciteit/Vraag_excl;
			attribute<EUR_yr>	I39_U_geb_splitincentive	(Planregio)	:=	const(0.0[Eur_yr], Planregio);//split incentive moet nog over besloten worden
			attribute<EUR_yr>	I40_U_geb_energiebelasting	(Planregio)	:=	subitem/U_EH_gas + subitem/U_EH_elek;
				
		//warmtebedrijf
			attribute<EUR>		I41_Wbedrijf_investering	(Planregio)	:=	StateNaAllocatie/Stock/Ki_Totaal;
			attribute<EUR>		I42_Wbedrijf_subsidie		(Planregio)	:=	const(0.0[Eur], Planregio); // voor nu geen subsidies opgenomen
			attribute<EUR_yr>	I43_Wbedrijf_kapitaallast	(Planregio)	:=	StateNaAllocatie/Flow/Kji_KL;
			attribute<EUR_yr>	I44_Wbedrijf_inkoopenergie	(Planregio)	:=	(Groengas ? 3d : 1d) * StateNaAllocatie/Flow/Kj_wd_verbruik;
			attribute<EUR_yr>	I45_Wbedrijf_inkomsten		(Planregio)	:=	StateNaAllocatie/Flow/Oj_totaal;
			attribute<EUR_yr>	I46_Wbedrijf_lopendekosten	(Planregio)	:=	StateNaAllocatie/Flow/Kj_lopendekosten;
			attribute<EUR_yr>	I47_Wbedrijf_energiebel		(Planregio)	:=	StateNaAllocatie/Flow/Kj_EH_bijstook;
			attribute<EUR_yr>	I48_Wbedrijf_resultaat		(Planregio)	:=	StateNaAllocatie/Flow/Kji_netto; //dit moet nog nader gecontroleerd worden
						
		//maatschappelijk
			attribute<EUR>		I49_Gnet_verwijderen		(Planregio)	:=	(hoofdindicatoren/I11_Vraag_aardgas + hoofdindicatoren/I12_Vraag_groengas > 10 [GJ_yr]) ? const(0.0[EUR], Planregio) : const(100.0[EUR],Planregio); // nog niet geimplementeerd
			attribute<EUR>		I51_Gnet_vervangen			(Planregio)	:=	(hoofdindicatoren/I11_Vraag_aardgas + hoofdindicatoren/I12_Vraag_groengas < 10 [GJ_yr]) ? const(0.0[EUR], Planregio) : const(100.0[EUR],Planregio); // nog niet geimplementeerd
			attribute<EUR_yr>	I50_Gnet_kapitaallast		(Planregio)	:=	maatschappelijk/net/Aardgas;
			attribute<EUR>		I52_Enet_verzwaren			(Planregio)	:=	const(333.0[EUR], Planregio); // nog niet geimplementeerd
			attribute<EUR_yr>	I53_Enet_kapitaallast		(Planregio)	:=	maatschappelijk/net/Elektriciteit;
		}
		
		parameter<bool>	Groengas			:=	true;
		attribute<nrWoningen>	nrWEQ	(Planregio)	:=	netwerken/nrWoonunits;
				
		container subitem
			{
			//energieverbruik
			attribute<GJ_yr>	BW_eWP_warmte		(Planregio)		:=	sum(Allocatie/BestaandeWoning/Metervraag/eWP,				BebouwingsComponenten/BestaandeWoning/PlanRegio_rel);
			attribute<GJ_yr>	BU_eWP_warmte		(Planregio)		:=	sum(Allocatie/BestaandeUtil/Metervraag/eWP, 				BebouwingsComponenten/BestaandeUtil/PlanRegio_rel);
			attribute<GJ_yr>	BW_LT_warmte		(Planregio)		:=	sum(Allocatie/BestaandeWoning/Metervraag/warmteLT,			BebouwingsComponenten/BestaandeWoning/PlanRegio_rel);
			attribute<GJ_yr>	BU_LT_warmte		(Planregio)		:=	sum(Allocatie/BestaandeUtil/Metervraag/warmteLT,			BebouwingsComponenten/BestaandeUtil/PlanRegio_rel);
			attribute<GJ_yr>	BU_aardgas			(Planregio)		:=	sum(Allocatie/BestaandeUtil/Metervraag/aardgas,				BebouwingsComponenten/BestaandeUtil/PlanRegio_rel);
			attribute<GJ_yr>	BW_aardgas			(Planregio)		:=	sum(Allocatie/BestaandeWoning/Metervraag/aardgas,			BebouwingsComponenten/BestaandeWoning/PlanRegio_rel);
			attribute<GJ_yr>	BU_koude			(Planregio)		:=	sum(Allocatie/BestaandeUtil/Metervraag/koude,				BebouwingsComponenten/BestaandeUtil/PlanRegio_rel);
			attribute<GJ_yr>	BW_koude			(Planregio)		:=	sum(Allocatie/BestaandeWoning/Metervraag/koude,				BebouwingsComponenten/BestaandeWoning/PlanRegio_rel);
			
			attribute<GJ_yr>	V_Buurt_LT			(Planregio)		:=	add(	StateNaAllocatie/Cumulaties/Lt15_30/verbruik/V_Warmte,
																				StateNaAllocatie/Cumulaties/Lt15_50/verbruik/V_Warmte,
																				StateNaAllocatie/Cumulaties/Lt15_70/verbruik/V_Warmte,
																				StateNaAllocatie/Cumulaties/Lt30_30/verbruik/V_Warmte,
																				StateNaAllocatie/Cumulaties/Lt30_50/verbruik/V_Warmte,
																				StateNaAllocatie/Cumulaties/Lt30_70/verbruik/V_Warmte,
																				StateNaAllocatie/Cumulaties/WKO/verbruik/V_Warmte);	
			
			attribute<GJ_yr>	V_Buurt_MT			(Planregio)		:=	add(	StateNaAllocatie/Cumulaties/RestWarmte/verbruik/V_Warmte,
																				StateNaAllocatie/Cumulaties/Geothermie/verbruik/V_Warmte,
																				StateNaAllocatie/Cumulaties/WijkWKK/verbruik/V_Warmte,
																				StateNaAllocatie/Cumulaties/BioWKK/verbruik/V_Warmte);

			attribute<GJ_yr>	V_elek_col_id		(Planregio)		:=	StateNaAllocatie/totaal/verbruik/V_id_elek;
			attribute<GJ_yr>	V_elek_col_wd		(Planregio)		:=	StateNaAllocatie/totaal/verbruik/V_wd_elek;
			attribute<GJ_yr>	V_elek_col_ow		(Planregio)		:=	StateNaAllocatie/totaal/verbruik/V_ow_elek;
			attribute<GJ_yr>	BU_elek				(Planregio)		:=	sum(Allocatie/BestaandeUtil/Metervraag/elektriciteit,		BebouwingsComponenten/BestaandeUtil/PlanRegio_rel);
			attribute<GJ_yr>	BW_elek				(Planregio)		:=	sum(Allocatie/BestaandeWoning/Metervraag/elektriciteit,		BebouwingsComponenten/BestaandeWoning/PlanRegio_rel);
			attribute<GJ_yr>	V_elek_col			(Planregio)		:=	add(V_elek_col_id, V_elek_col_wd, V_elek_col_ow);
			
			attribute<ha>		Oppervlak			(Planregio)		:=	( Geography/RegioIndelingen/buurt/AreaInKm2 * ( Geography/RegioIndelingen/buurt/Overigen/p_land_com / 100d)) / 100[km2 / ha], Descr = "landoppervlakte van de buurt";
			attribute<GJ_yr>	Warmtevraag			(Planregio)		:=	Hoofdindicatoren/H01_Vraag_warmtetotaal * nrWEQ;
			
			attribute<kg_yr>	Orig_CO2			(Planregio)		:=	StartJaar/AllocExports/PlanRegioResults/Table/CO2_totaal;
			attribute<kg_yr>	Delta_CO2			(Planregio)		:=	Orig_CO2 - (hoofdindicatoren/H10_Uitstoot_CO2 * nrWEQ);
			attribute<ton_yr>	Delta_CO2_ton		(Planregio)		:=	Delta_CO2 / 1000.0[kg_yr / ton_yr];
			
			attribute<EUR_yr>	Orig_nat_kosten		(Planregio)		:=	StartJaar/maatschappelijk/Kmi_totaal - StartJaar/maatschappelijk/Om_comfort;
			attribute<EUR_yr>	Delta_nat_kosten	(Planregio)		:=	(hoofdindicatoren/H11_Nationale_kosten * nrWEQ) - Orig_nat_kosten;
					
			//energieverbruik kosten heffing
			attribute<EUR_yr>	U_EH_gas	(Planregio)	:=	sum(Allocatie/BestaandeUtil/Aardgas/EnergieHeffing,				BebouwingsComponenten/BestaandeUtil/PlanRegio_rel);
			attribute<EUR_yr>	U_EH_elek	(Planregio)	:=	sum(Allocatie/BestaandeUtil/Elektriciteit/EnergieHeffing,		BebouwingsComponenten/BestaandeUtil/PlanRegio_rel);
			attribute<EUR_yr>	W_EH_gas	(Planregio)	:=	sum(Allocatie/BestaandeWoning/Aardgas/EnergieHeffing,			BebouwingsComponenten/BestaandeWoning/PlanRegio_rel);
			attribute<EUR_yr>	W_EH_elek	(Planregio)	:=	sum(Allocatie/BestaandeWoning/Elektriciteit/EnergieHeffing,		BebouwingsComponenten/BestaandeWoning/PlanRegio_rel);					
					
			//energieverbruik kosten mt warmte
			attribute<EUR_yr>	W_MT_rest	(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/RestWarmte/Vraag_excl;
			attribute<EUR_yr>	W_MT_bio	(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/BioWKK/Vraag_excl;
			attribute<EUR_yr>	W_MT_geo	(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/GeoThermie/Vraag_excl;
			attribute<EUR_yr>	U_MT_rest	(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/RestWarmte/Vraag_excl;
			attribute<EUR_yr>	U_MT_bio	(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/BioWKK/Vraag_excl;
			attribute<EUR_yr>	U_MT_geo	(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/GeoThermie/Vraag_excl;
					
			//aansluitbijdrages
			attribute<EUR>	W_MT_aansl_rest	(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/RestWarmte/Oi_aanslD;
			attribute<EUR>	W_MT_aansl_bio	(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/BioWKK/Oi_aanslD;
			attribute<EUR>	W_MT_aansl_geo	(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/GeoThermie/Oi_aanslD;
			attribute<EUR>	W_Lt_aansl	(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/WKO/aansl_i;
			attribute<EUR>	W_Ki_aansl	(Planregio)	:=	W_MT_aansl_rest + W_MT_aansl_bio + W_MT_aansl_geo + W_Lt_aansl;
			attribute<EUR>	U_MT_aansl_rest		(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/RestWarmte/Oi_aanslD;
			attribute<EUR>	U_MT_aansl_bio	(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/BioWKK/Oi_aanslD;
			attribute<EUR>	U_MT_aansl_geo	(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/GeoThermie/Oi_aanslD;
			attribute<EUR>	U_Lt_aansl	(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/WKO/aansl_i;
			attribute<EUR>	U_ki_aansl	(Planregio)	:=	U_MT_aansl_rest + U_MT_aansl_bio + U_MT_aansl_geo + U_Lt_aansl;
					
			//kapitaallasten aansluitbijdrages
			attribute<EUR_yr>	W_KL_aansl_lt		(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/WKO/Aansl_j; // andere LT opties nog niet toegevoegd
			attribute<EUR_yr>	W_KL_aansl_bio		(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/BioWKK/Aansl_j;
			attribute<EUR_yr>	W_KL_aansl_geo		(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/GeoThermie/Aansl_j;
			attribute<EUR_yr>	W_KL_aansl_rest		(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/RestWarmte/Aansl_j;
			attribute<EUR_yr>	U_KL_aansl_lt		(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/WKO/Aansl_j;
			attribute<EUR_yr>	U_KL_aansl_bio		(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/BioWKK/Aansl_j;
			attribute<EUR_yr>	U_KL_aansl_geo		(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/GeoThermie/Aansl_j;
			attribute<EUR_yr>	U_KL_aansl_rest		(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/RestWarmte/Aansl_j;
										
			//kapitaallasten
			attribute<EUR_yr>	W_KL_installatie	(Planregio)	:=	Eindgebruiker/BestaandeWoning/LokaleEnergieProductie/Kw_Totaal_excl;
			attribute<EUR_yr>	U_KL_installatie	(Planregio)	:=	Eindgebruiker/BestaandeUtil/LokaleEnergieProductie/Kw_Totaal_excl;
			attribute<EUR_yr>	W_KL_gebouw	(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/Kw_GebouwVerbetering_excl;
			attribute<EUR_yr>	U_KL_gebouw	(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/Kw_GebouwVerbetering_excl;
			attribute<EUR_yr>	W_KL_aansl	(Planregio)	:=	W_KL_aansl_lt + W_KL_aansl_bio + W_KL_aansl_geo + W_KL_aansl_rest;
			attribute<EUR_yr>	U_KL_aansl	(Planregio)	:=	U_KL_aansl_lt + U_KL_aansl_bio + U_KL_aansl_geo + U_KL_aansl_rest;
					
			//investeringen
			attribute<EUR>	W_Ki_gebouw		(Planregio)	:=	Eindgebruiker/BestaandeWoning/gebouwen/Ki_GebouwVerbetering_excl;
			attribute<EUR>	U_Ki_gebouw		(Planregio)	:=	Eindgebruiker/BestaandeUtil/gebouwen/Ki_GebouwVerbetering_excl;
			attribute<EUR>	W_Ki_instal30	(Planregio)	:=	Eindgebruiker/BestaandeWoning/LokaleEnergieProductie/Ki_Totaal30;
			attribute<EUR>	W_Ki_instal15	(Planregio)	:=	Eindgebruiker/BestaandeWoning/LokaleEnergieProductie/Ki_Totaal15;
			attribute<EUR>	U_Ki_instal30	(Planregio)	:=	Eindgebruiker/BestaandeUtil/LokaleEnergieProductie/Ki_Totaal30;
			attribute<EUR>	U_Ki_instal15	(Planregio)	:=	Eindgebruiker/BestaandeUtil/LokaleEnergieProductie/Ki_Totaal15;
			attribute<EUR>	W_Ki_instal		(Planregio)	:=	W_Ki_instal30 + W_Ki_instal15;
			attribute<EUR>	U_Ki_instal		(Planregio)	:=	U_Ki_instal30 + U_Ki_instal15;
					
			}
	}
}